mspacek@Godel:~/SciPyCourse2019/notes/00_intro$ python3
Python 3.6.7 (default, Oct 22 2018, 11:32:17)
[GCC 8.2.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> 1 + 2 *3
7
>>>
mspacek@Godel:~/SciPyCourse2019/notes/00_intro$ python3
Python 3.6.7 (default, Oct 22 2018, 11:32:17)
[GCC 8.2.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> import numpy as np
>>> import matplotlib as mpl
>>> from matplotlib import pyplot as plt
>>>
>>> # load data:
... mV = np.load('LFP_example_data.npy') # voltage signal, in mV
>>> V = mV / 1000 # convert to V
>>> npoints = len(V)
>>> sampfreq = 1000 # Hz
>>> t = np.arange(npoints) / sampfreq
>>>
>>> # plot all data:
... f1, a1 = plt.subplots(figsize=(10, 3)) # create a figure and axes
>>> a1.plot(t, V, '-', c='black')
[<matplotlib.lines.Line2D object at 0x7f7124241860>]
>>> a1.set_xlim((t[0], t[-1])) # set hard x limits
(0.0, 3601.246)
>>> a1.set_title('LFP example data')
Text(0.5, 1.0, 'LFP example data')
>>> a1.set_xlabel('Time (s)')
Text(0.5, 13.944444444444452, 'Time (s)')
>>> a1.set_ylabel('Volage (V)')
Text(13.944444444444445, 0.5, 'Volage (V)')
>>>
>>> # calculate spectrogram using Welch's periodogram method:
... winwidth = 5 # window width, seconds
>>> winwidthsamples = int(winwidth * sampfreq)
>>> P, freqs, t = mpl.mlab.specgram(V, winwidthsamples, sampfreq)
>>>
>>> # set frequency limits:
... fmin, fmax = 0, 50 # set frequency limits, in Hz
>>> lo, hi = freqs.searchsorted([fmin, fmax])
>>> P, freqs = P[lo:hi], freqs[lo:hi]
>>>
>>> # convert power to dB and set power limits:
... P = 10 * np.log10(P)
>>> pmax = 200 # dB
>>> P[P > pmax] = pmax
>>>
>>> # plot the spectrogram:
... f2, a2 = plt.subplots(figsize=(10, 3)) # create a figure and axes
>>> P = P[::-1] # flip P array vertically for plotting
>>> extent = t[0], t[-1], freqs[0], freqs[-1]
>>> a2.imshow(P, extent=extent, cmap='hot') # plot power as an image
<matplotlib.image.AxesImage object at 0x7f71087d3550>
>>> a2.axis('tight')
(2.5, 3598.036, 0.0, 49.800000000000004)
>>> a2.set_xlabel('Time (s)')
Text(0.5, 13.944444444444452, 'Time (s)')
>>> a2.set_ylabel('Frequency (Hz)')
Text(13.944444444444445, 0.5, 'Frequency (Hz)')
>>> a2.set_title('LFP example spectrogram')
Text(0.5, 1.0, 'LFP example spectrogram')
>>> f2.tight_layout(pad=0.3) # crop figure to contents
>>> # save power in dB to a file:
... np.save('LFP_example_power_dB.npy', P)
>>>
mspacek@Godel:~/SciPyCourse2019/notes/00_intro$ sdlfkjsdlfkj
sdlfkjsdlfkj: command not found
mspacek@Godel:~/SciPyCourse2019/notes/00_intro$ pwd
/home/mspacek/SciPyCourse2019/notes/00_intro
mspacek@Godel:~/SciPyCourse2019/notes/00_intro$ ls
 00_intro.md    LFP_analysis_example.py
 00_intro.pdf   LFP_example_data.npy
 Figure_1.png   LFP_example_power_dB.npy
 Figure_2.png  'The Incredible Growth of Python _ Stack Overflow.pdf'
mspacek@Godel:~/SciPyCourse2019/notes/00_intro$ cd ..
mspacek@Godel:~/SciPyCourse2019/notes$ pwd
/home/mspacek/SciPyCourse2019/notes
mspacek@Godel:~/SciPyCourse2019/notes$ ls
00_intro            03_collections  06_fileio_mpl    09_pandas      homework1  homework4
01_Python_basics    04_numpy        07_mpl_matrices  10_stats       homework2  old_notes
02_Python_basics_2  05_numpy_dtype  08_images        11_organizing  homework3  README.md
mspacek@Godel:~/SciPyCourse2019/notes$ cd 01_Python_basics/
mspacek@Godel:~/SciPyCourse2019/notes/01_Python_basics$ ls
01_Python_basics.md  01_Python_basics.pdf
mspacek@Godel:~/SciPyCourse2019/notes/01_Python_basics$ ls /home/mspacek
aud  blab   data     dev  nano.save  SciPyCourse2017  SciPyCourse2019  thesis  vid
bak  books  Desktop  me   papers     SciPyCourse2018  src              tor     work
mspacek@Godel:~/SciPyCourse2019/notes/01_Python_basics$ ls ~
aud  blab   data     dev  nano.save  SciPyCourse2017  SciPyCourse2019  thesis  vid
bak  books  Desktop  me   papers     SciPyCourse2018  src              tor     work
mspacek@Godel:~/SciPyCourse2019/notes/01_Python_basics$ ls .
01_Python_basics.md  01_Python_basics.pdf
mspacek@Godel:~/SciPyCourse2019/notes/01_Python_basics$ ls
01_Python_basics.md  01_Python_basics.pdf
mspacek@Godel:~/SciPyCourse2019/notes/01_Python_basics$ pwd
/home/mspacek/SciPyCourse2019/notes/01_Python_basics
mspacek@Godel:~/SciPyCourse2019/notes/01_Python_basics$ cd
mspacek@Godel:~$ ls
aud  blab   data     dev  nano.save  SciPyCourse2017  SciPyCourse2019  thesis  vid
bak  books  Desktop  me   papers     SciPyCourse2018  src              tor     work
mspacek@Godel:~$ cd -
/home/mspacek/SciPyCourse2019/notes/01_Python_basics
mspacek@Godel:~/SciPyCourse2019/notes/01_Python_basics$ mkdir --help
Usage: mkdir [OPTION]... DIRECTORY...
Create the DIRECTORY(ies), if they do not already exist.

Mandatory arguments to long options are mandatory for short options too.
  -m, --mode=MODE   set file mode (as in chmod), not a=rwx - umask
  -p, --parents     no error if existing, make parent directories as needed
  -v, --verbose     print a message for each created directory
  -Z                   set SELinux security context of each created directory
                         to the default type
      --context[=CTX]  like -Z, or if CTX is specified then set the SELinux
                         or SMACK security context to CTX
      --help     display this help and exit
      --version  output version information and exit

GNU coreutils online help: <http://www.gnu.org/software/coreutils/>
Full documentation at: <http://www.gnu.org/software/coreutils/mkdir>
or available locally via: info '(coreutils) mkdir invocation'
mspacek@Godel:~/SciPyCourse2019/notes/01_Python_basics$ mkdir test
mspacek@Godel:~/SciPyCourse2019/notes/01_Python_basics$ touch example_file.txt
mspacek@Godel:~/SciPyCourse2019/notes/01_Python_basics$ ls
01_Python_basics.md  01_Python_basics.pdf  example_file.txt  test
mspacek@Godel:~/SciPyCourse2019/notes/01_Python_basics$ mv --help
Usage: mv [OPTION]... [-T] SOURCE DEST
  or:  mv [OPTION]... SOURCE... DIRECTORY
  or:  mv [OPTION]... -t DIRECTORY SOURCE...
Rename SOURCE to DEST, or move SOURCE(s) to DIRECTORY.

Mandatory arguments to long options are mandatory for short options too.
      --backup[=CONTROL]       make a backup of each existing destination file
  -b                           like --backup but does not accept an argument
  -f, --force                  do not prompt before overwriting
  -i, --interactive            prompt before overwrite
  -n, --no-clobber             do not overwrite an existing file
If you specify more than one of -i, -f, -n, only the final one takes effect.
      --strip-trailing-slashes  remove any trailing slashes from each SOURCE
                                 argument
  -S, --suffix=SUFFIX          override the usual backup suffix
  -t, --target-directory=DIRECTORY  move all SOURCE arguments into DIRECTORY
  -T, --no-target-directory    treat DEST as a normal file
  -u, --update                 move only when the SOURCE file is newer
                                 than the destination file or when the
                                 destination file is missing
  -v, --verbose                explain what is being done
  -Z, --context                set SELinux security context of destination
                                 file to default type
      --help     display this help and exit
      --version  output version information and exit

The backup suffix is '~', unless set with --suffix or SIMPLE_BACKUP_SUFFIX.
The version control method may be selected via the --backup option or through
the VERSION_CONTROL environment variable.  Here are the values:

  none, off       never make backups (even if --backup is given)
  numbered, t     make numbered backups
  existing, nil   numbered if numbered backups exist, simple otherwise
  simple, never   always make simple backups

GNU coreutils online help: <http://www.gnu.org/software/coreutils/>
Full documentation at: <http://www.gnu.org/software/coreutils/mv>
or available locally via: info '(coreutils) mv invocation'
mspacek@Godel:~/SciPyCourse2019/notes/01_Python_basics$ mv example_file.txt test
mspacek@Godel:~/SciPyCourse2019/notes/01_Python_basics$ ls
01_Python_basics.md  01_Python_basics.pdf  test
mspacek@Godel:~/SciPyCourse2019/notes/01_Python_basics$ ls test
example_file.txt
mspacek@Godel:~/SciPyCourse2019/notes/01_Python_basics$ cd test
mspacek@Godel:~/SciPyCourse2019/notes/01_Python_basics/test$ ls
example_file.txt
mspacek@Godel:~/SciPyCourse2019/notes/01_Python_basics/test$ cp example_file.txt ..
mspacek@Godel:~/SciPyCourse2019/notes/01_Python_basics/test$ ls
example_file.txt
mspacek@Godel:~/SciPyCourse2019/notes/01_Python_basics/test$ cd ..
mspacek@Godel:~/SciPyCourse2019/notes/01_Python_basics$ ls
01_Python_basics.md  01_Python_basics.pdf  example_file.txt  test
mspacek@Godel:~/SciPyCourse2019/notes/01_Python_basics$ rm --help
Usage: rm [OPTION]... [FILE]...
Remove (unlink) the FILE(s).

  -f, --force           ignore nonexistent files and arguments, never prompt
  -i                    prompt before every removal
  -I                    prompt once before removing more than three files, or
                          when removing recursively; less intrusive than -i,
                          while still giving protection against most mistakes
      --interactive[=WHEN]  prompt according to WHEN: never, once (-I), or
                          always (-i); without WHEN, prompt always
      --one-file-system  when removing a hierarchy recursively, skip any
                          directory that is on a file system different from
                          that of the corresponding command line argument
      --no-preserve-root  do not treat '/' specially
      --preserve-root   do not remove '/' (default)
  -r, -R, --recursive   remove directories and their contents recursively
  -d, --dir             remove empty directories
  -v, --verbose         explain what is being done
      --help     display this help and exit
      --version  output version information and exit

By default, rm does not remove directories.  Use the --recursive (-r or -R)
option to remove each listed directory, too, along with all of its contents.

To remove a file whose name starts with a '-', for example '-foo',
use one of these commands:
  rm -- -foo

  rm ./-foo

Note that if you use rm to remove a file, it might be possible to recover
some of its contents, given sufficient expertise and/or time.  For greater
assurance that the contents are truly unrecoverable, consider using shred.

GNU coreutils online help: <http://www.gnu.org/software/coreutils/>
Full documentation at: <http://www.gnu.org/software/coreutils/rm>
or available locally via: info '(coreutils) rm invocation'
mspacek@Godel:~/SciPyCourse2019/notes/01_Python_basics$ ls
01_Python_basics.md  01_Python_basics.pdf  example_file.txt  test
mspacek@Godel:~/SciPyCourse2019/notes/01_Python_basics$ rm example_file.txt
mspacek@Godel:~/SciPyCourse2019/notes/01_Python_basics$ ls
01_Python_basics.md  01_Python_basics.pdf  test
mspacek@Godel:~/SciPyCourse2019/notes/01_Python_basics$ touch example_file2.txt
mspacek@Godel:~/SciPyCourse2019/notes/01_Python_basics$ rm --help
Usage: rm [OPTION]... [FILE]...
Remove (unlink) the FILE(s).

  -f, --force           ignore nonexistent files and arguments, never prompt
  -i                    prompt before every removal
  -I                    prompt once before removing more than three files, or
                          when removing recursively; less intrusive than -i,
                          while still giving protection against most mistakes
      --interactive[=WHEN]  prompt according to WHEN: never, once (-I), or
                          always (-i); without WHEN, prompt always
      --one-file-system  when removing a hierarchy recursively, skip any
                          directory that is on a file system different from
                          that of the corresponding command line argument
      --no-preserve-root  do not treat '/' specially
      --preserve-root   do not remove '/' (default)
  -r, -R, --recursive   remove directories and their contents recursively
  -d, --dir             remove empty directories
  -v, --verbose         explain what is being done
      --help     display this help and exit
      --version  output version information and exit

By default, rm does not remove directories.  Use the --recursive (-r or -R)
option to remove each listed directory, too, along with all of its contents.

To remove a file whose name starts with a '-', for example '-foo',
use one of these commands:
  rm -- -foo

  rm ./-foo

Note that if you use rm to remove a file, it might be possible to recover
some of its contents, given sufficient expertise and/or time.  For greater
assurance that the contents are truly unrecoverable, consider using shred.

GNU coreutils online help: <http://www.gnu.org/software/coreutils/>
Full documentation at: <http://www.gnu.org/software/coreutils/rm>
or available locally via: info '(coreutils) rm invocation'
mspacek@Godel:~/SciPyCourse2019/notes/01_Python_basics$ rm -v example_file2.txt
removed 'example_file2.txt'
mspacek@Godel:~/SciPyCourse2019/notes/01_Python_basics$ ls
01_Python_basics.md  01_Python_basics.pdf  test
mspacek@Godel:~/SciPyCourse2019/notes/01_Python_basics$ ls -al
total 144
drwxrwxr-x  3 mspacek mspacek   4096 Apr 30 13:50 .
drwxrwxr-x 20 mspacek mspacek   4096 Apr 30 00:05 ..
-rw-rw-r--  1 mspacek mspacek   8334 Apr 30 10:58 01_Python_basics.md
-rw-------  1 mspacek mspacek 120672 Apr 30 10:59 01_Python_basics.pdf
drwxrwxr-x  2 mspacek mspacek   4096 Apr 30 13:47 test
mspacek@Godel:~/SciPyCourse2019/notes/01_Python_basics$ ls -al
total 144
drwxrwxr-x  3 mspacek mspacek   4096 Apr 30 13:50 .
drwxrwxr-x 20 mspacek mspacek   4096 Apr 30 00:05 ..
-rw-rw-r--  1 mspacek mspacek   8334 Apr 30 10:58 01_Python_basics.md
-rw-------  1 mspacek mspacek 120672 Apr 30 10:59 01_Python_basics.pdf
drwxrwxr-x  2 mspacek mspacek   4096 Apr 30 13:47 test
mspacek@Godel:~/SciPyCourse2019/notes/01_Python_basics$ ls -al
total 144
drwxrwxr-x  3 mspacek mspacek   4096 Apr 30 13:50 .
drwxrwxr-x 20 mspacek mspacek   4096 Apr 30 00:05 ..
-rw-rw-r--  1 mspacek mspacek   8334 Apr 30 10:58 01_Python_basics.md
-rw-------  1 mspacek mspacek 120672 Apr 30 10:59 01_Python_basics.pdf
drwxrwxr-x  2 mspacek mspacek   4096 Apr 30 13:47 test
mspacek@Godel:~/SciPyCourse2019/notes/01_Python_basics$ ls -al > my_listing.txt
mspacek@Godel:~/SciPyCourse2019/notes/01_Python_basics$ ls
01_Python_basics.md  01_Python_basics.pdf  my_listing.txt  test
mspacek@Godel:~/SciPyCourse2019/notes/01_Python_basics$ cat my_listing.txt
total 144
drwxrwxr-x  3 mspacek mspacek   4096 Apr 30 13:53 .
drwxrwxr-x 20 mspacek mspacek   4096 Apr 30 00:05 ..
-rw-rw-r--  1 mspacek mspacek   8334 Apr 30 10:58 01_Python_basics.md
-rw-------  1 mspacek mspacek 120672 Apr 30 10:59 01_Python_basics.pdf
-rw-rw-r--  1 mspacek mspacek      0 Apr 30 13:53 my_listing.txt
drwxrwxr-x  2 mspacek mspacek   4096 Apr 30 13:47 test
mspacek@Godel:~/SciPyCourse2019/notes/01_Python_basics$ ls -al
total 148
drwxrwxr-x  3 mspacek mspacek   4096 Apr 30 13:53 .
drwxrwxr-x 20 mspacek mspacek   4096 Apr 30 00:05 ..
-rw-rw-r--  1 mspacek mspacek   8334 Apr 30 10:58 01_Python_basics.md
-rw-------  1 mspacek mspacek 120672 Apr 30 10:59 01_Python_basics.pdf
-rw-rw-r--  1 mspacek mspacek    376 Apr 30 13:53 my_listing.txt
drwxrwxr-x  2 mspacek mspacek   4096 Apr 30 13:47 test
mspacek@Godel:~/SciPyCourse2019/notes/01_Python_basics$ cat > shopping_list.txt
apples
eggs
flour
mspacek@Godel:~/SciPyCourse2019/notes/01_Python_basics$ ls
01_Python_basics.md  01_Python_basics.pdf  my_listing.txt  shopping_list.txt  test
mspacek@Godel:~/SciPyCourse2019/notes/01_Python_basics$ cat shopping_list.txt
apples
eggs
flour
mspacek@Godel:~/SciPyCourse2019/notes/01_Python_basics$ cat > shoppling_list2.txt
sdlfksdjflk
sdlfsld
sdlkjsldfj
sldkjfslkjfd
mspacek@Godel:~/SciPyCourse2019/notes/01_Python_basics$ cat shoppling_list2.txt
sdlfksdjflk
sdlfsld
sdlkjsldfj
sldkjfslkjfd
mspacek@Godel:~/SciPyCourse2019/notes/01_Python_basics$ ls --help
Usage: ls [OPTION]... [FILE]...
List information about the FILEs (the current directory by default).
Sort entries alphabetically if none of -cftuvSUX nor --sort is specified.

Mandatory arguments to long options are mandatory for short options too.
  -a, --all                  do not ignore entries starting with .
  -A, --almost-all           do not list implied . and ..
      --author               with -l, print the author of each file
  -b, --escape               print C-style escapes for nongraphic characters
      --block-size=SIZE      scale sizes by SIZE before printing them; e.g.,
                               '--block-size=M' prints sizes in units of
                               1,048,576 bytes; see SIZE format below
  -B, --ignore-backups       do not list implied entries ending with ~
  -c                         with -lt: sort by, and show, ctime (time of last
                               modification of file status information);
                               with -l: show ctime and sort by name;
                               otherwise: sort by ctime, newest first
  -C                         list entries by columns
      --color[=WHEN]         colorize the output; WHEN can be 'always' (default
                               if omitted), 'auto', or 'never'; more info below
  -d, --directory            list directories themselves, not their contents
  -D, --dired                generate output designed for Emacs' dired mode
  -f                         do not sort, enable -aU, disable -ls --color
  -F, --classify             append indicator (one of */=>@|) to entries
      --file-type            likewise, except do not append '*'
      --format=WORD          across -x, commas -m, horizontal -x, long -l,
                               single-column -1, verbose -l, vertical -C
      --full-time            like -l --time-style=full-iso
  -g                         like -l, but do not list owner
      --group-directories-first
                             group directories before files;
                               can be augmented with a --sort option, but any
                               use of --sort=none (-U) disables grouping
  -G, --no-group             in a long listing, don't print group names
  -h, --human-readable       with -l and/or -s, print human readable sizes
                               (e.g., 1K 234M 2G)
      --si                   likewise, but use powers of 1000 not 1024
  -H, --dereference-command-line
                             follow symbolic links listed on the command line
      --dereference-command-line-symlink-to-dir
                             follow each command line symbolic link
                               that points to a directory
      --hide=PATTERN         do not list implied entries matching shell PATTERN
                               (overridden by -a or -A)
      --hyperlink[=WHEN]     hyperlink file names; WHEN can be 'always'
                               (default if omitted), 'auto', or 'never'
      --indicator-style=WORD  append indicator with style WORD to entry names:
                               none (default), slash (-p),
                               file-type (--file-type), classify (-F)
  -i, --inode                print the index number of each file
  -I, --ignore=PATTERN       do not list implied entries matching shell PATTERN
  -k, --kibibytes            default to 1024-byte blocks for disk usage
  -l                         use a long listing format
  -L, --dereference          when showing file information for a symbolic
                               link, show information for the file the link
                               references rather than for the link itself
  -m                         fill width with a comma separated list of entries
  -n, --numeric-uid-gid      like -l, but list numeric user and group IDs
  -N, --literal              print entry names without quoting
  -o                         like -l, but do not list group information
  -p, --indicator-style=slash
                             append / indicator to directories
  -q, --hide-control-chars   print ? instead of nongraphic characters
      --show-control-chars   show nongraphic characters as-is (the default,
                               unless program is 'ls' and output is a terminal)
  -Q, --quote-name           enclose entry names in double quotes
      --quoting-style=WORD   use quoting style WORD for entry names:
                               literal, locale, shell, shell-always,
                               shell-escape, shell-escape-always, c, escape
  -r, --reverse              reverse order while sorting
  -R, --recursive            list subdirectories recursively
  -s, --size                 print the allocated size of each file, in blocks
  -S                         sort by file size, largest first
      --sort=WORD            sort by WORD instead of name: none (-U), size (-S),
                               time (-t), version (-v), extension (-X)
      --time=WORD            with -l, show time as WORD instead of default
                               modification time: atime or access or use (-u);
                               ctime or status (-c); also use specified time
                               as sort key if --sort=time (newest first)
      --time-style=STYLE     with -l, show times using style STYLE:
                               full-iso, long-iso, iso, locale, or +FORMAT;
                               FORMAT is interpreted like in 'date'; if FORMAT
                               is FORMAT1<newline>FORMAT2, then FORMAT1 applies
                               to non-recent files and FORMAT2 to recent files;
                               if STYLE is prefixed with 'posix-', STYLE
                               takes effect only outside the POSIX locale
  -t                         sort by modification time, newest first
  -T, --tabsize=COLS         assume tab stops at each COLS instead of 8
  -u                         with -lt: sort by, and show, access time;
                               with -l: show access time and sort by name;
                               otherwise: sort by access time, newest first
  -U                         do not sort; list entries in directory order
  -v                         natural sort of (version) numbers within text
  -w, --width=COLS           set output width to COLS.  0 means no limit
  -x                         list entries by lines instead of by columns
  -X                         sort alphabetically by entry extension
  -Z, --context              print any security context of each file
  -1                         list one file per line.  Avoid '\n' with -q or -b
      --help     display this help and exit
      --version  output version information and exit

The SIZE argument is an integer and optional unit (example: 10K is 10*1024).
Units are K,M,G,T,P,E,Z,Y (powers of 1024) or KB,MB,... (powers of 1000).

Using color to distinguish file types is disabled both by default and
with --color=never.  With --color=auto, ls emits color codes only when
standard output is connected to a terminal.  The LS_COLORS environment
variable can change the settings.  Use the dircolors command to set it.

Exit status:
 0  if OK,
 1  if minor problems (e.g., cannot access subdirectory),
 2  if serious trouble (e.g., cannot access command-line argument).

GNU coreutils online help: <http://www.gnu.org/software/coreutils/>
Full documentation at: <http://www.gnu.org/software/coreutils/ls>
or available locally via: info '(coreutils) ls invocation'
mspacek@Godel:~/SciPyCourse2019/notes/01_Python_basics$ cd ~
mspacek@Godel:~$ ls
aud  blab   data     dev  nano.save  SciPyCourse2017  SciPyCourse2019  thesis  vid
bak  books  Desktop  me   papers     SciPyCourse2018  src              tor     work
mspacek@Godel:~$ mkdir tmp
mspacek@Godel:~$ ls
aud   books    dev        papers           SciPyCourse2019  tmp  work
bak   data     me         SciPyCourse2017  src              tor
blab  Desktop  nano.save  SciPyCourse2018  thesis           vid
mspacek@Godel:~$ cd tmp
mspacek@Godel:~/tmp$ pwd
/home/mspacek/tmp
mspacek@Godel:~/tmp$ touch test.txt
mspacek@Godel:~/tmp$ ls
test.txt
mspacek@Godel:~/tmp$ mv test.txt empty.txt
mspacek@Godel:~/tmp$ ls
empty.txt
mspacek@Godel:~/tmp$ cat > test2.txt
sldfkjsdlfk
sdlkfjsldj
sdlfjlkj
mspacek@Godel:~/tmp$ cat test2.txt
sldfkjsdlfk
sdlkfjsldj
sdlfjlkj
mspacek@Godel:~/tmp$ cp test2.txt test3.txt
mspacek@Godel:~/tmp$ ls
empty.txt  test2.txt  test3.txt
mspacek@Godel:~/tmp$ rm test
test2.txt  test3.txt
mspacek@Godel:~/tmp$ rm test
test2.txt  test3.txt
mspacek@Godel:~/tmp$ rm test
test2.txt  test3.txt
mspacek@Godel:~/tmp$ rm test
test2.txt  test3.txt
mspacek@Godel:~/tmp$ rm test
test2.txt  test3.txt
mspacek@Godel:~/tmp$ rm test
test2.txt  test3.txt
mspacek@Godel:~/tmp$ rm test2.txt
mspacek@Godel:~/tmp$ ls
empty.txt  test3.txt
mspacek@Godel:~/tmp$ ls -al > tmp_list.txt
mspacek@Godel:~/tmp$ ls
empty.txt  test3.txt  tmp_list.txt
mspacek@Godel:~/tmp$ cd..
cd..: command not found
mspacek@Godel:~/tmp$ cd ..
mspacek@Godel:~$ ls tmp
empty.txt  test3.txt  tmp_list.txt
mspacek@Godel:~$ cp tmp tmp2
cp: -r not specified; omitting directory 'tmp'
mspacek@Godel:~$ cp --help
Usage: cp [OPTION]... [-T] SOURCE DEST
  or:  cp [OPTION]... SOURCE... DIRECTORY
  or:  cp [OPTION]... -t DIRECTORY SOURCE...
Copy SOURCE to DEST, or multiple SOURCE(s) to DIRECTORY.

Mandatory arguments to long options are mandatory for short options too.
  -a, --archive                same as -dR --preserve=all
      --attributes-only        don't copy the file data, just the attributes
      --backup[=CONTROL]       make a backup of each existing destination file
  -b                           like --backup but does not accept an argument
      --copy-contents          copy contents of special files when recursive
  -d                           same as --no-dereference --preserve=links
  -f, --force                  if an existing destination file cannot be
                                 opened, remove it and try again (this option
                                 is ignored when the -n option is also used)
  -i, --interactive            prompt before overwrite (overrides a previous -n
                                  option)
  -H                           follow command-line symbolic links in SOURCE
  -l, --link                   hard link files instead of copying
  -L, --dereference            always follow symbolic links in SOURCE
  -n, --no-clobber             do not overwrite an existing file (overrides
                                 a previous -i option)
  -P, --no-dereference         never follow symbolic links in SOURCE
  -p                           same as --preserve=mode,ownership,timestamps
      --preserve[=ATTR_LIST]   preserve the specified attributes (default:
                                 mode,ownership,timestamps), if possible
                                 additional attributes: context, links, xattr,
                                 all
      --no-preserve=ATTR_LIST  don't preserve the specified attributes
      --parents                use full source file name under DIRECTORY
  -R, -r, --recursive          copy directories recursively
      --reflink[=WHEN]         control clone/CoW copies. See below
      --remove-destination     remove each existing destination file before
                                 attempting to open it (contrast with --force)
      --sparse=WHEN            control creation of sparse files. See below
      --strip-trailing-slashes  remove any trailing slashes from each SOURCE
                                 argument
  -s, --symbolic-link          make symbolic links instead of copying
  -S, --suffix=SUFFIX          override the usual backup suffix
  -t, --target-directory=DIRECTORY  copy all SOURCE arguments into DIRECTORY
  -T, --no-target-directory    treat DEST as a normal file
  -u, --update                 copy only when the SOURCE file is newer
                                 than the destination file or when the
                                 destination file is missing
  -v, --verbose                explain what is being done
  -x, --one-file-system        stay on this file system
  -Z                           set SELinux security context of destination
                                 file to default type
      --context[=CTX]          like -Z, or if CTX is specified then set the
                                 SELinux or SMACK security context to CTX
      --help     display this help and exit
      --version  output version information and exit

By default, sparse SOURCE files are detected by a crude heuristic and the
corresponding DEST file is made sparse as well.  That is the behavior
selected by --sparse=auto.  Specify --sparse=always to create a sparse DEST
file whenever the SOURCE file contains a long enough sequence of zero bytes.
Use --sparse=never to inhibit creation of sparse files.

When --reflink[=always] is specified, perform a lightweight copy, where the
data blocks are copied only when modified.  If this is not possible the copy
fails, or if --reflink=auto is specified, fall back to a standard copy.

The backup suffix is '~', unless set with --suffix or SIMPLE_BACKUP_SUFFIX.
The version control method may be selected via the --backup option or through
the VERSION_CONTROL environment variable.  Here are the values:

  none, off       never make backups (even if --backup is given)
  numbered, t     make numbered backups
  existing, nil   numbered if numbered backups exist, simple otherwise
  simple, never   always make simple backups

As a special case, cp makes a backup of SOURCE when the force and backup
options are given and SOURCE and DEST are the same name for an existing,
regular file.

GNU coreutils online help: <http://www.gnu.org/software/coreutils/>
Full documentation at: <http://www.gnu.org/software/coreutils/cp>
or available locally via: info '(coreutils) cp invocation'
mspacek@Godel:~$ man cp
mspacek@Godel:~$ cp --help
Usage: cp [OPTION]... [-T] SOURCE DEST
  or:  cp [OPTION]... SOURCE... DIRECTORY
  or:  cp [OPTION]... -t DIRECTORY SOURCE...
Copy SOURCE to DEST, or multiple SOURCE(s) to DIRECTORY.

Mandatory arguments to long options are mandatory for short options too.
  -a, --archive                same as -dR --preserve=all
      --attributes-only        don't copy the file data, just the attributes
      --backup[=CONTROL]       make a backup of each existing destination file
  -b                           like --backup but does not accept an argument
      --copy-contents          copy contents of special files when recursive
  -d                           same as --no-dereference --preserve=links
  -f, --force                  if an existing destination file cannot be
                                 opened, remove it and try again (this option
                                 is ignored when the -n option is also used)
  -i, --interactive            prompt before overwrite (overrides a previous -n
                                  option)
  -H                           follow command-line symbolic links in SOURCE
  -l, --link                   hard link files instead of copying
  -L, --dereference            always follow symbolic links in SOURCE
  -n, --no-clobber             do not overwrite an existing file (overrides
                                 a previous -i option)
  -P, --no-dereference         never follow symbolic links in SOURCE
  -p                           same as --preserve=mode,ownership,timestamps
      --preserve[=ATTR_LIST]   preserve the specified attributes (default:
                                 mode,ownership,timestamps), if possible
                                 additional attributes: context, links, xattr,
                                 all
      --no-preserve=ATTR_LIST  don't preserve the specified attributes
      --parents                use full source file name under DIRECTORY
  -R, -r, --recursive          copy directories recursively
      --reflink[=WHEN]         control clone/CoW copies. See below
      --remove-destination     remove each existing destination file before
                                 attempting to open it (contrast with --force)
      --sparse=WHEN            control creation of sparse files. See below
      --strip-trailing-slashes  remove any trailing slashes from each SOURCE
                                 argument
  -s, --symbolic-link          make symbolic links instead of copying
  -S, --suffix=SUFFIX          override the usual backup suffix
  -t, --target-directory=DIRECTORY  copy all SOURCE arguments into DIRECTORY
  -T, --no-target-directory    treat DEST as a normal file
  -u, --update                 copy only when the SOURCE file is newer
                                 than the destination file or when the
                                 destination file is missing
  -v, --verbose                explain what is being done
  -x, --one-file-system        stay on this file system
  -Z                           set SELinux security context of destination
                                 file to default type
      --context[=CTX]          like -Z, or if CTX is specified then set the
                                 SELinux or SMACK security context to CTX
      --help     display this help and exit
      --version  output version information and exit

By default, sparse SOURCE files are detected by a crude heuristic and the
corresponding DEST file is made sparse as well.  That is the behavior
selected by --sparse=auto.  Specify --sparse=always to create a sparse DEST
file whenever the SOURCE file contains a long enough sequence of zero bytes.
Use --sparse=never to inhibit creation of sparse files.

When --reflink[=always] is specified, perform a lightweight copy, where the
data blocks are copied only when modified.  If this is not possible the copy
fails, or if --reflink=auto is specified, fall back to a standard copy.

The backup suffix is '~', unless set with --suffix or SIMPLE_BACKUP_SUFFIX.
The version control method may be selected via the --backup option or through
the VERSION_CONTROL environment variable.  Here are the values:

  none, off       never make backups (even if --backup is given)
  numbered, t     make numbered backups
  existing, nil   numbered if numbered backups exist, simple otherwise
  simple, never   always make simple backups

As a special case, cp makes a backup of SOURCE when the force and backup
options are given and SOURCE and DEST are the same name for an existing,
regular file.

GNU coreutils online help: <http://www.gnu.org/software/coreutils/>
Full documentation at: <http://www.gnu.org/software/coreutils/cp>
or available locally via: info '(coreutils) cp invocation'
mspacek@Godel:~$ cp -r tmp tmp2
mspacek@Godel:~$ ls
aud   books    dev        papers           SciPyCourse2019  tmp   vid
bak   data     me         SciPyCourse2017  src              tmp2  work
blab  Desktop  nano.save  SciPyCourse2018  thesis           tor
mspacek@Godel:~$ rm tmp
rm: cannot remove 'tmp': Is a directory
mspacek@Godel:~$ rm -r tmp
mspacek@Godel:~$ rm -r tmp2
mspacek@Godel:~$ ls
aud  blab   data     dev  nano.save  SciPyCourse2017  SciPyCourse2019  thesis  vid
bak  books  Desktop  me   papers     SciPyCourse2018  src              tor     work
mspacek@Godel:~$ python
Python 2.7.15rc1 (default, Nov 12 2018, 14:31:15)
[GCC 7.3.0] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>>
mspacek@Godel:~$ python3
Python 3.6.7 (default, Oct 22 2018, 11:32:17)
[GCC 8.2.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> jjlkjlkjlkj
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'jjlkjlkjlkj' is not defined
>>> 1 + 1 + 2
4
>>> 5 - 2
3
>>> 2 * 5
10
>>> 10 / 2
5.0
>>> exit()
mspacek@Godel:~$ python3
Python 3.6.7 (default, Oct 22 2018, 11:32:17)
[GCC 8.2.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>>
mspacek@Godel:~$ python3
Python 3.6.7 (default, Oct 22 2018, 11:32:17)
[GCC 8.2.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>>
mspacek@Godel:~$ python3
Python 3.6.7 (default, Oct 22 2018, 11:32:17)
[GCC 8.2.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> print('hello world!')
hello world!
>>> input('hello? ')
hello? hi!
'hi!'
>>> 2 + 2
4
>>> a = 1
>>> a
1
>>> b
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'b' is not defined
>>> b = 2
>>> b
2
>>> a, b = 1, 2
>>> a
1
>>> b
2
>>> a
1
>>> a = 2
>>> a
2
>>> a = 1
>>> a
1
>>> a += 2
>>> a
3
>>> a -= 2
>>> a
1
>>> a *= 2
>>> a
2
>>> a *= 2
>>> a /= 2
>>> a
2.0
>>> a += 2
>>> a
4.0
>>> 5 / 2
2.5
>>> 5 // 2
2
>>> 9 / 10
0.9
>>> 19 / 10
1.9
>>> 19 // 10
1
>>> a
4.0
>>> 2 ** 2
4
>>> 2 ** 3
8
>>> 5dfsldkj = 2
  File "<stdin>", line 1
    5dfsldkj = 2
           ^
SyntaxError: invalid syntax
>>> dsdfsljlkj = 2
>>> A = 10
>>> a = 1
>>> my_variable = 2
>>> ^
  File "<stdin>", line 1
    ^
    ^
SyntaxError: invalid syntax
>>> 2^2
0
>>> 2^3
1
>>> a = 3
>>> a=3
>>>
mspacek@Godel:~$ pwd
/home/mspacek
mspacek@Godel:~$ cd SciPyCourse2019/notes/01_Python_basics/
mspacek@Godel:~/SciPyCourse2019/notes/01_Python_basics$ ls
01_Python_basics.md   hello.py        shopping_list.txt    test
01_Python_basics.pdf  my_listing.txt  shoppling_list2.txt
mspacek@Godel:~/SciPyCourse2019/notes/01_Python_basics$ python3 hello.py
hello world!
mspacek@Godel:~/SciPyCourse2019/notes/01_Python_basics$ python3 hello.py
hello world!
mspacek@Godel:~/SciPyCourse2019/notes/01_Python_basics$ python3
Python 3.6.7 (default, Oct 22 2018, 11:32:17)
[GCC 8.2.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> sqrt
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'sqrt' is not defined
>>> import math
>>> ma
map(  math  max(
>>> ma
map(  math  max(
>>> math.sqrt(4)
2.0
>>> math.log
math.log(    math.log10(  math.log1p(  math.log2(
>>> math.log10(100)
2.0
>>> dir(math)
['__doc__', '__loader__', '__name__', '__package__', '__spec__', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atan2', 'atanh', 'ceil', 'copysign', 'cos', 'cosh', 'degrees', 'e', 'erf', 'erfc', 'exp', 'expm1', 'fabs', 'factorial', 'floor', 'fmod', 'frexp', 'fsum', 'gamma', 'gcd', 'hypot', 'inf', 'isclose', 'isfinite', 'isinf', 'isnan', 'ldexp', 'lgamma', 'log', 'log10', 'log1p', 'log2', 'modf', 'nan', 'pi', 'pow', 'radians', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'tau', 'trunc']

<snip>

Sorry, this part of the command history for this class was lost. I'll do better next time!

-- Martin

<snip>

0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
^CTraceback (most recent call last):
  File "<stdin>", line 2, in <module>
KeyboardInterrupt
0
>>> while i < 5:
...    print(i)
...    i += 1
...
0
1
2
3
4
>>> help(range)

>>> list(range(10))
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
>>> list(range(5, 10))
[5, 6, 7, 8, 9]
>>> list(range(5, 10, 2))
[5, 7, 9]
>>> list(range(10, 5, -1))
[10, 9, 8, 7, 6]
>>> list(range(5, 10, -1))
[]
>>>
