mspacek@Godel:~$ cd SciPyCourse2019/notes/homework3
mspacek@Godel:~/SciPyCourse2019/notes/homework3$ ipython
Python 3.6.7 (default, Oct 22 2018, 11:32:17)
Type 'copyright', 'credits' or 'license' for more information
IPython 7.4.0 -- An enhanced Interactive Python. Type '?' for help.

In [1]: ls
distributions.png  homework3.pdf           student_solutions/
homework3.md       homework3_samples.py    t_absd.npz
homework3.npz      homework3_solutions.py  time_series.png

In [2]: d = np.load('homework3.npz')

In [3]: list(d)
Out[3]: ['t', 'x', 'y']

In [4]: d.files
Out[4]: ['t', 'x', 'y']

In [5]: d['t']
Out[5]:
array([ 0. ,  0.1,  0.2,  0.3,  0.4,  0.5,  0.6,  0.7,  0.8,  0.9,  1. ,
        1.1,  1.2,  1.3,  1.4,  1.5,  1.6,  1.7,  1.8,  1.9,  2. ,  2.1,
        2.2,  2.3,  2.4,  2.5,  2.6,  2.7,  2.8,  2.9,  3. ,  3.1,  3.2,
        3.3,  3.4,  3.5,  3.6,  3.7,  3.8,  3.9,  4. ,  4.1,  4.2,  4.3,
        4.4,  4.5,  4.6,  4.7,  4.8,  4.9,  5. ,  5.1,  5.2,  5.3,  5.4,
        5.5,  5.6,  5.7,  5.8,  5.9,  6. ,  6.1,  6.2,  6.3,  6.4,  6.5,
        6.6,  6.7,  6.8,  6.9,  7. ,  7.1,  7.2,  7.3,  7.4,  7.5,  7.6,
        7.7,  7.8,  7.9,  8. ,  8.1,  8.2,  8.3,  8.4,  8.5,  8.6,  8.7,
        8.8,  8.9,  9. ,  9.1,  9.2,  9.3,  9.4,  9.5,  9.6,  9.7,  9.8,
        9.9, 10. , 10.1, 10.2, 10.3, 10.4, 10.5, 10.6, 10.7, 10.8, 10.9,
       11. , 11.1, 11.2, 11.3, 11.4, 11.5, 11.6, 11.7, 11.8, 11.9, 12. ,
       12.1, 12.2, 12.3, 12.4, 12.5, 12.6, 12.7, 12.8, 12.9, 13. , 13.1,
       13.2, 13.3, 13.4, 13.5, 13.6, 13.7, 13.8, 13.9, 14. , 14.1, 14.2,
       14.3, 14.4, 14.5, 14.6, 14.7, 14.8, 14.9, 15. , 15.1, 15.2, 15.3,
       15.4, 15.5, 15.6, 15.7, 15.8, 15.9, 16. , 16.1, 16.2, 16.3, 16.4,
       16.5, 16.6, 16.7, 16.8, 16.9, 17. , 17.1, 17.2, 17.3, 17.4, 17.5,
       17.6, 17.7, 17.8, 17.9, 18. , 18.1, 18.2, 18.3, 18.4, 18.5, 18.6,
       18.7, 18.8, 18.9, 19. , 19.1, 19.2, 19.3, 19.4, 19.5, 19.6, 19.7,
       19.8, 19.9, 20. , 20.1, 20.2, 20.3, 20.4, 20.5, 20.6, 20.7, 20.8,
       20.9, 21. , 21.1, 21.2, 21.3, 21.4, 21.5, 21.6, 21.7, 21.8, 21.9,
       22. , 22.1, 22.2, 22.3, 22.4, 22.5, 22.6, 22.7, 22.8, 22.9, 23. ,
       23.1, 23.2, 23.3, 23.4, 23.5, 23.6, 23.7, 23.8, 23.9, 24. , 24.1,
       24.2, 24.3, 24.4, 24.5, 24.6, 24.7, 24.8, 24.9, 25. , 25.1, 25.2,
       25.3, 25.4, 25.5, 25.6, 25.7, 25.8, 25.9, 26. , 26.1, 26.2, 26.3,
       26.4, 26.5, 26.6, 26.7, 26.8, 26.9, 27. , 27.1, 27.2, 27.3, 27.4,
       27.5, 27.6, 27.7, 27.8, 27.9, 28. , 28.1, 28.2, 28.3, 28.4, 28.5,
       28.6, 28.7, 28.8, 28.9, 29. , 29.1, 29.2, 29.3, 29.4, 29.5, 29.6,
       29.7, 29.8, 29.9, 30. , 30.1, 30.2, 30.3, 30.4, 30.5, 30.6, 30.7,
       30.8, 30.9, 31. , 31.1, 31.2, 31.3, 31.4, 31.5, 31.6, 31.7, 31.8,
       31.9, 32. , 32.1, 32.2, 32.3, 32.4, 32.5, 32.6, 32.7, 32.8, 32.9,
       33. , 33.1, 33.2, 33.3, 33.4, 33.5, 33.6, 33.7, 33.8, 33.9, 34. ,
       34.1, 34.2, 34.3, 34.4, 34.5, 34.6, 34.7, 34.8, 34.9, 35. , 35.1,
       35.2, 35.3, 35.4, 35.5, 35.6, 35.7, 35.8, 35.9, 36. , 36.1, 36.2,
       36.3, 36.4, 36.5, 36.6, 36.7, 36.8, 36.9, 37. , 37.1, 37.2, 37.3,
       37.4, 37.5, 37.6, 37.7, 37.8, 37.9, 38. , 38.1, 38.2, 38.3, 38.4,
       38.5, 38.6, 38.7, 38.8, 38.9, 39. , 39.1, 39.2, 39.3, 39.4, 39.5,
       39.6, 39.7, 39.8, 39.9, 40. , 40.1, 40.2, 40.3, 40.4, 40.5, 40.6,
       40.7, 40.8, 40.9, 41. , 41.1, 41.2, 41.3, 41.4, 41.5, 41.6, 41.7,
       41.8, 41.9, 42. , 42.1, 42.2, 42.3, 42.4, 42.5, 42.6, 42.7, 42.8,
       42.9, 43. , 43.1, 43.2, 43.3, 43.4, 43.5, 43.6, 43.7, 43.8, 43.9,
       44. , 44.1, 44.2, 44.3, 44.4, 44.5, 44.6, 44.7, 44.8, 44.9, 45. ,
       45.1, 45.2, 45.3, 45.4, 45.5, 45.6, 45.7, 45.8, 45.9, 46. , 46.1,
       46.2, 46.3, 46.4, 46.5, 46.6, 46.7, 46.8, 46.9, 47. , 47.1, 47.2,
       47.3, 47.4, 47.5, 47.6, 47.7, 47.8, 47.9, 48. , 48.1, 48.2, 48.3,
       48.4, 48.5, 48.6, 48.7, 48.8, 48.9, 49. , 49.1, 49.2, 49.3, 49.4,
       49.5, 49.6, 49.7, 49.8, 49.9, 50. , 50.1, 50.2, 50.3, 50.4, 50.5,
       50.6, 50.7, 50.8, 50.9, 51. , 51.1, 51.2, 51.3, 51.4, 51.5, 51.6,
       51.7, 51.8, 51.9, 52. , 52.1, 52.2, 52.3, 52.4, 52.5, 52.6, 52.7,
       52.8, 52.9, 53. , 53.1, 53.2, 53.3, 53.4, 53.5, 53.6, 53.7, 53.8,
       53.9, 54. , 54.1, 54.2, 54.3, 54.4, 54.5, 54.6, 54.7, 54.8, 54.9,
       55. , 55.1, 55.2, 55.3, 55.4, 55.5, 55.6, 55.7, 55.8, 55.9, 56. ,
       56.1, 56.2, 56.3, 56.4, 56.5, 56.6, 56.7, 56.8, 56.9, 57. , 57.1,
       57.2, 57.3, 57.4, 57.5, 57.6, 57.7, 57.8, 57.9, 58. , 58.1, 58.2,
       58.3, 58.4, 58.5, 58.6, 58.7, 58.8, 58.9, 59. , 59.1, 59.2, 59.3,
       59.4, 59.5, 59.6, 59.7, 59.8, 59.9, 60. , 60.1, 60.2, 60.3, 60.4,
       60.5, 60.6, 60.7, 60.8, 60.9, 61. , 61.1, 61.2, 61.3, 61.4, 61.5,
       61.6, 61.7, 61.8, 61.9, 62. , 62.1, 62.2, 62.3, 62.4, 62.5, 62.6,
       62.7, 62.8, 62.9, 63. , 63.1, 63.2, 63.3, 63.4, 63.5, 63.6, 63.7,
       63.8, 63.9, 64. , 64.1, 64.2, 64.3, 64.4, 64.5, 64.6, 64.7, 64.8,
       64.9, 65. , 65.1, 65.2, 65.3, 65.4, 65.5, 65.6, 65.7, 65.8, 65.9,
       66. , 66.1, 66.2, 66.3, 66.4, 66.5, 66.6, 66.7, 66.8, 66.9, 67. ,
       67.1, 67.2, 67.3, 67.4, 67.5, 67.6, 67.7, 67.8, 67.9, 68. , 68.1,
       68.2, 68.3, 68.4, 68.5, 68.6, 68.7, 68.8, 68.9, 69. , 69.1, 69.2,
       69.3, 69.4, 69.5, 69.6, 69.7, 69.8, 69.9, 70. , 70.1, 70.2, 70.3,
       70.4, 70.5, 70.6, 70.7, 70.8, 70.9, 71. , 71.1, 71.2, 71.3, 71.4,
       71.5, 71.6, 71.7, 71.8, 71.9, 72. , 72.1, 72.2, 72.3, 72.4, 72.5,
       72.6, 72.7, 72.8, 72.9, 73. , 73.1, 73.2, 73.3, 73.4, 73.5, 73.6,
       73.7, 73.8, 73.9, 74. , 74.1, 74.2, 74.3, 74.4, 74.5, 74.6, 74.7,
       74.8, 74.9, 75. , 75.1, 75.2, 75.3, 75.4, 75.5, 75.6, 75.7, 75.8,
       75.9, 76. , 76.1, 76.2, 76.3, 76.4, 76.5, 76.6, 76.7, 76.8, 76.9,
       77. , 77.1, 77.2, 77.3, 77.4, 77.5, 77.6, 77.7, 77.8, 77.9, 78. ,
       78.1, 78.2, 78.3, 78.4, 78.5, 78.6, 78.7, 78.8, 78.9, 79. , 79.1,
       79.2, 79.3, 79.4, 79.5, 79.6, 79.7, 79.8, 79.9, 80. , 80.1, 80.2,
       80.3, 80.4, 80.5, 80.6, 80.7, 80.8, 80.9, 81. , 81.1, 81.2, 81.3,
       81.4, 81.5, 81.6, 81.7, 81.8, 81.9, 82. , 82.1, 82.2, 82.3, 82.4,
       82.5, 82.6, 82.7, 82.8, 82.9, 83. , 83.1, 83.2, 83.3, 83.4, 83.5,
       83.6, 83.7, 83.8, 83.9, 84. , 84.1, 84.2, 84.3, 84.4, 84.5, 84.6,
       84.7, 84.8, 84.9, 85. , 85.1, 85.2, 85.3, 85.4, 85.5, 85.6, 85.7,
       85.8, 85.9, 86. , 86.1, 86.2, 86.3, 86.4, 86.5, 86.6, 86.7, 86.8,
       86.9, 87. , 87.1, 87.2, 87.3, 87.4, 87.5, 87.6, 87.7, 87.8, 87.9,
       88. , 88.1, 88.2, 88.3, 88.4, 88.5, 88.6, 88.7, 88.8, 88.9, 89. ,
       89.1, 89.2, 89.3, 89.4, 89.5, 89.6, 89.7, 89.8, 89.9, 90. , 90.1,
       90.2, 90.3, 90.4, 90.5, 90.6, 90.7, 90.8, 90.9, 91. , 91.1, 91.2,
       91.3, 91.4, 91.5, 91.6, 91.7, 91.8, 91.9, 92. , 92.1, 92.2, 92.3,
       92.4, 92.5, 92.6, 92.7, 92.8, 92.9, 93. , 93.1, 93.2, 93.3, 93.4,
       93.5, 93.6, 93.7, 93.8, 93.9, 94. , 94.1, 94.2, 94.3, 94.4, 94.5,
       94.6, 94.7, 94.8, 94.9, 95. , 95.1, 95.2, 95.3, 95.4, 95.5, 95.6,
       95.7, 95.8, 95.9, 96. , 96.1, 96.2, 96.3, 96.4, 96.5, 96.6, 96.7,
       96.8, 96.9, 97. , 97.1, 97.2, 97.3, 97.4, 97.5, 97.6, 97.7, 97.8,
       97.9, 98. , 98.1, 98.2, 98.3, 98.4, 98.5, 98.6, 98.7, 98.8, 98.9,
       99. , 99.1, 99.2, 99.3, 99.4, 99.5, 99.6, 99.7, 99.8, 99.9])

In [6]: d['x']
Out[6]:
array([3.94362515, 5.84270326, 4.39117254, 6.36281471, 4.43228374,
       5.19457018, 5.72034936, 4.48991012, 5.10128753, 5.20099049,
       4.49841193, 5.15507246, 4.97334956, 5.26699879, 4.96555672,
       3.98252022, 4.69769095, 4.37998003, 5.13845914, 4.53654422,
       4.84336492, 5.16246475, 4.50880392, 5.44545474, 4.95058598,
       4.82060759, 5.70213801, 5.28980271, 3.98647678, 5.18971978,
       5.61143873, 5.46621862, 5.64418488, 5.12864545, 5.03199724,
       5.94397537, 6.40592249, 3.99240585, 4.69402129, 5.36111546,
       3.98068776, 4.89870199, 6.09930295, 5.71565584, 4.64882499,
       5.15286902, 4.71283166, 4.83795223, 5.33250879, 4.70438035,
       5.01797295, 5.19152469, 4.57310913, 5.11466552, 4.71154115,
       5.45720107, 6.08173871, 5.30042187, 5.22156077, 5.03066689,
       5.24498377, 4.82584673, 4.45493402, 4.67832714, 5.30073525,
       5.56287596, 4.78488495, 4.88632057, 5.13968134, 4.18200933,
       4.64942982, 4.46964969, 4.50363255, 5.25241004, 4.88727249,
       5.43617882, 4.68962941, 4.55205796, 4.49949837, 4.78762876,
       4.28334801, 5.08803021, 6.60432568, 4.95076621, 5.31678524,
       5.40856389, 4.56404146, 4.79481296, 4.17684079, 5.1754849 ,
       5.1676418 , 5.14756073, 4.99876595, 4.57579204, 5.25198508,
       4.57664479, 5.35911258, 6.22048184, 5.52917855, 4.58737483,
       6.0142675 , 5.01333075, 5.11586013, 4.76126642, 4.87932225,
       5.40332485, 3.70118223, 4.70298855, 4.29297674, 5.19592348,
       5.08917862, 5.08408223, 5.01371058, 4.48044009, 5.44141677,
       4.61220338, 5.09745016, 4.92064047, 5.51251385, 5.09450629,
       5.09764733, 5.12431364, 4.78900687, 5.62027024, 4.02159551,
       4.88172135, 5.21797417, 4.32224082, 5.51523339, 5.17134941,
       4.98802411, 5.47550015, 4.97158703, 4.61889115, 4.69495149,
       5.88416412, 5.01922996, 4.73354903, 4.82656679, 4.59158268,
       5.41062856, 4.45940292, 5.13643227, 5.32547237, 4.4823475 ,
       5.2193246 , 5.36185282, 4.54567937, 5.80863714, 5.42667535,
       5.74639846, 5.43211416, 4.39681192, 3.83120576, 5.3399107 ,
       5.21551691, 4.93402994, 4.20531599, 5.28036269, 4.80315226,
       4.45514166, 5.61902614, 4.44331044, 5.31005977, 5.18022879,
       4.18698026, 4.60592684, 5.12291594, 5.08437401, 5.55255601,
       5.17782104, 5.18026777, 4.69844275, 4.72957241, 5.3828204 ,
       5.4175657 , 4.36353939, 4.18508118, 4.37314714, 5.18076789,
       5.49828201, 6.0016327 , 5.08421157, 4.91380324, 5.49356864,
       4.94349285, 5.47759848, 4.33465881, 4.41171635, 5.42218464,
       5.06655191, 4.65929396, 5.21117058, 5.2019459 , 5.12905705,
       5.26721247, 5.37255761, 5.89890677, 5.3060179 , 4.74197265,
       5.76399253, 4.9672227 , 5.2929389 , 5.33714109, 5.33844602,
       4.46117205, 5.42141766, 4.59012013, 6.09229624, 5.64967531,
       4.92252491, 4.94759729, 4.48691948, 4.78324976, 3.98814798,
       5.18496857, 5.31003189, 5.26999639, 4.78161809, 5.0641812 ,
       4.57358783, 5.42601538, 4.35476094, 6.38389529, 4.93023542,
       4.39032824, 5.33181397, 4.96904223, 5.26538937, 4.60628859,
       5.39535406, 5.90306639, 4.74626529, 4.78374643, 5.236542  ,
       5.35463095, 5.66814374, 5.20639639, 6.11090388, 4.5911035 ,
       5.38356021, 5.0605228 , 4.99665157, 5.099586  , 4.25974301,
       4.43946377, 5.67671567, 4.80703441, 4.78779606, 5.37459431,
       5.73684212, 5.21668144, 5.12035102, 4.82406126, 5.36783777,
       5.17994878, 4.4401385 , 4.85179917, 4.97080291, 4.78309373,
       4.54008709, 5.03265066, 4.56144977, 5.97196097, 4.80160242,
       4.55790268, 4.84667674, 5.59966363, 4.53858314, 5.06951168,
       4.86858987, 4.42473159, 5.10716012, 4.73031685, 5.67786395,
       5.29321056, 5.87557418, 4.45820073, 5.090329  , 5.25989171,
       4.45268061, 5.08471337, 5.02813016, 5.84312431, 4.98332373,
       5.16519361, 5.11346491, 5.23506368, 4.69716038, 4.69416608,
       4.51259405, 4.81302547, 4.39583958, 4.94413316, 4.83013787,
       5.03655979, 6.06103536, 5.25576594, 5.26191524, 4.73906414,
       4.65202123, 5.25427782, 6.07771474, 5.16834787, 4.15868057,
       5.19212989, 4.8412646 , 5.19783474, 5.53482994, 3.93410184,
       5.08196015, 4.25976847, 4.0184751 , 4.26267962, 5.11400812,
       4.92542568, 4.8575669 , 4.801142  , 4.21721347, 5.63768892,
       5.2245216 , 5.22254775, 5.16096984, 4.9270214 , 4.81731344,
       4.25434093, 5.36219732, 5.19459525, 5.91531242, 4.93163815,
       4.74231086, 4.56186243, 5.06275426, 4.89911285, 4.99624158,
       4.96228505, 5.21754138, 4.42726653, 4.67462999, 6.06266993,
       5.60560314, 4.9230828 , 5.74805296, 4.62541185, 5.37472389,
       5.83562145, 4.36298968, 5.35202859, 4.51538136, 5.33632228,
       4.55546476, 3.81523436, 4.79838206, 4.37869435, 5.75924754,
       5.23706028, 5.53497625, 4.65019703, 4.44782032, 5.10365246,
       4.74397836, 4.4699703 , 6.78431008, 4.51265365, 4.31235813,
       5.40154652, 5.82411583, 5.28512316, 5.05774686, 4.98621602,
       5.24048975, 4.96121261, 4.50418624, 5.23735486, 5.28466709,
       4.88689666, 5.66904368, 4.94910352, 5.408734  , 5.66362146,
       4.97857506, 5.17899277, 5.35733453, 4.99507591, 5.17387281,
       5.24852132, 4.06311898, 4.62830661, 3.95387299, 5.95423291,
       5.77548093, 5.08547608, 4.73613712, 4.85720639, 4.81744332,
       5.11380579, 4.50055092, 6.01231144, 5.54697581, 5.10792768,
       4.78134039, 5.99501558, 5.09394206, 4.77998604, 4.16427094,
       5.15947353, 5.0662201 , 4.34509179, 5.67573429, 5.16266905,
       4.26379377, 5.47277004, 5.32436267, 5.30950086, 5.59809234,
       5.62302684, 4.03981251, 4.27881312, 5.01522192, 4.2875247 ,
       4.1651158 , 5.00012702, 5.48834387, 5.36140462, 4.59143336,
       5.58008719, 4.88330715, 5.0627665 , 5.38512791, 4.82681215,
       4.12700795, 4.10366361, 5.44239236, 3.63002705, 5.75803198,
       4.19083132, 5.3848751 , 5.19496974, 3.83679582, 6.01302813,
       6.18872624, 5.60304424, 5.51053888, 5.37929421, 5.46810483,
       5.27316045, 5.22101134, 5.55493215, 4.96951381, 4.10556265,
       4.95039939, 4.89764044, 5.83113509, 4.93552723, 5.43451587,
       5.71614449, 4.88054165, 5.74342045, 4.96260234, 5.57516125,
       4.58066629, 4.99234758, 4.66875194, 5.690924  , 5.46250105,
       4.94972605, 5.68767006, 4.0110491 , 5.0802095 , 4.55299581,
       4.94324368, 5.26171036, 4.30677446, 6.25015748, 5.78968722,
       5.02305961, 5.02050261, 5.3655072 , 5.42107064, 4.54602073,
       4.83718447, 4.90134745, 4.97678272, 5.13071786, 5.02447241,
       4.61292523, 4.49932124, 5.33886197, 4.74141796, 4.80620149,
       5.00864244, 5.52795411, 4.40809666, 5.51791752, 3.85989117,
       4.8589279 , 5.22800222, 4.1016432 , 4.81368358, 4.65651759,
       4.7604872 , 4.78071869, 6.34073849, 3.7524372 , 4.09064303,
       4.51124039, 4.13626989, 5.11689642, 6.02068715, 5.49998432,
       4.63434824, 5.13238209, 5.14994977, 4.68215563, 4.64213491,
       5.8538603 , 4.57573302, 4.71446537, 5.70849337, 4.97776708,
       4.84610823, 3.99224636, 5.59016701, 5.18678854, 6.21336856,
       5.22585461, 5.34230541, 4.52269823, 4.92485913, 4.57412073,
       5.07335507, 4.79097669, 5.57867974, 4.75978273, 5.63912413,
       4.66627157, 4.31086396, 5.581597  , 4.72828269, 5.06667122,
       4.96443297, 5.26512979, 4.53435223, 4.30122529, 5.0873754 ,
       4.95471186, 5.56162539, 4.82439673, 5.00386121, 3.973295  ,
       5.20121632, 5.50438905, 5.09129658, 4.53136194, 4.76068645,
       5.17127831, 4.91152468, 4.19989582, 5.5326502 , 5.23520901,
       4.66470328, 4.83546059, 3.97205024, 5.03899444, 5.80668704,
       4.64162606, 4.7821459 , 4.62456115, 4.06033933, 5.28458196,
       5.81498651, 4.47620989, 5.83752227, 5.16245499, 5.35181048,
       4.86546537, 5.506145  , 4.97372324, 4.398827  , 4.10463414,
       4.97290095, 5.10535413, 4.75723612, 5.33904061, 5.22772529,
       4.45404169, 4.99819478, 4.70181734, 5.17210417, 4.54090079,
       4.8210946 , 5.22834129, 4.79789231, 4.60090967, 5.85772776,
       5.04203781, 5.1349851 , 5.16873439, 5.52224413, 5.17270398,
       3.99548854, 5.19599272, 5.338351  , 4.84091101, 4.95083565,
       4.40964076, 4.25143098, 5.4804796 , 4.88183124, 4.78120287,
       4.33054297, 4.87375477, 5.14709502, 4.34864803, 5.76808272,
       5.24889069, 4.73660891, 5.74559119, 5.42997593, 5.04841296,
       6.22628012, 4.13699928, 5.6068744 , 4.60684989, 4.88788189,
       5.68252945, 5.31630472, 5.33038333, 4.84283935, 4.44603416,
       4.85592771, 5.90001934, 4.3390404 , 5.29138064, 4.69324575,
       4.42534914, 5.95606462, 4.7713408 , 4.78370064, 5.64424506,
       5.36304169, 4.46478704, 4.56199341, 5.05062785, 4.82057642,
       5.19164465, 5.39251826, 5.14742075, 5.88958942, 5.46192376,
       4.55810785, 5.24155093, 5.94098348, 4.64689101, 4.90941553,
       4.91369797, 5.09755826, 4.83274193, 5.53480046, 4.50102863,
       5.04511026, 4.27096346, 4.6887259 , 4.98485888, 5.08537298,
       4.89160406, 5.5805236 , 5.52250611, 4.55838049, 5.7883481 ,
       5.51756987, 5.21540518, 5.68442634, 4.89646841, 5.71336146,
       4.84029886, 5.16726375, 5.0316261 , 5.8031815 , 5.64674355,
       5.45057577, 4.96479865, 5.0665772 , 4.99829929, 5.60376252,
       5.26574986, 5.27205221, 5.0069914 , 4.87661817, 5.54219499,
       4.43255153, 5.32819959, 5.06429457, 5.35527764, 5.29050597,
       4.92116327, 5.30787907, 6.10788248, 5.11541771, 5.19100021,
       4.63972112, 4.73808802, 5.28977224, 5.21018512, 4.76925812,
       5.01461238, 5.10813825, 4.29264705, 5.50694348, 3.89502523,
       5.07921256, 5.1845846 , 5.57937645, 5.06845135, 4.98286986,
       4.83954042, 4.79523924, 4.29158098, 4.63732717, 5.23377747,
       5.01762978, 4.93993978, 5.44747211, 5.99425111, 4.17561767,
       5.58463949, 4.73773497, 5.04106624, 4.3233228 , 5.33477164,
       5.28482969, 4.43671149, 5.09149377, 4.74785714, 3.56746994,
       5.27452956, 5.39886671, 4.57076929, 4.94015759, 4.25617561,
       5.62499957, 4.27048685, 4.86320396, 5.53491169, 4.40911076,
       4.7959821 , 5.17455733, 4.81276844, 4.3835465 , 4.81275085,
       5.67655191, 5.38820707, 5.53827833, 4.9506082 , 5.01254902,
       5.28351921, 4.65567695, 5.3993048 , 5.58246532, 6.41784546,
       5.1802625 , 5.00241193, 4.89461017, 4.79517793, 5.64215621,
       5.22548989, 4.26374868, 5.35035952, 4.61169576, 5.2205033 ,
       4.74488352, 5.4273602 , 5.48704968, 5.02730464, 4.56640329,
       5.61231581, 4.91248441, 4.57996479, 5.98700229, 4.90131563,
       5.67193599, 5.96782917, 5.18143398, 5.68538516, 4.68292989,
       6.0881636 , 4.93517229, 4.44833957, 4.63611423, 5.21372572,
       4.10178262, 4.99091043, 4.92669371, 5.32321666, 4.58518005,
       4.92495015, 5.32475977, 4.97695667, 4.25245211, 5.5155031 ,
       4.7209057 , 5.0631944 , 5.61618246, 5.57138538, 5.58267108,
       4.82786341, 4.22059685, 4.66379276, 5.53660406, 4.44399767,
       4.63749024, 5.27933388, 6.02775279, 5.23506533, 5.16154097,
       5.23831996, 4.75520757, 4.13500054, 6.06947761, 5.07885766,
       4.49684407, 5.30934277, 5.06736093, 4.52069484, 6.21671777,
       5.0331226 , 5.32091712, 4.55768861, 4.09549472, 4.18489068,
       4.9229003 , 5.06552487, 4.586464  , 4.78097107, 4.42272792,
       4.37610186, 4.84072967, 4.69477141, 4.69125814, 4.19340918,
       4.66411492, 4.95771322, 4.70802287, 4.74197822, 4.99146413,
       4.99637502, 4.78708724, 4.74892874, 5.49762922, 5.54949687,
       4.77145774, 5.70870421, 5.271475  , 5.22474362, 5.03121609,
       4.96591635, 4.12196524, 5.28129791, 4.75374805, 4.19807342,
       4.52809791, 5.59072372, 5.68652718, 4.55219623, 4.81791432,
       5.66878384, 5.73289496, 4.70417519, 4.93695075, 4.88962685,
       4.67318965, 5.25535516, 4.63748524, 5.50812399, 5.30402403,
       5.71423394, 4.87466121, 4.75911084, 4.82466163, 5.11656808,
       4.78780568, 5.10425699, 4.79469661, 4.99657925, 4.11830018,
       4.34396731, 4.96147284, 4.94483929, 5.40147814, 5.31721902,
       4.76017557, 5.11257858, 4.3149258 , 4.64610932, 4.14142094,
       4.01638332, 4.52541764, 4.29136539, 5.12153432, 4.69057771,
       4.25895958, 5.80867925, 4.87863919, 4.4675869 , 5.01438089,
       4.19774728, 5.73747024, 5.342518  , 5.37586834, 4.65416032,
       5.17756608, 4.24042941, 5.34575416, 4.87365353, 4.4029035 ,
       5.70269014, 5.38329032, 4.9921666 , 5.09451472, 5.33084898,
       6.00655912, 5.2302687 , 5.11415558, 4.98474317, 5.87895691,
       5.77270398, 4.62129877, 4.22430755, 4.75541828, 5.15818916,
       5.01251663, 5.80170626, 5.10106346, 5.75647048, 4.93756154,
       5.41909101, 5.31450897, 4.55434894, 4.67278419, 3.84433985,
       4.8353421 , 6.08614751, 5.1637876 , 5.24431937, 4.59969845,
       3.76655681, 4.70774083, 5.70314476, 6.02084871, 5.40529957,
       4.65220932, 4.70319144, 3.85352732, 6.0860378 , 5.20469938,
       5.23844578, 5.71478686, 4.77695858, 5.18565028, 5.48596598,
       5.86019749, 4.63482437, 5.32217265, 5.71425648, 4.99788538,
       4.66188428, 4.83964427, 5.184458  , 5.67025949, 5.01604086,
       5.34165328, 4.84499766, 4.81175556, 4.27041652, 4.91956795,
       5.25383902, 4.37771892, 4.46257654, 5.18344231, 5.06122352,
       5.42854794, 4.40423119, 4.3339435 , 5.29247646, 4.33504359,
       5.32115795, 5.76856021, 5.86929767, 4.94765288, 4.08317601,
       5.40244088, 4.20772796, 4.83320461, 4.9367992 , 5.19457174,
       5.45562918, 5.3891692 , 5.03290804, 6.27288839, 4.94909501])

In [7]: d['y']
Out[7]:
array([2.97463895, 3.16328139, 3.06897269, 3.569142  , 2.90253517,
       2.94783463, 3.23048849, 3.11396979, 2.9538954 , 2.84995787,
       2.52635376, 3.02811655, 2.74124298, 3.1472435 , 3.00618091,
       3.03563486, 3.21666478, 2.88505754, 3.09229205, 2.97459015,
       2.82318258, 3.34196367, 2.97134095, 2.97325066, 2.62259226,
       3.30096821, 2.77533325, 3.05211358, 2.80248565, 2.77264216,
       2.67739569, 3.35450934, 3.32898292, 2.96500413, 2.51673335,
       3.19504084, 2.92668089, 3.41376252, 2.78277613, 3.165507  ,
       2.91113235, 2.56387755, 2.75246463, 2.79777981, 3.16697759,
       3.17768186, 3.01298036, 3.16478643, 3.04165045, 2.66220589,
       3.28452478, 3.04116477, 3.10002505, 3.37827518, 3.18819865,
       3.22706597, 3.02450525, 3.02072445, 2.89978443, 2.96429433,
       3.06017072, 2.75257943, 2.96504634, 3.14525339, 3.23386261,
       2.41641517, 2.82597278, 3.08480586, 3.03779433, 2.91380072,
       3.11806525, 3.30465826, 3.06207867, 3.39215228, 2.89270012,
       2.95923302, 2.89372305, 2.4928091 , 3.00626545, 3.66714986,
       3.01272312, 2.95488135, 3.10020632, 2.99191685, 3.00440869,
       2.94638859, 3.01250401, 3.14026308, 2.50130385, 2.68800642,
       2.69445214, 3.21936418, 3.1163849 , 3.35934884, 3.0519206 ,
       3.12924437, 3.54037583, 3.39008654, 3.38687908, 2.90723723,
       3.08398215, 3.30527264, 3.08465851, 3.18396817, 2.97814047,
       3.00256871, 2.6076818 , 2.59915329, 3.37669723, 3.12855357,
       2.93556261, 2.55563304, 2.76871739, 2.93547504, 3.068072  ,
       3.08509639, 3.22098278, 3.15125031, 3.08643304, 2.95785558,
       2.92229625, 2.87070167, 3.18281251, 2.86064676, 2.81649495,
       2.73133261, 3.16755102, 2.75593486, 2.90624337, 2.81975694,
       2.75408983, 2.74824808, 2.66598457, 2.99170794, 3.11107816,
       3.25649899, 2.65982324, 2.89120867, 2.99764247, 3.00332404,
       3.021997  , 3.4599064 , 2.7821346 , 2.74089607, 3.15857423,
       3.3560093 , 3.32659738, 2.9977623 , 2.58980507, 2.8534064 ,
       3.21876097, 2.96153928, 2.92042387, 3.03222068, 3.12306003,
       2.96271976, 2.96432718, 2.83051305, 3.16168664, 3.10807604,
       3.11259538, 2.97322547, 3.04449003, 2.92335157, 2.9258331 ,
       2.80028611, 2.98928343, 2.89574123, 3.22245459, 3.4241544 ,
       2.85003212, 2.55246059, 2.68466779, 3.36314392, 2.23316   ,
       2.91913582, 2.8905192 , 3.11648372, 3.2434438 , 3.09542046,
       2.81272123, 2.6297644 , 2.75082508, 2.85029269, 2.51083719,
       3.20803552, 2.7425953 , 2.89064495, 2.77402822, 2.7146714 ,
       2.75087   , 2.86354384, 2.90220741, 3.18403228, 2.62276341,
       3.19831899, 3.40511691, 2.6519319 , 3.04948722, 2.74202748,
       3.35124545, 2.72076938, 2.98455355, 3.09880705, 2.94854237,
       2.82436403, 2.74967294, 2.64309812, 2.86284671, 2.80549412,
       2.46095019, 2.86265985, 2.72929995, 2.85709942, 2.92743272,
       3.21410484, 2.98204299, 2.53198975, 2.89936987, 2.70698369,
       3.3088734 , 2.55633195, 3.17694139, 3.27136814, 3.31311304,
       3.25421467, 2.96493388, 2.62991244, 3.11741802, 2.8596006 ,
       3.30730946, 2.76964334, 3.07830302, 2.72665749, 3.05338081,
       3.2554517 , 2.98101741, 3.25096641, 3.06958374, 2.64758465,
       3.40956582, 2.94590446, 2.84273531, 2.91659974, 2.85715755,
       2.90409979, 3.46421824, 3.23795763, 2.78439708, 3.29340251,
       3.41367071, 3.24366278, 2.6763042 , 2.64701281, 3.2218103 ,
       3.08906866, 2.71975826, 3.43672594, 3.25656004, 3.0447019 ,
       3.14037629, 3.21722667, 2.96683946, 3.19266429, 3.23844245,
       2.98808461, 2.6739543 , 3.73152815, 3.63291743, 2.69601175,
       3.07235688, 2.85378233, 3.19813354, 3.13844378, 2.8318121 ,
       3.12504274, 3.1931631 , 3.17794485, 2.73398618, 3.13361258,
       2.96456131, 3.42947856, 3.63873149, 2.84829169, 2.66533393,
       2.90513703, 3.49189276, 3.04969579, 3.14114686, 2.93763252,
       3.06817368, 3.22061986, 3.22570129, 2.96503309, 3.01412294,
       3.14125255, 3.01642208, 3.05945586, 2.94214856, 2.88914799,
       2.38113234, 2.8961694 , 2.68659001, 2.84267938, 2.77595526,
       2.94969402, 2.76222634, 2.88143274, 2.83599705, 3.21077958,
       2.90385333, 3.22114489, 3.25016891, 3.20683804, 2.95822484,
       3.05385029, 3.04997351, 2.74321561, 3.06518787, 2.9842132 ,
       2.74532354, 3.52928687, 2.64593742, 2.7161072 , 3.22581759,
       3.0515084 , 3.070855  , 3.50431725, 3.38242469, 3.37912869,
       2.90166393, 3.20601199, 2.78876889, 2.69179213, 2.8918518 ,
       2.83913759, 2.9226792 , 2.83125068, 2.72755972, 2.94743691,
       3.38191191, 2.96644657, 3.39501631, 2.77107236, 3.40820174,
       3.06753013, 3.14875878, 2.65301742, 3.05823384, 3.18248841,
       3.13789704, 2.43663148, 2.74498539, 3.11920699, 3.07599545,
       3.04489223, 2.83774206, 3.3725755 , 3.27013874, 2.59953853,
       3.12708338, 3.38616578, 2.6853391 , 3.00118706, 2.85836705,
       2.27137895, 3.46515951, 2.91781876, 2.80166696, 2.91931552,
       2.89369897, 3.37451991, 2.95952725, 2.72913111, 3.15436315,
       2.57788155, 2.71730549, 2.72761958, 2.70547843, 3.37113771,
       3.05145725, 3.22954845, 2.87499229, 2.88584796, 2.8314238 ,
       2.85778609, 3.13441815, 3.53289354, 3.22587856, 2.59103955,
       2.7080576 , 3.04402465, 3.66092005, 3.23885462, 2.79041682,
       3.1517194 , 2.89971554, 2.83080581, 3.0527091 , 2.40357665,
       2.83358545, 2.58272758, 2.83831001, 2.70208715, 3.06351853,
       3.32163958, 2.84696979, 3.10602451, 2.94090396, 2.92891614,
       2.95056864, 2.99843327, 3.22355881, 2.83487834, 2.733122  ,
       2.89676118, 2.812167  , 3.2739427 , 3.32950421, 3.39085323,
       3.07436733, 2.79301521, 2.99230632, 2.78285212, 2.78520598,
       3.01668062, 2.85786696, 2.76508272, 2.5376603 , 3.31414146,
       2.84569284, 3.01666341, 3.61715198, 3.15123691, 2.90589157,
       2.84364693, 2.80254264, 2.86202007, 2.56154752, 2.9949491 ,
       2.94124894, 3.12530756, 2.38361017, 2.89979063, 3.33322714,
       2.97832607, 2.7626117 , 3.27671013, 3.0713013 , 2.49744958,
       2.90358981, 2.6789977 , 2.49704213, 3.03471487, 2.98883874,
       2.94306139, 3.11380105, 2.88259257, 2.81001173, 3.11184672,
       3.43889607, 2.79054467, 3.23675874, 3.11297286, 3.21244125,
       3.47548518, 3.25926699, 2.75492937, 3.06070526, 2.78272207,
       3.17096881, 2.87272577, 3.27122061, 2.85079963, 3.15693283,
       3.10259975, 2.97155211, 3.50296532, 3.01184747, 2.55331451,
       3.36938773, 3.00486776, 3.60040852, 3.17518878, 3.29547148,
       2.69829701, 3.02452993, 3.23977149, 2.70871432, 3.25965355,
       3.01363519, 3.18681054, 3.16662393, 3.08352843, 2.67491894,
       3.10538201, 3.29231406, 2.81554629, 3.04076283, 3.10882601,
       2.8925528 , 2.80939968, 3.01420148, 2.96410342, 3.11499892,
       2.83203844, 3.04244595, 2.69183383, 2.73081185, 2.80124189,
       3.26944694, 3.09982518, 2.96751561, 3.23145285, 3.40719553,
       2.50143953, 2.86703179, 3.14495026, 2.83248766, 2.63148609,
       2.61753276, 3.11742702, 3.12584123, 2.53510153, 2.67607453,
       3.39398863, 2.83222913, 2.98004982, 3.28847279, 2.97251165,
       2.72874676, 3.04002945, 3.0461813 , 3.21554322, 3.15029376,
       3.2638308 , 3.20105903, 2.67894515, 3.09408345, 3.02414741,
       3.13530447, 2.98581329, 3.26438383, 2.88366008, 3.83439474,
       3.36605073, 3.21074526, 2.8256318 , 3.26894295, 2.85575077,
       2.70485254, 3.27719209, 3.03352832, 3.3568232 , 3.1258126 ,
       2.88848149, 2.78817145, 3.03215214, 3.10731906, 3.54205737,
       2.84916815, 3.05435897, 3.34521563, 2.98055463, 3.15157973,
       2.9440232 , 2.71502256, 3.33602871, 2.34789901, 2.67876174,
       3.28476225, 2.9002967 , 2.91680991, 2.68597844, 3.21285796,
       2.85709918, 2.99903103, 3.21842825, 3.2141382 , 3.01977013,
       3.11720697, 3.12817586, 2.69503812, 2.71482527, 2.84658961,
       3.30990382, 2.67401489, 2.31462262, 3.31172128, 3.08757133,
       2.82934853, 2.92814736, 3.2218311 , 3.4703933 , 2.77762584,
       3.39107502, 2.75812716, 2.57051412, 2.97802615, 2.58139375,
       2.79095728, 3.08693219, 2.94924256, 3.27099655, 3.23861914,
       3.21343337, 3.02257719, 2.93165753, 3.17249684, 3.50909145,
       2.77910855, 3.32446927, 2.76062899, 3.06607021, 3.08957409,
       3.25374553, 3.10564569, 3.01828167, 3.42178077, 3.23159573,
       2.99966322, 2.80215657, 2.88893643, 3.26795692, 2.45131096,
       2.96601183, 3.04474033, 2.74184875, 3.05320447, 3.23537959,
       2.70375127, 3.19396894, 3.19149644, 3.18711809, 3.07079899,
       3.28535993, 3.30171733, 3.50422202, 2.76593925, 2.857604  ,
       2.59627637, 2.65570861, 2.61071359, 2.99194654, 3.17412972,
       3.07316052, 3.01441565, 3.42318017, 3.58839609, 3.16096651,
       2.81385583, 2.92998466, 3.1044718 , 2.7970122 , 3.16057803,
       2.94410783, 3.08681135, 2.66741122, 2.92350058, 2.78775591,
       2.85739263, 3.148506  , 2.77610874, 2.36236352, 2.9745117 ,
       3.00034836, 3.06374717, 3.22416359, 2.99552638, 3.29480582,
       2.709285  , 2.51686452, 3.22938491, 2.81819201, 3.03887517,
       3.13422992, 2.85002953, 3.33632577, 2.89991745, 3.1150582 ,
       3.10321073, 3.01575359, 3.26436819, 3.31290387, 3.08389452,
       3.08121194, 2.98830708, 2.85783689, 3.3717972 , 2.82833443,
       3.10454403, 3.05631959, 3.05967011, 2.99390612, 3.01193726,
       2.9668189 , 2.94852007, 2.93681164, 3.13008549, 2.72762713,
       3.09684181, 2.85157515, 3.10199893, 3.34430852, 3.13299993,
       2.93193192, 3.30281083, 3.39030577, 2.90200634, 2.87596713,
       2.93631848, 2.88645754, 2.74302459, 2.78075999, 3.29378013,
       3.00150333, 3.14779875, 2.9089023 , 3.10945503, 3.09455722,
       2.717203  , 3.28703678, 3.17338304, 3.05159536, 2.74645187,
       3.00225835, 3.19483975, 2.59316298, 2.81345525, 2.3940734 ,
       2.88363325, 2.16872108, 3.28696135, 3.03952786, 3.16723229,
       3.27648352, 2.71712824, 2.94673324, 3.30702914, 2.79110062,
       2.73253866, 3.05425943, 2.91437525, 2.96944159, 2.88383578,
       3.25679227, 2.520673  , 2.98684965, 3.52515142, 3.23606327,
       2.89788678, 3.14922971, 3.3135897 , 2.94409305, 2.63302226,
       3.00137584, 3.1038504 , 3.43675569, 3.24987021, 2.69756249,
       3.36222834, 3.10442203, 3.16471978, 3.26582044, 3.10048312,
       3.08015866, 3.06974254, 3.62337575, 3.33426805, 2.46754017,
       3.045747  , 3.12202946, 3.06952193, 2.69825727, 2.91181749,
       3.11654859, 3.45859088, 3.055339  , 3.08296058, 3.25484291,
       2.77186327, 3.54755934, 3.39427035, 3.25357183, 3.01067753,
       3.03067121, 3.1667178 , 3.12818846, 2.21036283, 2.67109504,
       2.85213799, 2.8554368 , 2.86373043, 3.20084497, 3.37966024,
       3.21450907, 2.94142255, 2.89929518, 3.12766209, 3.05580836,
       3.08277153, 3.09866204, 2.41075748, 2.93095655, 3.0422572 ,
       2.96733239, 3.12389481, 2.95181592, 2.65976987, 2.85476948,
       3.03437221, 3.23787195, 2.77292727, 2.66604846, 3.08117573,
       3.38549454, 2.79634841, 3.5010018 , 2.76487399, 3.58441114,
       2.98658614, 3.00389602, 2.6941158 , 2.83286653, 2.39369012,
       3.12060913, 3.39634738, 2.66265467, 2.6719343 , 3.41001716,
       2.68892867, 2.81609858, 2.81653151, 2.96938717, 3.09441086,
       2.85031866, 2.96344336, 2.89381541, 3.07394737, 2.82977904,
       3.05430164, 3.04465625, 2.8573066 , 2.75436161, 2.6250042 ,
       2.60524796, 2.62038247, 3.01593328, 2.718343  , 3.18557624,
       2.80966555, 2.73385598, 2.57231984, 2.88190873, 3.21857325,
       2.50047387, 2.84091346, 2.77226956, 2.78325125, 2.47945664,
       2.74389612, 2.60415467, 2.45750239, 3.06586865, 3.03774996,
       2.79196011, 3.24516478, 2.95243248, 2.66828924, 3.12443701,
       3.32144857, 2.79585287, 2.90878774, 2.16102652, 2.50410165,
       2.89064938, 2.69275647, 3.29010084, 2.98439699, 3.28696239,
       3.20504491, 3.28650539, 2.88828578, 2.40960545, 2.95114531,
       2.57062948, 2.87988421, 3.08207536, 2.88236176, 2.81997908,
       2.79268595, 2.94962502, 2.45431907, 3.05956819, 2.75293134,
       3.12985444, 3.45846135, 2.63480718, 3.0003143 , 3.19545261,
       2.6078326 , 3.32808353, 2.88769158, 2.94527037, 3.06884055,
       2.72303547, 3.26373505, 2.86553493, 3.02431363, 3.26883649,
       2.60901501, 3.17523886, 3.55790014, 2.81430908, 3.17056118,
       3.10539784, 3.21617758, 2.94280434, 2.92201248, 3.05857396,
       2.76921039, 3.07071327, 3.22960697, 3.29947905, 3.10787276,
       2.91519744, 3.11561696, 3.08056127, 3.24774268, 2.64089144,
       2.95925347, 2.85124409, 3.1207341 , 3.51627016, 3.06245824,
       3.08066758, 3.07954311, 2.61994733, 3.16764199, 3.02016765,
       3.28217152, 3.14544754, 2.73652197, 3.05586369, 3.0675403 ,
       3.01875769, 2.89478897, 3.3775542 , 2.68307153, 3.07170606,
       3.11575673, 2.85742874, 2.8842995 , 2.90233429, 3.29042847,
       3.2307794 , 2.75218432, 2.48451398, 3.35813859, 2.87442884,
       2.82360049, 2.98930169, 3.19570637, 3.24296515, 3.20050203,
       2.92521662, 2.90682194, 3.34646286, 2.92677424, 2.98467072,
       2.92533118, 2.84240541, 2.77435132, 2.77996124, 2.72930558,
       2.7494357 , 3.25586925, 2.89901121, 3.24759431, 3.12760598,
       2.97224597, 3.20717795, 3.27216971, 3.34887515, 2.95084293,
       3.17610216, 2.75051332, 3.11152373, 3.18825319, 3.1018485 ,
       2.58612446, 3.25673937, 2.64319436, 3.02387556, 3.12077227,
       2.75856891, 3.15146408, 3.30468879, 3.11267899, 3.07376392])

In [8]: t, x, y = d['t'], d['x'], d['y']

In [9]: t
Out[9]:
array([ 0. ,  0.1,  0.2,  0.3,  0.4,  0.5,  0.6,  0.7,  0.8,  0.9,  1. ,
        1.1,  1.2,  1.3,  1.4,  1.5,  1.6,  1.7,  1.8,  1.9,  2. ,  2.1,
        2.2,  2.3,  2.4,  2.5,  2.6,  2.7,  2.8,  2.9,  3. ,  3.1,  3.2,
        3.3,  3.4,  3.5,  3.6,  3.7,  3.8,  3.9,  4. ,  4.1,  4.2,  4.3,
        4.4,  4.5,  4.6,  4.7,  4.8,  4.9,  5. ,  5.1,  5.2,  5.3,  5.4,
        5.5,  5.6,  5.7,  5.8,  5.9,  6. ,  6.1,  6.2,  6.3,  6.4,  6.5,
        6.6,  6.7,  6.8,  6.9,  7. ,  7.1,  7.2,  7.3,  7.4,  7.5,  7.6,
        7.7,  7.8,  7.9,  8. ,  8.1,  8.2,  8.3,  8.4,  8.5,  8.6,  8.7,
        8.8,  8.9,  9. ,  9.1,  9.2,  9.3,  9.4,  9.5,  9.6,  9.7,  9.8,
        9.9, 10. , 10.1, 10.2, 10.3, 10.4, 10.5, 10.6, 10.7, 10.8, 10.9,
       11. , 11.1, 11.2, 11.3, 11.4, 11.5, 11.6, 11.7, 11.8, 11.9, 12. ,
       12.1, 12.2, 12.3, 12.4, 12.5, 12.6, 12.7, 12.8, 12.9, 13. , 13.1,
       13.2, 13.3, 13.4, 13.5, 13.6, 13.7, 13.8, 13.9, 14. , 14.1, 14.2,
       14.3, 14.4, 14.5, 14.6, 14.7, 14.8, 14.9, 15. , 15.1, 15.2, 15.3,
       15.4, 15.5, 15.6, 15.7, 15.8, 15.9, 16. , 16.1, 16.2, 16.3, 16.4,
       16.5, 16.6, 16.7, 16.8, 16.9, 17. , 17.1, 17.2, 17.3, 17.4, 17.5,
       17.6, 17.7, 17.8, 17.9, 18. , 18.1, 18.2, 18.3, 18.4, 18.5, 18.6,
       18.7, 18.8, 18.9, 19. , 19.1, 19.2, 19.3, 19.4, 19.5, 19.6, 19.7,
       19.8, 19.9, 20. , 20.1, 20.2, 20.3, 20.4, 20.5, 20.6, 20.7, 20.8,
       20.9, 21. , 21.1, 21.2, 21.3, 21.4, 21.5, 21.6, 21.7, 21.8, 21.9,
       22. , 22.1, 22.2, 22.3, 22.4, 22.5, 22.6, 22.7, 22.8, 22.9, 23. ,
       23.1, 23.2, 23.3, 23.4, 23.5, 23.6, 23.7, 23.8, 23.9, 24. , 24.1,
       24.2, 24.3, 24.4, 24.5, 24.6, 24.7, 24.8, 24.9, 25. , 25.1, 25.2,
       25.3, 25.4, 25.5, 25.6, 25.7, 25.8, 25.9, 26. , 26.1, 26.2, 26.3,
       26.4, 26.5, 26.6, 26.7, 26.8, 26.9, 27. , 27.1, 27.2, 27.3, 27.4,
       27.5, 27.6, 27.7, 27.8, 27.9, 28. , 28.1, 28.2, 28.3, 28.4, 28.5,
       28.6, 28.7, 28.8, 28.9, 29. , 29.1, 29.2, 29.3, 29.4, 29.5, 29.6,
       29.7, 29.8, 29.9, 30. , 30.1, 30.2, 30.3, 30.4, 30.5, 30.6, 30.7,
       30.8, 30.9, 31. , 31.1, 31.2, 31.3, 31.4, 31.5, 31.6, 31.7, 31.8,
       31.9, 32. , 32.1, 32.2, 32.3, 32.4, 32.5, 32.6, 32.7, 32.8, 32.9,
       33. , 33.1, 33.2, 33.3, 33.4, 33.5, 33.6, 33.7, 33.8, 33.9, 34. ,
       34.1, 34.2, 34.3, 34.4, 34.5, 34.6, 34.7, 34.8, 34.9, 35. , 35.1,
       35.2, 35.3, 35.4, 35.5, 35.6, 35.7, 35.8, 35.9, 36. , 36.1, 36.2,
       36.3, 36.4, 36.5, 36.6, 36.7, 36.8, 36.9, 37. , 37.1, 37.2, 37.3,
       37.4, 37.5, 37.6, 37.7, 37.8, 37.9, 38. , 38.1, 38.2, 38.3, 38.4,
       38.5, 38.6, 38.7, 38.8, 38.9, 39. , 39.1, 39.2, 39.3, 39.4, 39.5,
       39.6, 39.7, 39.8, 39.9, 40. , 40.1, 40.2, 40.3, 40.4, 40.5, 40.6,
       40.7, 40.8, 40.9, 41. , 41.1, 41.2, 41.3, 41.4, 41.5, 41.6, 41.7,
       41.8, 41.9, 42. , 42.1, 42.2, 42.3, 42.4, 42.5, 42.6, 42.7, 42.8,
       42.9, 43. , 43.1, 43.2, 43.3, 43.4, 43.5, 43.6, 43.7, 43.8, 43.9,
       44. , 44.1, 44.2, 44.3, 44.4, 44.5, 44.6, 44.7, 44.8, 44.9, 45. ,
       45.1, 45.2, 45.3, 45.4, 45.5, 45.6, 45.7, 45.8, 45.9, 46. , 46.1,
       46.2, 46.3, 46.4, 46.5, 46.6, 46.7, 46.8, 46.9, 47. , 47.1, 47.2,
       47.3, 47.4, 47.5, 47.6, 47.7, 47.8, 47.9, 48. , 48.1, 48.2, 48.3,
       48.4, 48.5, 48.6, 48.7, 48.8, 48.9, 49. , 49.1, 49.2, 49.3, 49.4,
       49.5, 49.6, 49.7, 49.8, 49.9, 50. , 50.1, 50.2, 50.3, 50.4, 50.5,
       50.6, 50.7, 50.8, 50.9, 51. , 51.1, 51.2, 51.3, 51.4, 51.5, 51.6,
       51.7, 51.8, 51.9, 52. , 52.1, 52.2, 52.3, 52.4, 52.5, 52.6, 52.7,
       52.8, 52.9, 53. , 53.1, 53.2, 53.3, 53.4, 53.5, 53.6, 53.7, 53.8,
       53.9, 54. , 54.1, 54.2, 54.3, 54.4, 54.5, 54.6, 54.7, 54.8, 54.9,
       55. , 55.1, 55.2, 55.3, 55.4, 55.5, 55.6, 55.7, 55.8, 55.9, 56. ,
       56.1, 56.2, 56.3, 56.4, 56.5, 56.6, 56.7, 56.8, 56.9, 57. , 57.1,
       57.2, 57.3, 57.4, 57.5, 57.6, 57.7, 57.8, 57.9, 58. , 58.1, 58.2,
       58.3, 58.4, 58.5, 58.6, 58.7, 58.8, 58.9, 59. , 59.1, 59.2, 59.3,
       59.4, 59.5, 59.6, 59.7, 59.8, 59.9, 60. , 60.1, 60.2, 60.3, 60.4,
       60.5, 60.6, 60.7, 60.8, 60.9, 61. , 61.1, 61.2, 61.3, 61.4, 61.5,
       61.6, 61.7, 61.8, 61.9, 62. , 62.1, 62.2, 62.3, 62.4, 62.5, 62.6,
       62.7, 62.8, 62.9, 63. , 63.1, 63.2, 63.3, 63.4, 63.5, 63.6, 63.7,
       63.8, 63.9, 64. , 64.1, 64.2, 64.3, 64.4, 64.5, 64.6, 64.7, 64.8,
       64.9, 65. , 65.1, 65.2, 65.3, 65.4, 65.5, 65.6, 65.7, 65.8, 65.9,
       66. , 66.1, 66.2, 66.3, 66.4, 66.5, 66.6, 66.7, 66.8, 66.9, 67. ,
       67.1, 67.2, 67.3, 67.4, 67.5, 67.6, 67.7, 67.8, 67.9, 68. , 68.1,
       68.2, 68.3, 68.4, 68.5, 68.6, 68.7, 68.8, 68.9, 69. , 69.1, 69.2,
       69.3, 69.4, 69.5, 69.6, 69.7, 69.8, 69.9, 70. , 70.1, 70.2, 70.3,
       70.4, 70.5, 70.6, 70.7, 70.8, 70.9, 71. , 71.1, 71.2, 71.3, 71.4,
       71.5, 71.6, 71.7, 71.8, 71.9, 72. , 72.1, 72.2, 72.3, 72.4, 72.5,
       72.6, 72.7, 72.8, 72.9, 73. , 73.1, 73.2, 73.3, 73.4, 73.5, 73.6,
       73.7, 73.8, 73.9, 74. , 74.1, 74.2, 74.3, 74.4, 74.5, 74.6, 74.7,
       74.8, 74.9, 75. , 75.1, 75.2, 75.3, 75.4, 75.5, 75.6, 75.7, 75.8,
       75.9, 76. , 76.1, 76.2, 76.3, 76.4, 76.5, 76.6, 76.7, 76.8, 76.9,
       77. , 77.1, 77.2, 77.3, 77.4, 77.5, 77.6, 77.7, 77.8, 77.9, 78. ,
       78.1, 78.2, 78.3, 78.4, 78.5, 78.6, 78.7, 78.8, 78.9, 79. , 79.1,
       79.2, 79.3, 79.4, 79.5, 79.6, 79.7, 79.8, 79.9, 80. , 80.1, 80.2,
       80.3, 80.4, 80.5, 80.6, 80.7, 80.8, 80.9, 81. , 81.1, 81.2, 81.3,
       81.4, 81.5, 81.6, 81.7, 81.8, 81.9, 82. , 82.1, 82.2, 82.3, 82.4,
       82.5, 82.6, 82.7, 82.8, 82.9, 83. , 83.1, 83.2, 83.3, 83.4, 83.5,
       83.6, 83.7, 83.8, 83.9, 84. , 84.1, 84.2, 84.3, 84.4, 84.5, 84.6,
       84.7, 84.8, 84.9, 85. , 85.1, 85.2, 85.3, 85.4, 85.5, 85.6, 85.7,
       85.8, 85.9, 86. , 86.1, 86.2, 86.3, 86.4, 86.5, 86.6, 86.7, 86.8,
       86.9, 87. , 87.1, 87.2, 87.3, 87.4, 87.5, 87.6, 87.7, 87.8, 87.9,
       88. , 88.1, 88.2, 88.3, 88.4, 88.5, 88.6, 88.7, 88.8, 88.9, 89. ,
       89.1, 89.2, 89.3, 89.4, 89.5, 89.6, 89.7, 89.8, 89.9, 90. , 90.1,
       90.2, 90.3, 90.4, 90.5, 90.6, 90.7, 90.8, 90.9, 91. , 91.1, 91.2,
       91.3, 91.4, 91.5, 91.6, 91.7, 91.8, 91.9, 92. , 92.1, 92.2, 92.3,
       92.4, 92.5, 92.6, 92.7, 92.8, 92.9, 93. , 93.1, 93.2, 93.3, 93.4,
       93.5, 93.6, 93.7, 93.8, 93.9, 94. , 94.1, 94.2, 94.3, 94.4, 94.5,
       94.6, 94.7, 94.8, 94.9, 95. , 95.1, 95.2, 95.3, 95.4, 95.5, 95.6,
       95.7, 95.8, 95.9, 96. , 96.1, 96.2, 96.3, 96.4, 96.5, 96.6, 96.7,
       96.8, 96.9, 97. , 97.1, 97.2, 97.3, 97.4, 97.5, 97.6, 97.7, 97.8,
       97.9, 98. , 98.1, 98.2, 98.3, 98.4, 98.5, 98.6, 98.7, 98.8, 98.9,
       99. , 99.1, 99.2, 99.3, 99.4, 99.5, 99.6, 99.7, 99.8, 99.9])

In [10]: x
Out[10]:
array([3.94362515, 5.84270326, 4.39117254, 6.36281471, 4.43228374,
       5.19457018, 5.72034936, 4.48991012, 5.10128753, 5.20099049,
       4.49841193, 5.15507246, 4.97334956, 5.26699879, 4.96555672,
       3.98252022, 4.69769095, 4.37998003, 5.13845914, 4.53654422,
       4.84336492, 5.16246475, 4.50880392, 5.44545474, 4.95058598,
       4.82060759, 5.70213801, 5.28980271, 3.98647678, 5.18971978,
       5.61143873, 5.46621862, 5.64418488, 5.12864545, 5.03199724,
       5.94397537, 6.40592249, 3.99240585, 4.69402129, 5.36111546,
       3.98068776, 4.89870199, 6.09930295, 5.71565584, 4.64882499,
       5.15286902, 4.71283166, 4.83795223, 5.33250879, 4.70438035,
       5.01797295, 5.19152469, 4.57310913, 5.11466552, 4.71154115,
       5.45720107, 6.08173871, 5.30042187, 5.22156077, 5.03066689,
       5.24498377, 4.82584673, 4.45493402, 4.67832714, 5.30073525,
       5.56287596, 4.78488495, 4.88632057, 5.13968134, 4.18200933,
       4.64942982, 4.46964969, 4.50363255, 5.25241004, 4.88727249,
       5.43617882, 4.68962941, 4.55205796, 4.49949837, 4.78762876,
       4.28334801, 5.08803021, 6.60432568, 4.95076621, 5.31678524,
       5.40856389, 4.56404146, 4.79481296, 4.17684079, 5.1754849 ,
       5.1676418 , 5.14756073, 4.99876595, 4.57579204, 5.25198508,
       4.57664479, 5.35911258, 6.22048184, 5.52917855, 4.58737483,
       6.0142675 , 5.01333075, 5.11586013, 4.76126642, 4.87932225,
       5.40332485, 3.70118223, 4.70298855, 4.29297674, 5.19592348,
       5.08917862, 5.08408223, 5.01371058, 4.48044009, 5.44141677,
       4.61220338, 5.09745016, 4.92064047, 5.51251385, 5.09450629,
       5.09764733, 5.12431364, 4.78900687, 5.62027024, 4.02159551,
       4.88172135, 5.21797417, 4.32224082, 5.51523339, 5.17134941,
       4.98802411, 5.47550015, 4.97158703, 4.61889115, 4.69495149,
       5.88416412, 5.01922996, 4.73354903, 4.82656679, 4.59158268,
       5.41062856, 4.45940292, 5.13643227, 5.32547237, 4.4823475 ,
       5.2193246 , 5.36185282, 4.54567937, 5.80863714, 5.42667535,
       5.74639846, 5.43211416, 4.39681192, 3.83120576, 5.3399107 ,
       5.21551691, 4.93402994, 4.20531599, 5.28036269, 4.80315226,
       4.45514166, 5.61902614, 4.44331044, 5.31005977, 5.18022879,
       4.18698026, 4.60592684, 5.12291594, 5.08437401, 5.55255601,
       5.17782104, 5.18026777, 4.69844275, 4.72957241, 5.3828204 ,
       5.4175657 , 4.36353939, 4.18508118, 4.37314714, 5.18076789,
       5.49828201, 6.0016327 , 5.08421157, 4.91380324, 5.49356864,
       4.94349285, 5.47759848, 4.33465881, 4.41171635, 5.42218464,
       5.06655191, 4.65929396, 5.21117058, 5.2019459 , 5.12905705,
       5.26721247, 5.37255761, 5.89890677, 5.3060179 , 4.74197265,
       5.76399253, 4.9672227 , 5.2929389 , 5.33714109, 5.33844602,
       4.46117205, 5.42141766, 4.59012013, 6.09229624, 5.64967531,
       4.92252491, 4.94759729, 4.48691948, 4.78324976, 3.98814798,
       5.18496857, 5.31003189, 5.26999639, 4.78161809, 5.0641812 ,
       4.57358783, 5.42601538, 4.35476094, 6.38389529, 4.93023542,
       4.39032824, 5.33181397, 4.96904223, 5.26538937, 4.60628859,
       5.39535406, 5.90306639, 4.74626529, 4.78374643, 5.236542  ,
       5.35463095, 5.66814374, 5.20639639, 6.11090388, 4.5911035 ,
       5.38356021, 5.0605228 , 4.99665157, 5.099586  , 4.25974301,
       4.43946377, 5.67671567, 4.80703441, 4.78779606, 5.37459431,
       5.73684212, 5.21668144, 5.12035102, 4.82406126, 5.36783777,
       5.17994878, 4.4401385 , 4.85179917, 4.97080291, 4.78309373,
       4.54008709, 5.03265066, 4.56144977, 5.97196097, 4.80160242,
       4.55790268, 4.84667674, 5.59966363, 4.53858314, 5.06951168,
       4.86858987, 4.42473159, 5.10716012, 4.73031685, 5.67786395,
       5.29321056, 5.87557418, 4.45820073, 5.090329  , 5.25989171,
       4.45268061, 5.08471337, 5.02813016, 5.84312431, 4.98332373,
       5.16519361, 5.11346491, 5.23506368, 4.69716038, 4.69416608,
       4.51259405, 4.81302547, 4.39583958, 4.94413316, 4.83013787,
       5.03655979, 6.06103536, 5.25576594, 5.26191524, 4.73906414,
       4.65202123, 5.25427782, 6.07771474, 5.16834787, 4.15868057,
       5.19212989, 4.8412646 , 5.19783474, 5.53482994, 3.93410184,
       5.08196015, 4.25976847, 4.0184751 , 4.26267962, 5.11400812,
       4.92542568, 4.8575669 , 4.801142  , 4.21721347, 5.63768892,
       5.2245216 , 5.22254775, 5.16096984, 4.9270214 , 4.81731344,
       4.25434093, 5.36219732, 5.19459525, 5.91531242, 4.93163815,
       4.74231086, 4.56186243, 5.06275426, 4.89911285, 4.99624158,
       4.96228505, 5.21754138, 4.42726653, 4.67462999, 6.06266993,
       5.60560314, 4.9230828 , 5.74805296, 4.62541185, 5.37472389,
       5.83562145, 4.36298968, 5.35202859, 4.51538136, 5.33632228,
       4.55546476, 3.81523436, 4.79838206, 4.37869435, 5.75924754,
       5.23706028, 5.53497625, 4.65019703, 4.44782032, 5.10365246,
       4.74397836, 4.4699703 , 6.78431008, 4.51265365, 4.31235813,
       5.40154652, 5.82411583, 5.28512316, 5.05774686, 4.98621602,
       5.24048975, 4.96121261, 4.50418624, 5.23735486, 5.28466709,
       4.88689666, 5.66904368, 4.94910352, 5.408734  , 5.66362146,
       4.97857506, 5.17899277, 5.35733453, 4.99507591, 5.17387281,
       5.24852132, 4.06311898, 4.62830661, 3.95387299, 5.95423291,
       5.77548093, 5.08547608, 4.73613712, 4.85720639, 4.81744332,
       5.11380579, 4.50055092, 6.01231144, 5.54697581, 5.10792768,
       4.78134039, 5.99501558, 5.09394206, 4.77998604, 4.16427094,
       5.15947353, 5.0662201 , 4.34509179, 5.67573429, 5.16266905,
       4.26379377, 5.47277004, 5.32436267, 5.30950086, 5.59809234,
       5.62302684, 4.03981251, 4.27881312, 5.01522192, 4.2875247 ,
       4.1651158 , 5.00012702, 5.48834387, 5.36140462, 4.59143336,
       5.58008719, 4.88330715, 5.0627665 , 5.38512791, 4.82681215,
       4.12700795, 4.10366361, 5.44239236, 3.63002705, 5.75803198,
       4.19083132, 5.3848751 , 5.19496974, 3.83679582, 6.01302813,
       6.18872624, 5.60304424, 5.51053888, 5.37929421, 5.46810483,
       5.27316045, 5.22101134, 5.55493215, 4.96951381, 4.10556265,
       4.95039939, 4.89764044, 5.83113509, 4.93552723, 5.43451587,
       5.71614449, 4.88054165, 5.74342045, 4.96260234, 5.57516125,
       4.58066629, 4.99234758, 4.66875194, 5.690924  , 5.46250105,
       4.94972605, 5.68767006, 4.0110491 , 5.0802095 , 4.55299581,
       4.94324368, 5.26171036, 4.30677446, 6.25015748, 5.78968722,
       5.02305961, 5.02050261, 5.3655072 , 5.42107064, 4.54602073,
       4.83718447, 4.90134745, 4.97678272, 5.13071786, 5.02447241,
       4.61292523, 4.49932124, 5.33886197, 4.74141796, 4.80620149,
       5.00864244, 5.52795411, 4.40809666, 5.51791752, 3.85989117,
       4.8589279 , 5.22800222, 4.1016432 , 4.81368358, 4.65651759,
       4.7604872 , 4.78071869, 6.34073849, 3.7524372 , 4.09064303,
       4.51124039, 4.13626989, 5.11689642, 6.02068715, 5.49998432,
       4.63434824, 5.13238209, 5.14994977, 4.68215563, 4.64213491,
       5.8538603 , 4.57573302, 4.71446537, 5.70849337, 4.97776708,
       4.84610823, 3.99224636, 5.59016701, 5.18678854, 6.21336856,
       5.22585461, 5.34230541, 4.52269823, 4.92485913, 4.57412073,
       5.07335507, 4.79097669, 5.57867974, 4.75978273, 5.63912413,
       4.66627157, 4.31086396, 5.581597  , 4.72828269, 5.06667122,
       4.96443297, 5.26512979, 4.53435223, 4.30122529, 5.0873754 ,
       4.95471186, 5.56162539, 4.82439673, 5.00386121, 3.973295  ,
       5.20121632, 5.50438905, 5.09129658, 4.53136194, 4.76068645,
       5.17127831, 4.91152468, 4.19989582, 5.5326502 , 5.23520901,
       4.66470328, 4.83546059, 3.97205024, 5.03899444, 5.80668704,
       4.64162606, 4.7821459 , 4.62456115, 4.06033933, 5.28458196,
       5.81498651, 4.47620989, 5.83752227, 5.16245499, 5.35181048,
       4.86546537, 5.506145  , 4.97372324, 4.398827  , 4.10463414,
       4.97290095, 5.10535413, 4.75723612, 5.33904061, 5.22772529,
       4.45404169, 4.99819478, 4.70181734, 5.17210417, 4.54090079,
       4.8210946 , 5.22834129, 4.79789231, 4.60090967, 5.85772776,
       5.04203781, 5.1349851 , 5.16873439, 5.52224413, 5.17270398,
       3.99548854, 5.19599272, 5.338351  , 4.84091101, 4.95083565,
       4.40964076, 4.25143098, 5.4804796 , 4.88183124, 4.78120287,
       4.33054297, 4.87375477, 5.14709502, 4.34864803, 5.76808272,
       5.24889069, 4.73660891, 5.74559119, 5.42997593, 5.04841296,
       6.22628012, 4.13699928, 5.6068744 , 4.60684989, 4.88788189,
       5.68252945, 5.31630472, 5.33038333, 4.84283935, 4.44603416,
       4.85592771, 5.90001934, 4.3390404 , 5.29138064, 4.69324575,
       4.42534914, 5.95606462, 4.7713408 , 4.78370064, 5.64424506,
       5.36304169, 4.46478704, 4.56199341, 5.05062785, 4.82057642,
       5.19164465, 5.39251826, 5.14742075, 5.88958942, 5.46192376,
       4.55810785, 5.24155093, 5.94098348, 4.64689101, 4.90941553,
       4.91369797, 5.09755826, 4.83274193, 5.53480046, 4.50102863,
       5.04511026, 4.27096346, 4.6887259 , 4.98485888, 5.08537298,
       4.89160406, 5.5805236 , 5.52250611, 4.55838049, 5.7883481 ,
       5.51756987, 5.21540518, 5.68442634, 4.89646841, 5.71336146,
       4.84029886, 5.16726375, 5.0316261 , 5.8031815 , 5.64674355,
       5.45057577, 4.96479865, 5.0665772 , 4.99829929, 5.60376252,
       5.26574986, 5.27205221, 5.0069914 , 4.87661817, 5.54219499,
       4.43255153, 5.32819959, 5.06429457, 5.35527764, 5.29050597,
       4.92116327, 5.30787907, 6.10788248, 5.11541771, 5.19100021,
       4.63972112, 4.73808802, 5.28977224, 5.21018512, 4.76925812,
       5.01461238, 5.10813825, 4.29264705, 5.50694348, 3.89502523,
       5.07921256, 5.1845846 , 5.57937645, 5.06845135, 4.98286986,
       4.83954042, 4.79523924, 4.29158098, 4.63732717, 5.23377747,
       5.01762978, 4.93993978, 5.44747211, 5.99425111, 4.17561767,
       5.58463949, 4.73773497, 5.04106624, 4.3233228 , 5.33477164,
       5.28482969, 4.43671149, 5.09149377, 4.74785714, 3.56746994,
       5.27452956, 5.39886671, 4.57076929, 4.94015759, 4.25617561,
       5.62499957, 4.27048685, 4.86320396, 5.53491169, 4.40911076,
       4.7959821 , 5.17455733, 4.81276844, 4.3835465 , 4.81275085,
       5.67655191, 5.38820707, 5.53827833, 4.9506082 , 5.01254902,
       5.28351921, 4.65567695, 5.3993048 , 5.58246532, 6.41784546,
       5.1802625 , 5.00241193, 4.89461017, 4.79517793, 5.64215621,
       5.22548989, 4.26374868, 5.35035952, 4.61169576, 5.2205033 ,
       4.74488352, 5.4273602 , 5.48704968, 5.02730464, 4.56640329,
       5.61231581, 4.91248441, 4.57996479, 5.98700229, 4.90131563,
       5.67193599, 5.96782917, 5.18143398, 5.68538516, 4.68292989,
       6.0881636 , 4.93517229, 4.44833957, 4.63611423, 5.21372572,
       4.10178262, 4.99091043, 4.92669371, 5.32321666, 4.58518005,
       4.92495015, 5.32475977, 4.97695667, 4.25245211, 5.5155031 ,
       4.7209057 , 5.0631944 , 5.61618246, 5.57138538, 5.58267108,
       4.82786341, 4.22059685, 4.66379276, 5.53660406, 4.44399767,
       4.63749024, 5.27933388, 6.02775279, 5.23506533, 5.16154097,
       5.23831996, 4.75520757, 4.13500054, 6.06947761, 5.07885766,
       4.49684407, 5.30934277, 5.06736093, 4.52069484, 6.21671777,
       5.0331226 , 5.32091712, 4.55768861, 4.09549472, 4.18489068,
       4.9229003 , 5.06552487, 4.586464  , 4.78097107, 4.42272792,
       4.37610186, 4.84072967, 4.69477141, 4.69125814, 4.19340918,
       4.66411492, 4.95771322, 4.70802287, 4.74197822, 4.99146413,
       4.99637502, 4.78708724, 4.74892874, 5.49762922, 5.54949687,
       4.77145774, 5.70870421, 5.271475  , 5.22474362, 5.03121609,
       4.96591635, 4.12196524, 5.28129791, 4.75374805, 4.19807342,
       4.52809791, 5.59072372, 5.68652718, 4.55219623, 4.81791432,
       5.66878384, 5.73289496, 4.70417519, 4.93695075, 4.88962685,
       4.67318965, 5.25535516, 4.63748524, 5.50812399, 5.30402403,
       5.71423394, 4.87466121, 4.75911084, 4.82466163, 5.11656808,
       4.78780568, 5.10425699, 4.79469661, 4.99657925, 4.11830018,
       4.34396731, 4.96147284, 4.94483929, 5.40147814, 5.31721902,
       4.76017557, 5.11257858, 4.3149258 , 4.64610932, 4.14142094,
       4.01638332, 4.52541764, 4.29136539, 5.12153432, 4.69057771,
       4.25895958, 5.80867925, 4.87863919, 4.4675869 , 5.01438089,
       4.19774728, 5.73747024, 5.342518  , 5.37586834, 4.65416032,
       5.17756608, 4.24042941, 5.34575416, 4.87365353, 4.4029035 ,
       5.70269014, 5.38329032, 4.9921666 , 5.09451472, 5.33084898,
       6.00655912, 5.2302687 , 5.11415558, 4.98474317, 5.87895691,
       5.77270398, 4.62129877, 4.22430755, 4.75541828, 5.15818916,
       5.01251663, 5.80170626, 5.10106346, 5.75647048, 4.93756154,
       5.41909101, 5.31450897, 4.55434894, 4.67278419, 3.84433985,
       4.8353421 , 6.08614751, 5.1637876 , 5.24431937, 4.59969845,
       3.76655681, 4.70774083, 5.70314476, 6.02084871, 5.40529957,
       4.65220932, 4.70319144, 3.85352732, 6.0860378 , 5.20469938,
       5.23844578, 5.71478686, 4.77695858, 5.18565028, 5.48596598,
       5.86019749, 4.63482437, 5.32217265, 5.71425648, 4.99788538,
       4.66188428, 4.83964427, 5.184458  , 5.67025949, 5.01604086,
       5.34165328, 4.84499766, 4.81175556, 4.27041652, 4.91956795,
       5.25383902, 4.37771892, 4.46257654, 5.18344231, 5.06122352,
       5.42854794, 4.40423119, 4.3339435 , 5.29247646, 4.33504359,
       5.32115795, 5.76856021, 5.86929767, 4.94765288, 4.08317601,
       5.40244088, 4.20772796, 4.83320461, 4.9367992 , 5.19457174,
       5.45562918, 5.3891692 , 5.03290804, 6.27288839, 4.94909501])

In [11]: y
Out[11]:
array([2.97463895, 3.16328139, 3.06897269, 3.569142  , 2.90253517,
       2.94783463, 3.23048849, 3.11396979, 2.9538954 , 2.84995787,
       2.52635376, 3.02811655, 2.74124298, 3.1472435 , 3.00618091,
       3.03563486, 3.21666478, 2.88505754, 3.09229205, 2.97459015,
       2.82318258, 3.34196367, 2.97134095, 2.97325066, 2.62259226,
       3.30096821, 2.77533325, 3.05211358, 2.80248565, 2.77264216,
       2.67739569, 3.35450934, 3.32898292, 2.96500413, 2.51673335,
       3.19504084, 2.92668089, 3.41376252, 2.78277613, 3.165507  ,
       2.91113235, 2.56387755, 2.75246463, 2.79777981, 3.16697759,
       3.17768186, 3.01298036, 3.16478643, 3.04165045, 2.66220589,
       3.28452478, 3.04116477, 3.10002505, 3.37827518, 3.18819865,
       3.22706597, 3.02450525, 3.02072445, 2.89978443, 2.96429433,
       3.06017072, 2.75257943, 2.96504634, 3.14525339, 3.23386261,
       2.41641517, 2.82597278, 3.08480586, 3.03779433, 2.91380072,
       3.11806525, 3.30465826, 3.06207867, 3.39215228, 2.89270012,
       2.95923302, 2.89372305, 2.4928091 , 3.00626545, 3.66714986,
       3.01272312, 2.95488135, 3.10020632, 2.99191685, 3.00440869,
       2.94638859, 3.01250401, 3.14026308, 2.50130385, 2.68800642,
       2.69445214, 3.21936418, 3.1163849 , 3.35934884, 3.0519206 ,
       3.12924437, 3.54037583, 3.39008654, 3.38687908, 2.90723723,
       3.08398215, 3.30527264, 3.08465851, 3.18396817, 2.97814047,
       3.00256871, 2.6076818 , 2.59915329, 3.37669723, 3.12855357,
       2.93556261, 2.55563304, 2.76871739, 2.93547504, 3.068072  ,
       3.08509639, 3.22098278, 3.15125031, 3.08643304, 2.95785558,
       2.92229625, 2.87070167, 3.18281251, 2.86064676, 2.81649495,
       2.73133261, 3.16755102, 2.75593486, 2.90624337, 2.81975694,
       2.75408983, 2.74824808, 2.66598457, 2.99170794, 3.11107816,
       3.25649899, 2.65982324, 2.89120867, 2.99764247, 3.00332404,
       3.021997  , 3.4599064 , 2.7821346 , 2.74089607, 3.15857423,
       3.3560093 , 3.32659738, 2.9977623 , 2.58980507, 2.8534064 ,
       3.21876097, 2.96153928, 2.92042387, 3.03222068, 3.12306003,
       2.96271976, 2.96432718, 2.83051305, 3.16168664, 3.10807604,
       3.11259538, 2.97322547, 3.04449003, 2.92335157, 2.9258331 ,
       2.80028611, 2.98928343, 2.89574123, 3.22245459, 3.4241544 ,
       2.85003212, 2.55246059, 2.68466779, 3.36314392, 2.23316   ,
       2.91913582, 2.8905192 , 3.11648372, 3.2434438 , 3.09542046,
       2.81272123, 2.6297644 , 2.75082508, 2.85029269, 2.51083719,
       3.20803552, 2.7425953 , 2.89064495, 2.77402822, 2.7146714 ,
       2.75087   , 2.86354384, 2.90220741, 3.18403228, 2.62276341,
       3.19831899, 3.40511691, 2.6519319 , 3.04948722, 2.74202748,
       3.35124545, 2.72076938, 2.98455355, 3.09880705, 2.94854237,
       2.82436403, 2.74967294, 2.64309812, 2.86284671, 2.80549412,
       2.46095019, 2.86265985, 2.72929995, 2.85709942, 2.92743272,
       3.21410484, 2.98204299, 2.53198975, 2.89936987, 2.70698369,
       3.3088734 , 2.55633195, 3.17694139, 3.27136814, 3.31311304,
       3.25421467, 2.96493388, 2.62991244, 3.11741802, 2.8596006 ,
       3.30730946, 2.76964334, 3.07830302, 2.72665749, 3.05338081,
       3.2554517 , 2.98101741, 3.25096641, 3.06958374, 2.64758465,
       3.40956582, 2.94590446, 2.84273531, 2.91659974, 2.85715755,
       2.90409979, 3.46421824, 3.23795763, 2.78439708, 3.29340251,
       3.41367071, 3.24366278, 2.6763042 , 2.64701281, 3.2218103 ,
       3.08906866, 2.71975826, 3.43672594, 3.25656004, 3.0447019 ,
       3.14037629, 3.21722667, 2.96683946, 3.19266429, 3.23844245,
       2.98808461, 2.6739543 , 3.73152815, 3.63291743, 2.69601175,
       3.07235688, 2.85378233, 3.19813354, 3.13844378, 2.8318121 ,
       3.12504274, 3.1931631 , 3.17794485, 2.73398618, 3.13361258,
       2.96456131, 3.42947856, 3.63873149, 2.84829169, 2.66533393,
       2.90513703, 3.49189276, 3.04969579, 3.14114686, 2.93763252,
       3.06817368, 3.22061986, 3.22570129, 2.96503309, 3.01412294,
       3.14125255, 3.01642208, 3.05945586, 2.94214856, 2.88914799,
       2.38113234, 2.8961694 , 2.68659001, 2.84267938, 2.77595526,
       2.94969402, 2.76222634, 2.88143274, 2.83599705, 3.21077958,
       2.90385333, 3.22114489, 3.25016891, 3.20683804, 2.95822484,
       3.05385029, 3.04997351, 2.74321561, 3.06518787, 2.9842132 ,
       2.74532354, 3.52928687, 2.64593742, 2.7161072 , 3.22581759,
       3.0515084 , 3.070855  , 3.50431725, 3.38242469, 3.37912869,
       2.90166393, 3.20601199, 2.78876889, 2.69179213, 2.8918518 ,
       2.83913759, 2.9226792 , 2.83125068, 2.72755972, 2.94743691,
       3.38191191, 2.96644657, 3.39501631, 2.77107236, 3.40820174,
       3.06753013, 3.14875878, 2.65301742, 3.05823384, 3.18248841,
       3.13789704, 2.43663148, 2.74498539, 3.11920699, 3.07599545,
       3.04489223, 2.83774206, 3.3725755 , 3.27013874, 2.59953853,
       3.12708338, 3.38616578, 2.6853391 , 3.00118706, 2.85836705,
       2.27137895, 3.46515951, 2.91781876, 2.80166696, 2.91931552,
       2.89369897, 3.37451991, 2.95952725, 2.72913111, 3.15436315,
       2.57788155, 2.71730549, 2.72761958, 2.70547843, 3.37113771,
       3.05145725, 3.22954845, 2.87499229, 2.88584796, 2.8314238 ,
       2.85778609, 3.13441815, 3.53289354, 3.22587856, 2.59103955,
       2.7080576 , 3.04402465, 3.66092005, 3.23885462, 2.79041682,
       3.1517194 , 2.89971554, 2.83080581, 3.0527091 , 2.40357665,
       2.83358545, 2.58272758, 2.83831001, 2.70208715, 3.06351853,
       3.32163958, 2.84696979, 3.10602451, 2.94090396, 2.92891614,
       2.95056864, 2.99843327, 3.22355881, 2.83487834, 2.733122  ,
       2.89676118, 2.812167  , 3.2739427 , 3.32950421, 3.39085323,
       3.07436733, 2.79301521, 2.99230632, 2.78285212, 2.78520598,
       3.01668062, 2.85786696, 2.76508272, 2.5376603 , 3.31414146,
       2.84569284, 3.01666341, 3.61715198, 3.15123691, 2.90589157,
       2.84364693, 2.80254264, 2.86202007, 2.56154752, 2.9949491 ,
       2.94124894, 3.12530756, 2.38361017, 2.89979063, 3.33322714,
       2.97832607, 2.7626117 , 3.27671013, 3.0713013 , 2.49744958,
       2.90358981, 2.6789977 , 2.49704213, 3.03471487, 2.98883874,
       2.94306139, 3.11380105, 2.88259257, 2.81001173, 3.11184672,
       3.43889607, 2.79054467, 3.23675874, 3.11297286, 3.21244125,
       3.47548518, 3.25926699, 2.75492937, 3.06070526, 2.78272207,
       3.17096881, 2.87272577, 3.27122061, 2.85079963, 3.15693283,
       3.10259975, 2.97155211, 3.50296532, 3.01184747, 2.55331451,
       3.36938773, 3.00486776, 3.60040852, 3.17518878, 3.29547148,
       2.69829701, 3.02452993, 3.23977149, 2.70871432, 3.25965355,
       3.01363519, 3.18681054, 3.16662393, 3.08352843, 2.67491894,
       3.10538201, 3.29231406, 2.81554629, 3.04076283, 3.10882601,
       2.8925528 , 2.80939968, 3.01420148, 2.96410342, 3.11499892,
       2.83203844, 3.04244595, 2.69183383, 2.73081185, 2.80124189,
       3.26944694, 3.09982518, 2.96751561, 3.23145285, 3.40719553,
       2.50143953, 2.86703179, 3.14495026, 2.83248766, 2.63148609,
       2.61753276, 3.11742702, 3.12584123, 2.53510153, 2.67607453,
       3.39398863, 2.83222913, 2.98004982, 3.28847279, 2.97251165,
       2.72874676, 3.04002945, 3.0461813 , 3.21554322, 3.15029376,
       3.2638308 , 3.20105903, 2.67894515, 3.09408345, 3.02414741,
       3.13530447, 2.98581329, 3.26438383, 2.88366008, 3.83439474,
       3.36605073, 3.21074526, 2.8256318 , 3.26894295, 2.85575077,
       2.70485254, 3.27719209, 3.03352832, 3.3568232 , 3.1258126 ,
       2.88848149, 2.78817145, 3.03215214, 3.10731906, 3.54205737,
       2.84916815, 3.05435897, 3.34521563, 2.98055463, 3.15157973,
       2.9440232 , 2.71502256, 3.33602871, 2.34789901, 2.67876174,
       3.28476225, 2.9002967 , 2.91680991, 2.68597844, 3.21285796,
       2.85709918, 2.99903103, 3.21842825, 3.2141382 , 3.01977013,
       3.11720697, 3.12817586, 2.69503812, 2.71482527, 2.84658961,
       3.30990382, 2.67401489, 2.31462262, 3.31172128, 3.08757133,
       2.82934853, 2.92814736, 3.2218311 , 3.4703933 , 2.77762584,
       3.39107502, 2.75812716, 2.57051412, 2.97802615, 2.58139375,
       2.79095728, 3.08693219, 2.94924256, 3.27099655, 3.23861914,
       3.21343337, 3.02257719, 2.93165753, 3.17249684, 3.50909145,
       2.77910855, 3.32446927, 2.76062899, 3.06607021, 3.08957409,
       3.25374553, 3.10564569, 3.01828167, 3.42178077, 3.23159573,
       2.99966322, 2.80215657, 2.88893643, 3.26795692, 2.45131096,
       2.96601183, 3.04474033, 2.74184875, 3.05320447, 3.23537959,
       2.70375127, 3.19396894, 3.19149644, 3.18711809, 3.07079899,
       3.28535993, 3.30171733, 3.50422202, 2.76593925, 2.857604  ,
       2.59627637, 2.65570861, 2.61071359, 2.99194654, 3.17412972,
       3.07316052, 3.01441565, 3.42318017, 3.58839609, 3.16096651,
       2.81385583, 2.92998466, 3.1044718 , 2.7970122 , 3.16057803,
       2.94410783, 3.08681135, 2.66741122, 2.92350058, 2.78775591,
       2.85739263, 3.148506  , 2.77610874, 2.36236352, 2.9745117 ,
       3.00034836, 3.06374717, 3.22416359, 2.99552638, 3.29480582,
       2.709285  , 2.51686452, 3.22938491, 2.81819201, 3.03887517,
       3.13422992, 2.85002953, 3.33632577, 2.89991745, 3.1150582 ,
       3.10321073, 3.01575359, 3.26436819, 3.31290387, 3.08389452,
       3.08121194, 2.98830708, 2.85783689, 3.3717972 , 2.82833443,
       3.10454403, 3.05631959, 3.05967011, 2.99390612, 3.01193726,
       2.9668189 , 2.94852007, 2.93681164, 3.13008549, 2.72762713,
       3.09684181, 2.85157515, 3.10199893, 3.34430852, 3.13299993,
       2.93193192, 3.30281083, 3.39030577, 2.90200634, 2.87596713,
       2.93631848, 2.88645754, 2.74302459, 2.78075999, 3.29378013,
       3.00150333, 3.14779875, 2.9089023 , 3.10945503, 3.09455722,
       2.717203  , 3.28703678, 3.17338304, 3.05159536, 2.74645187,
       3.00225835, 3.19483975, 2.59316298, 2.81345525, 2.3940734 ,
       2.88363325, 2.16872108, 3.28696135, 3.03952786, 3.16723229,
       3.27648352, 2.71712824, 2.94673324, 3.30702914, 2.79110062,
       2.73253866, 3.05425943, 2.91437525, 2.96944159, 2.88383578,
       3.25679227, 2.520673  , 2.98684965, 3.52515142, 3.23606327,
       2.89788678, 3.14922971, 3.3135897 , 2.94409305, 2.63302226,
       3.00137584, 3.1038504 , 3.43675569, 3.24987021, 2.69756249,
       3.36222834, 3.10442203, 3.16471978, 3.26582044, 3.10048312,
       3.08015866, 3.06974254, 3.62337575, 3.33426805, 2.46754017,
       3.045747  , 3.12202946, 3.06952193, 2.69825727, 2.91181749,
       3.11654859, 3.45859088, 3.055339  , 3.08296058, 3.25484291,
       2.77186327, 3.54755934, 3.39427035, 3.25357183, 3.01067753,
       3.03067121, 3.1667178 , 3.12818846, 2.21036283, 2.67109504,
       2.85213799, 2.8554368 , 2.86373043, 3.20084497, 3.37966024,
       3.21450907, 2.94142255, 2.89929518, 3.12766209, 3.05580836,
       3.08277153, 3.09866204, 2.41075748, 2.93095655, 3.0422572 ,
       2.96733239, 3.12389481, 2.95181592, 2.65976987, 2.85476948,
       3.03437221, 3.23787195, 2.77292727, 2.66604846, 3.08117573,
       3.38549454, 2.79634841, 3.5010018 , 2.76487399, 3.58441114,
       2.98658614, 3.00389602, 2.6941158 , 2.83286653, 2.39369012,
       3.12060913, 3.39634738, 2.66265467, 2.6719343 , 3.41001716,
       2.68892867, 2.81609858, 2.81653151, 2.96938717, 3.09441086,
       2.85031866, 2.96344336, 2.89381541, 3.07394737, 2.82977904,
       3.05430164, 3.04465625, 2.8573066 , 2.75436161, 2.6250042 ,
       2.60524796, 2.62038247, 3.01593328, 2.718343  , 3.18557624,
       2.80966555, 2.73385598, 2.57231984, 2.88190873, 3.21857325,
       2.50047387, 2.84091346, 2.77226956, 2.78325125, 2.47945664,
       2.74389612, 2.60415467, 2.45750239, 3.06586865, 3.03774996,
       2.79196011, 3.24516478, 2.95243248, 2.66828924, 3.12443701,
       3.32144857, 2.79585287, 2.90878774, 2.16102652, 2.50410165,
       2.89064938, 2.69275647, 3.29010084, 2.98439699, 3.28696239,
       3.20504491, 3.28650539, 2.88828578, 2.40960545, 2.95114531,
       2.57062948, 2.87988421, 3.08207536, 2.88236176, 2.81997908,
       2.79268595, 2.94962502, 2.45431907, 3.05956819, 2.75293134,
       3.12985444, 3.45846135, 2.63480718, 3.0003143 , 3.19545261,
       2.6078326 , 3.32808353, 2.88769158, 2.94527037, 3.06884055,
       2.72303547, 3.26373505, 2.86553493, 3.02431363, 3.26883649,
       2.60901501, 3.17523886, 3.55790014, 2.81430908, 3.17056118,
       3.10539784, 3.21617758, 2.94280434, 2.92201248, 3.05857396,
       2.76921039, 3.07071327, 3.22960697, 3.29947905, 3.10787276,
       2.91519744, 3.11561696, 3.08056127, 3.24774268, 2.64089144,
       2.95925347, 2.85124409, 3.1207341 , 3.51627016, 3.06245824,
       3.08066758, 3.07954311, 2.61994733, 3.16764199, 3.02016765,
       3.28217152, 3.14544754, 2.73652197, 3.05586369, 3.0675403 ,
       3.01875769, 2.89478897, 3.3775542 , 2.68307153, 3.07170606,
       3.11575673, 2.85742874, 2.8842995 , 2.90233429, 3.29042847,
       3.2307794 , 2.75218432, 2.48451398, 3.35813859, 2.87442884,
       2.82360049, 2.98930169, 3.19570637, 3.24296515, 3.20050203,
       2.92521662, 2.90682194, 3.34646286, 2.92677424, 2.98467072,
       2.92533118, 2.84240541, 2.77435132, 2.77996124, 2.72930558,
       2.7494357 , 3.25586925, 2.89901121, 3.24759431, 3.12760598,
       2.97224597, 3.20717795, 3.27216971, 3.34887515, 2.95084293,
       3.17610216, 2.75051332, 3.11152373, 3.18825319, 3.1018485 ,
       2.58612446, 3.25673937, 2.64319436, 3.02387556, 3.12077227,
       2.75856891, 3.15146408, 3.30468879, 3.11267899, 3.07376392])

In [12]: x
Out[12]:
array([3.94362515, 5.84270326, 4.39117254, 6.36281471, 4.43228374,
       5.19457018, 5.72034936, 4.48991012, 5.10128753, 5.20099049,
       4.49841193, 5.15507246, 4.97334956, 5.26699879, 4.96555672,
       3.98252022, 4.69769095, 4.37998003, 5.13845914, 4.53654422,
       4.84336492, 5.16246475, 4.50880392, 5.44545474, 4.95058598,
       4.82060759, 5.70213801, 5.28980271, 3.98647678, 5.18971978,
       5.61143873, 5.46621862, 5.64418488, 5.12864545, 5.03199724,
       5.94397537, 6.40592249, 3.99240585, 4.69402129, 5.36111546,
       3.98068776, 4.89870199, 6.09930295, 5.71565584, 4.64882499,
       5.15286902, 4.71283166, 4.83795223, 5.33250879, 4.70438035,
       5.01797295, 5.19152469, 4.57310913, 5.11466552, 4.71154115,
       5.45720107, 6.08173871, 5.30042187, 5.22156077, 5.03066689,
       5.24498377, 4.82584673, 4.45493402, 4.67832714, 5.30073525,
       5.56287596, 4.78488495, 4.88632057, 5.13968134, 4.18200933,
       4.64942982, 4.46964969, 4.50363255, 5.25241004, 4.88727249,
       5.43617882, 4.68962941, 4.55205796, 4.49949837, 4.78762876,
       4.28334801, 5.08803021, 6.60432568, 4.95076621, 5.31678524,
       5.40856389, 4.56404146, 4.79481296, 4.17684079, 5.1754849 ,
       5.1676418 , 5.14756073, 4.99876595, 4.57579204, 5.25198508,
       4.57664479, 5.35911258, 6.22048184, 5.52917855, 4.58737483,
       6.0142675 , 5.01333075, 5.11586013, 4.76126642, 4.87932225,
       5.40332485, 3.70118223, 4.70298855, 4.29297674, 5.19592348,
       5.08917862, 5.08408223, 5.01371058, 4.48044009, 5.44141677,
       4.61220338, 5.09745016, 4.92064047, 5.51251385, 5.09450629,
       5.09764733, 5.12431364, 4.78900687, 5.62027024, 4.02159551,
       4.88172135, 5.21797417, 4.32224082, 5.51523339, 5.17134941,
       4.98802411, 5.47550015, 4.97158703, 4.61889115, 4.69495149,
       5.88416412, 5.01922996, 4.73354903, 4.82656679, 4.59158268,
       5.41062856, 4.45940292, 5.13643227, 5.32547237, 4.4823475 ,
       5.2193246 , 5.36185282, 4.54567937, 5.80863714, 5.42667535,
       5.74639846, 5.43211416, 4.39681192, 3.83120576, 5.3399107 ,
       5.21551691, 4.93402994, 4.20531599, 5.28036269, 4.80315226,
       4.45514166, 5.61902614, 4.44331044, 5.31005977, 5.18022879,
       4.18698026, 4.60592684, 5.12291594, 5.08437401, 5.55255601,
       5.17782104, 5.18026777, 4.69844275, 4.72957241, 5.3828204 ,
       5.4175657 , 4.36353939, 4.18508118, 4.37314714, 5.18076789,
       5.49828201, 6.0016327 , 5.08421157, 4.91380324, 5.49356864,
       4.94349285, 5.47759848, 4.33465881, 4.41171635, 5.42218464,
       5.06655191, 4.65929396, 5.21117058, 5.2019459 , 5.12905705,
       5.26721247, 5.37255761, 5.89890677, 5.3060179 , 4.74197265,
       5.76399253, 4.9672227 , 5.2929389 , 5.33714109, 5.33844602,
       4.46117205, 5.42141766, 4.59012013, 6.09229624, 5.64967531,
       4.92252491, 4.94759729, 4.48691948, 4.78324976, 3.98814798,
       5.18496857, 5.31003189, 5.26999639, 4.78161809, 5.0641812 ,
       4.57358783, 5.42601538, 4.35476094, 6.38389529, 4.93023542,
       4.39032824, 5.33181397, 4.96904223, 5.26538937, 4.60628859,
       5.39535406, 5.90306639, 4.74626529, 4.78374643, 5.236542  ,
       5.35463095, 5.66814374, 5.20639639, 6.11090388, 4.5911035 ,
       5.38356021, 5.0605228 , 4.99665157, 5.099586  , 4.25974301,
       4.43946377, 5.67671567, 4.80703441, 4.78779606, 5.37459431,
       5.73684212, 5.21668144, 5.12035102, 4.82406126, 5.36783777,
       5.17994878, 4.4401385 , 4.85179917, 4.97080291, 4.78309373,
       4.54008709, 5.03265066, 4.56144977, 5.97196097, 4.80160242,
       4.55790268, 4.84667674, 5.59966363, 4.53858314, 5.06951168,
       4.86858987, 4.42473159, 5.10716012, 4.73031685, 5.67786395,
       5.29321056, 5.87557418, 4.45820073, 5.090329  , 5.25989171,
       4.45268061, 5.08471337, 5.02813016, 5.84312431, 4.98332373,
       5.16519361, 5.11346491, 5.23506368, 4.69716038, 4.69416608,
       4.51259405, 4.81302547, 4.39583958, 4.94413316, 4.83013787,
       5.03655979, 6.06103536, 5.25576594, 5.26191524, 4.73906414,
       4.65202123, 5.25427782, 6.07771474, 5.16834787, 4.15868057,
       5.19212989, 4.8412646 , 5.19783474, 5.53482994, 3.93410184,
       5.08196015, 4.25976847, 4.0184751 , 4.26267962, 5.11400812,
       4.92542568, 4.8575669 , 4.801142  , 4.21721347, 5.63768892,
       5.2245216 , 5.22254775, 5.16096984, 4.9270214 , 4.81731344,
       4.25434093, 5.36219732, 5.19459525, 5.91531242, 4.93163815,
       4.74231086, 4.56186243, 5.06275426, 4.89911285, 4.99624158,
       4.96228505, 5.21754138, 4.42726653, 4.67462999, 6.06266993,
       5.60560314, 4.9230828 , 5.74805296, 4.62541185, 5.37472389,
       5.83562145, 4.36298968, 5.35202859, 4.51538136, 5.33632228,
       4.55546476, 3.81523436, 4.79838206, 4.37869435, 5.75924754,
       5.23706028, 5.53497625, 4.65019703, 4.44782032, 5.10365246,
       4.74397836, 4.4699703 , 6.78431008, 4.51265365, 4.31235813,
       5.40154652, 5.82411583, 5.28512316, 5.05774686, 4.98621602,
       5.24048975, 4.96121261, 4.50418624, 5.23735486, 5.28466709,
       4.88689666, 5.66904368, 4.94910352, 5.408734  , 5.66362146,
       4.97857506, 5.17899277, 5.35733453, 4.99507591, 5.17387281,
       5.24852132, 4.06311898, 4.62830661, 3.95387299, 5.95423291,
       5.77548093, 5.08547608, 4.73613712, 4.85720639, 4.81744332,
       5.11380579, 4.50055092, 6.01231144, 5.54697581, 5.10792768,
       4.78134039, 5.99501558, 5.09394206, 4.77998604, 4.16427094,
       5.15947353, 5.0662201 , 4.34509179, 5.67573429, 5.16266905,
       4.26379377, 5.47277004, 5.32436267, 5.30950086, 5.59809234,
       5.62302684, 4.03981251, 4.27881312, 5.01522192, 4.2875247 ,
       4.1651158 , 5.00012702, 5.48834387, 5.36140462, 4.59143336,
       5.58008719, 4.88330715, 5.0627665 , 5.38512791, 4.82681215,
       4.12700795, 4.10366361, 5.44239236, 3.63002705, 5.75803198,
       4.19083132, 5.3848751 , 5.19496974, 3.83679582, 6.01302813,
       6.18872624, 5.60304424, 5.51053888, 5.37929421, 5.46810483,
       5.27316045, 5.22101134, 5.55493215, 4.96951381, 4.10556265,
       4.95039939, 4.89764044, 5.83113509, 4.93552723, 5.43451587,
       5.71614449, 4.88054165, 5.74342045, 4.96260234, 5.57516125,
       4.58066629, 4.99234758, 4.66875194, 5.690924  , 5.46250105,
       4.94972605, 5.68767006, 4.0110491 , 5.0802095 , 4.55299581,
       4.94324368, 5.26171036, 4.30677446, 6.25015748, 5.78968722,
       5.02305961, 5.02050261, 5.3655072 , 5.42107064, 4.54602073,
       4.83718447, 4.90134745, 4.97678272, 5.13071786, 5.02447241,
       4.61292523, 4.49932124, 5.33886197, 4.74141796, 4.80620149,
       5.00864244, 5.52795411, 4.40809666, 5.51791752, 3.85989117,
       4.8589279 , 5.22800222, 4.1016432 , 4.81368358, 4.65651759,
       4.7604872 , 4.78071869, 6.34073849, 3.7524372 , 4.09064303,
       4.51124039, 4.13626989, 5.11689642, 6.02068715, 5.49998432,
       4.63434824, 5.13238209, 5.14994977, 4.68215563, 4.64213491,
       5.8538603 , 4.57573302, 4.71446537, 5.70849337, 4.97776708,
       4.84610823, 3.99224636, 5.59016701, 5.18678854, 6.21336856,
       5.22585461, 5.34230541, 4.52269823, 4.92485913, 4.57412073,
       5.07335507, 4.79097669, 5.57867974, 4.75978273, 5.63912413,
       4.66627157, 4.31086396, 5.581597  , 4.72828269, 5.06667122,
       4.96443297, 5.26512979, 4.53435223, 4.30122529, 5.0873754 ,
       4.95471186, 5.56162539, 4.82439673, 5.00386121, 3.973295  ,
       5.20121632, 5.50438905, 5.09129658, 4.53136194, 4.76068645,
       5.17127831, 4.91152468, 4.19989582, 5.5326502 , 5.23520901,
       4.66470328, 4.83546059, 3.97205024, 5.03899444, 5.80668704,
       4.64162606, 4.7821459 , 4.62456115, 4.06033933, 5.28458196,
       5.81498651, 4.47620989, 5.83752227, 5.16245499, 5.35181048,
       4.86546537, 5.506145  , 4.97372324, 4.398827  , 4.10463414,
       4.97290095, 5.10535413, 4.75723612, 5.33904061, 5.22772529,
       4.45404169, 4.99819478, 4.70181734, 5.17210417, 4.54090079,
       4.8210946 , 5.22834129, 4.79789231, 4.60090967, 5.85772776,
       5.04203781, 5.1349851 , 5.16873439, 5.52224413, 5.17270398,
       3.99548854, 5.19599272, 5.338351  , 4.84091101, 4.95083565,
       4.40964076, 4.25143098, 5.4804796 , 4.88183124, 4.78120287,
       4.33054297, 4.87375477, 5.14709502, 4.34864803, 5.76808272,
       5.24889069, 4.73660891, 5.74559119, 5.42997593, 5.04841296,
       6.22628012, 4.13699928, 5.6068744 , 4.60684989, 4.88788189,
       5.68252945, 5.31630472, 5.33038333, 4.84283935, 4.44603416,
       4.85592771, 5.90001934, 4.3390404 , 5.29138064, 4.69324575,
       4.42534914, 5.95606462, 4.7713408 , 4.78370064, 5.64424506,
       5.36304169, 4.46478704, 4.56199341, 5.05062785, 4.82057642,
       5.19164465, 5.39251826, 5.14742075, 5.88958942, 5.46192376,
       4.55810785, 5.24155093, 5.94098348, 4.64689101, 4.90941553,
       4.91369797, 5.09755826, 4.83274193, 5.53480046, 4.50102863,
       5.04511026, 4.27096346, 4.6887259 , 4.98485888, 5.08537298,
       4.89160406, 5.5805236 , 5.52250611, 4.55838049, 5.7883481 ,
       5.51756987, 5.21540518, 5.68442634, 4.89646841, 5.71336146,
       4.84029886, 5.16726375, 5.0316261 , 5.8031815 , 5.64674355,
       5.45057577, 4.96479865, 5.0665772 , 4.99829929, 5.60376252,
       5.26574986, 5.27205221, 5.0069914 , 4.87661817, 5.54219499,
       4.43255153, 5.32819959, 5.06429457, 5.35527764, 5.29050597,
       4.92116327, 5.30787907, 6.10788248, 5.11541771, 5.19100021,
       4.63972112, 4.73808802, 5.28977224, 5.21018512, 4.76925812,
       5.01461238, 5.10813825, 4.29264705, 5.50694348, 3.89502523,
       5.07921256, 5.1845846 , 5.57937645, 5.06845135, 4.98286986,
       4.83954042, 4.79523924, 4.29158098, 4.63732717, 5.23377747,
       5.01762978, 4.93993978, 5.44747211, 5.99425111, 4.17561767,
       5.58463949, 4.73773497, 5.04106624, 4.3233228 , 5.33477164,
       5.28482969, 4.43671149, 5.09149377, 4.74785714, 3.56746994,
       5.27452956, 5.39886671, 4.57076929, 4.94015759, 4.25617561,
       5.62499957, 4.27048685, 4.86320396, 5.53491169, 4.40911076,
       4.7959821 , 5.17455733, 4.81276844, 4.3835465 , 4.81275085,
       5.67655191, 5.38820707, 5.53827833, 4.9506082 , 5.01254902,
       5.28351921, 4.65567695, 5.3993048 , 5.58246532, 6.41784546,
       5.1802625 , 5.00241193, 4.89461017, 4.79517793, 5.64215621,
       5.22548989, 4.26374868, 5.35035952, 4.61169576, 5.2205033 ,
       4.74488352, 5.4273602 , 5.48704968, 5.02730464, 4.56640329,
       5.61231581, 4.91248441, 4.57996479, 5.98700229, 4.90131563,
       5.67193599, 5.96782917, 5.18143398, 5.68538516, 4.68292989,
       6.0881636 , 4.93517229, 4.44833957, 4.63611423, 5.21372572,
       4.10178262, 4.99091043, 4.92669371, 5.32321666, 4.58518005,
       4.92495015, 5.32475977, 4.97695667, 4.25245211, 5.5155031 ,
       4.7209057 , 5.0631944 , 5.61618246, 5.57138538, 5.58267108,
       4.82786341, 4.22059685, 4.66379276, 5.53660406, 4.44399767,
       4.63749024, 5.27933388, 6.02775279, 5.23506533, 5.16154097,
       5.23831996, 4.75520757, 4.13500054, 6.06947761, 5.07885766,
       4.49684407, 5.30934277, 5.06736093, 4.52069484, 6.21671777,
       5.0331226 , 5.32091712, 4.55768861, 4.09549472, 4.18489068,
       4.9229003 , 5.06552487, 4.586464  , 4.78097107, 4.42272792,
       4.37610186, 4.84072967, 4.69477141, 4.69125814, 4.19340918,
       4.66411492, 4.95771322, 4.70802287, 4.74197822, 4.99146413,
       4.99637502, 4.78708724, 4.74892874, 5.49762922, 5.54949687,
       4.77145774, 5.70870421, 5.271475  , 5.22474362, 5.03121609,
       4.96591635, 4.12196524, 5.28129791, 4.75374805, 4.19807342,
       4.52809791, 5.59072372, 5.68652718, 4.55219623, 4.81791432,
       5.66878384, 5.73289496, 4.70417519, 4.93695075, 4.88962685,
       4.67318965, 5.25535516, 4.63748524, 5.50812399, 5.30402403,
       5.71423394, 4.87466121, 4.75911084, 4.82466163, 5.11656808,
       4.78780568, 5.10425699, 4.79469661, 4.99657925, 4.11830018,
       4.34396731, 4.96147284, 4.94483929, 5.40147814, 5.31721902,
       4.76017557, 5.11257858, 4.3149258 , 4.64610932, 4.14142094,
       4.01638332, 4.52541764, 4.29136539, 5.12153432, 4.69057771,
       4.25895958, 5.80867925, 4.87863919, 4.4675869 , 5.01438089,
       4.19774728, 5.73747024, 5.342518  , 5.37586834, 4.65416032,
       5.17756608, 4.24042941, 5.34575416, 4.87365353, 4.4029035 ,
       5.70269014, 5.38329032, 4.9921666 , 5.09451472, 5.33084898,
       6.00655912, 5.2302687 , 5.11415558, 4.98474317, 5.87895691,
       5.77270398, 4.62129877, 4.22430755, 4.75541828, 5.15818916,
       5.01251663, 5.80170626, 5.10106346, 5.75647048, 4.93756154,
       5.41909101, 5.31450897, 4.55434894, 4.67278419, 3.84433985,
       4.8353421 , 6.08614751, 5.1637876 , 5.24431937, 4.59969845,
       3.76655681, 4.70774083, 5.70314476, 6.02084871, 5.40529957,
       4.65220932, 4.70319144, 3.85352732, 6.0860378 , 5.20469938,
       5.23844578, 5.71478686, 4.77695858, 5.18565028, 5.48596598,
       5.86019749, 4.63482437, 5.32217265, 5.71425648, 4.99788538,
       4.66188428, 4.83964427, 5.184458  , 5.67025949, 5.01604086,
       5.34165328, 4.84499766, 4.81175556, 4.27041652, 4.91956795,
       5.25383902, 4.37771892, 4.46257654, 5.18344231, 5.06122352,
       5.42854794, 4.40423119, 4.3339435 , 5.29247646, 4.33504359,
       5.32115795, 5.76856021, 5.86929767, 4.94765288, 4.08317601,
       5.40244088, 4.20772796, 4.83320461, 4.9367992 , 5.19457174,
       5.45562918, 5.3891692 , 5.03290804, 6.27288839, 4.94909501])

In [13]: plt.plot(x, t)
Out[13]: [<matplotlib.lines.Line2D at 0x7f4a8b424d68>]

In [14]: plt.figure()
    ...: plt.plot(t, x, marker='', label='x')
    ...: plt.plot(t, y, marker='', label='y')
    ...: plt.plot(t, absd, marker='', label='absd')
    ...: plt.xlabel('Time (s)')
    ...: plt.ylabel('Position (cm)')
    ...: plt.title('Time series')
    ...: plt.legend()
    ...: plt.savefig('time_series.png')
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-14-7f3de8853434> in <module>
      2 plt.plot(t, x, marker='', label='x')
      3 plt.plot(t, y, marker='', label='y')
----> 4 plt.plot(t, absd, marker='', label='absd')
      5 plt.xlabel('Time (s)')
      6 plt.ylabel('Position (cm)')

NameError: name 'absd' is not defined
> <ipython-input-14-7f3de8853434>(4)<module>()
      2 plt.plot(t, x, marker='', label='x')
      3 plt.plot(t, y, marker='', label='y')
----> 4 plt.plot(t, absd, marker='', label='absd')
      5 plt.xlabel('Time (s)')
      6 plt.ylabel('Position (cm)')

ipdb> c

In [15]: absd = absdiff(x, y)
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-15-5b678a777fc1> in <module>
----> 1 absd = absdiff(x, y)

NameError: name 'absdiff' is not defined
> <ipython-input-15-5b678a777fc1>(1)<module>()
----> 1 absd = absdiff(x, y)

ipdb> c

In [16]: d = np.load('homework3.npz')
    ...: list(d) # return array names (keys) in a list: ['t', 'x', 'y']
    ...: d.files # another way to return array names, again in a list
    ...: t, x, y = d['t'], d['x'], d['y'] # extract arrays
    ...:

In [17]: absd = absdiff(x, y)
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-17-5b678a777fc1> in <module>
----> 1 absd = absdiff(x, y)

NameError: name 'absdiff' is not defined
> <ipython-input-17-5b678a777fc1>(1)<module>()
----> 1 absd = absdiff(x, y)

ipdb> c

In [18]: def absdiff(a, b):
    ...:     """Return the absolute difference between a and b"""
    ...:     a = np.asarray(a)
    ...:     b = np.asarray(b)
    ...:     return np.abs(a - b)
    ...:
    ...: # load data:
    ...: d = np.load('homework3.npz')
    ...: list(d) # return array names (keys) in a list: ['t', 'x', 'y']
    ...: d.files # another way to return array names, again in a list
    ...: t, x, y = d['t'], d['x'], d['y'] # extract arrays
    ...:
    ...: absd = absdiff(x, y)

In [19]: # plot time series:
    ...: plt.figure()
    ...: plt.plot(t, x, marker='', label='x')
    ...: plt.plot(t, y, marker='', label='y')
    ...: plt.plot(t, absd, marker='', label='absd')
    ...: plt.xlabel('Time (s)')
    ...: plt.ylabel('Position (cm)')
    ...: plt.title('Time series')
    ...: plt.legend()
    ...: plt.savefig('time_series.png')


In [20]:

In [20]: run homework3_solutions.py
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
~/SciPyCourse2019/notes/homework3/homework3_solutions.py in <module>
      1 # code used to generate the data:
      2
----> 3 t = np.arange(0, 100, 0.1)
      4 x = np.random.normal(loc=5, scale=0.5, size=1000)
      5 y = np.random.normal(loc=3, scale=0.25, size=1000)

NameError: name 'np' is not defined
> /home/mspacek/SciPyCourse2019/notes/homework3/homework3_solutions.py(3)<module>()
      1 # code used to generate the data:
      2
----> 3 t = np.arange(0, 100, 0.1)
      4 x = np.random.normal(loc=5, scale=0.5, size=1000)
      5 y = np.random.normal(loc=3, scale=0.25, size=1000)

ipdb> c

In [21]: run homework3_solutions.py
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
~/SciPyCourse2019/notes/homework3/homework3_solutions.py in <module>
     24
     25 # plot time series:
---> 26 plt.figure()
     27 plt.plot(t, x, marker='', label='x')
     28 plt.plot(t, y, marker='', label='y')

NameError: name 'plt' is not defined
> /home/mspacek/SciPyCourse2019/notes/homework3/homework3_solutions.py(26)<module>()
     24
     25 # plot time series:
---> 26 plt.figure()
     27 plt.plot(t, x, marker='', label='x')
     28 plt.plot(t, y, marker='', label='y')

ipdb> c

In [22]: run homework3_solutions.py

In [23]: x.shape
Out[23]: (1000,)

In [24]: y.shape
Out[24]: (1000,)

In [25]: t.shape
Out[25]: (1000,)

In [26]: plt.figure()
    ...: bins = np.arange(0, 7.5, 0.1)
    ...: plt.hist(x, bins=bins, label='x')
    ...: plt.hist(y, bins=bins, label='y')
    ...: plt.hist(absd, bins=bins, label='absd')
    ...: plt.xlabel('Position (cm)')
    ...: plt.title('Distributions')
    ...: plt.legend()
    ...: plt.savefig('distributions.png')


In [27]:

In [27]: plt.figure()
    ...: bins = np.arange(0, 7.5, 0.01)
    ...: plt.hist(x, bins=bins, label='x')
    ...: plt.hist(y, bins=bins, label='y')
    ...: plt.hist(absd, bins=bins, label='absd')
    ...: plt.xlabel('Position (cm)')
    ...: plt.title('Distributions')
    ...: plt.legend()
    ...: plt.savefig('distributions.png')


In [28]:

In [28]: plt.figure()
    ...: bins = np.arange(0, 7.5, 1)
    ...: plt.hist(x, bins=bins, label='x')
    ...: plt.hist(y, bins=bins, label='y')
    ...: plt.hist(absd, bins=bins, label='absd')
    ...: plt.xlabel('Position (cm)')
    ...: plt.title('Distributions')
    ...: plt.legend()
    ...: plt.savefig('distributions.png')


In [29]:

In [29]: plt.figure()
    ...: #bins = np.arange(0, 7.5, 0.1)
    ...: bins = 30
    ...: plt.hist(x, bins=bins, label='x')
    ...: plt.hist(y, bins=bins, label='y')
    ...: plt.hist(absd, bins=bins, label='absd')
    ...: plt.xlabel('Position (cm)')
    ...: plt.title('Distributions')
    ...: plt.legend()
    ...: plt.savefig('distributions.png')


In [30]:

In [30]:

In [30]: plt.close('all')

In [31]: # plot distributions:
    ...: plt.figure()
    ...: bins = np.arange(0, 7.5, 0.1)
    ...: plt.hist(x, bins=bins, label='x')
    ...: plt.hist(y, bins=bins, label='y')
    ...: plt.hist(absd, bins=bins, label='absd')
    ...: plt.xlabel('Position (cm)')
    ...: plt.title('Distributions')
    ...: plt.legend()
    ...: plt.savefig('distributions.png')


In [32]:

In [32]: np.savez('t_absd.npz', t=t, absd=absd)

In [33]: np.savez('t_absd.npz', t, absd)

In [34]: np.savez('t_absd.npz', t=t, absd=absd)

In [35]: plt.close('all')

In [36]: plt.figure()
Out[36]: <Figure size 700x700 with 0 Axes>

In [37]: t = np.linspace(0, 4*np.pi, 100)

In [38]: s = np.sin(t)

In [39]: c = np.cos(t)

In [40]: plt.plot(t, s)
Out[40]: [<matplotlib.lines.Line2D at 0x7f4a5c253630>]

In [41]: plt.plot(t, c)
Out[41]: [<matplotlib.lines.Line2D at 0x7f4a5c1a1da0>]

In [42]: plt.figure()
Out[42]: <Figure size 700x700 with 0 Axes>

In [43]: plt.plot(t, c)
Out[43]: [<matplotlib.lines.Line2D at 0x7f4a5c165dd8>]

In [44]: plt.gcf()
Out[44]: <Figure size 700x700 with 1 Axes>

In [45]: f = plt.gcf()

In [46]: a = plt.gca()

In [47]: plt.close('all')

In [48]: f, ax = plt.subplots()

In [49]: ax.plot(t, s)
Out[49]: [<matplotlib.lines.Line2D at 0x7f4a5c2c4d68>]

In [50]: ax.plot(t, c)
Out[50]: [<matplotlib.lines.Line2D at 0x7f4a5c70e860>]

In [51]: ax.set_xlabel('time')
Out[51]: Text(0.5, 13.94444444444443, 'time')

In [52]: ax.set_title('example')
Out[52]: Text(0.5, 1.0, 'example')

In [53]: ax.set_xlim(0, 4)
Out[53]: (0, 4)

In [54]: f2, ax2 = plt.subplots()

In [55]: ax2.plot(t, s)
Out[55]: [<matplotlib.lines.Line2D at 0x7f4a153b42b0>]

In [56]: ax2.set_xlabel('time')
Out[56]: Text(0.5, 13.94444444444443, 'time')

In [57]: ax2.set_title('example2')
Out[57]: Text(0.5, 1.0, 'example2')

In [58]: ax.set_title('example1')
Out[58]: Text(0.5, 1.0, 'example1')

In [59]: f
Out[59]: <Figure size 700x700 with 1 Axes>

In [60]: f2
Out[60]: <Figure size 700x700 with 1 Axes>

In [61]: f, axs = plt.subplots(nrows=2, ncols=2)

In [62]: axs
Out[62]:
array([[<matplotlib.axes._subplots.AxesSubplot object at 0x7f4a341ec1d0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7f4a343b32e8>],
       [<matplotlib.axes._subplots.AxesSubplot object at 0x7f4a34056be0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7f4a34135390>]],
      dtype=object)

In [63]: type(axs)
Out[63]: numpy.ndarray

In [64]: axs.shape
Out[64]: (2, 2)

In [65]: axs[0, 0].plot(t, s)
Out[65]: [<matplotlib.lines.Line2D at 0x7f4a15130748>]

In [66]: axs[0, 1].plot(t, c)
Out[66]: [<matplotlib.lines.Line2D at 0x7f4a152fbb70>]

In [67]: axs[1, 0].plot(t, c)
Out[67]: [<matplotlib.lines.Line2D at 0x7f4a15116470>]

In [68]: axs[1, 1].plot(t, s)
Out[68]: [<matplotlib.lines.Line2D at 0x7f4a153166d8>]

In [69]: axs[0, 0].plot(t, c)
Out[69]: [<matplotlib.lines.Line2D at 0x7f4a15130208>]

In [70]: f.canvas.set_window_title('4x4 subplots')

In [71]: axs
Out[71]:
array([[<matplotlib.axes._subplots.AxesSubplot object at 0x7f4a341ec1d0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7f4a343b32e8>],
       [<matplotlib.axes._subplots.AxesSubplot object at 0x7f4a34056be0>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x7f4a34135390>]],
      dtype=object)

In [72]: plt.close('all')

In [73]: f, ax = plt.subplots()

In [74]: ax.plot(t, s, '.')
Out[74]: [<matplotlib.lines.Line2D at 0x7f4a155399b0>]

In [75]: ax.clear()

In [76]: ax.scatter(t, s, '.')
------------------------------------------------------------------------
TypeError                              Traceback (most recent call last)
<ipython-input-76-1b881aa5ab73> in <module>
----> 1 ax.scatter(t, s, '.')

/usr/local/lib/python3.6/dist-packages/matplotlib/__init__.py in inner(ax, data, *args, **kwargs)
   1808                         "the Matplotlib list!)" % (label_namer, func.__name__),
   1809                         RuntimeWarning, stacklevel=2)
-> 1810             return func(ax, *args, **kwargs)
   1811
   1812         inner.__doc__ = _add_data_doc(inner.__doc__,

/usr/local/lib/python3.6/dist-packages/matplotlib/axes/_axes.py in scatter(self, x, y, s, c, marker, cmap, norm, vmin, vmax, alpha, linewidths, verts, edgecolors, **kwargs)
   4295                 offsets=offsets,
   4296                 transOffset=kwargs.pop('transform', self.transData),
-> 4297                 alpha=alpha
   4298                 )
   4299         collection.set_transform(mtransforms.IdentityTransform())

/usr/local/lib/python3.6/dist-packages/matplotlib/collections.py in __init__(self, paths, sizes, **kwargs)
    899         Collection.__init__(self, **kwargs)
    900         self.set_paths(paths)
--> 901         self.set_sizes(sizes)
    902         self.stale = True
    903

/usr/local/lib/python3.6/dist-packages/matplotlib/collections.py in set_sizes(self, sizes, dpi)
    872             self._sizes = np.asarray(sizes)
    873             self._transforms = np.zeros((len(self._sizes), 3, 3))
--> 874             scale = np.sqrt(self._sizes) * dpi / 72.0 * self._factor
    875             self._transforms[:, 0, 0] = scale
    876             self._transforms[:, 1, 1] = scale

TypeError: ufunc 'sqrt' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''
> /usr/local/lib/python3.6/dist-packages/matplotlib/collections.py(874)set_sizes()
    872             self._sizes = np.asarray(sizes)
    873             self._transforms = np.zeros((len(self._sizes), 3, 3))
--> 874             scale = np.sqrt(self._sizes) * dpi / 72.0 * self._factor
    875             self._transforms[:, 0, 0] = scale
    876             self._transforms[:, 1, 1] = scale

ipdb> c

In [77]: ax.scatter(t, s)
Out[77]: <matplotlib.collections.PathCollection at 0x7f4a155395f8>

In [78]: f, ax = plt.subplots()

In [79]: ax.scatter(t, s)
Out[79]: <matplotlib.collections.PathCollection at 0x7f4a1554ef28>

In [80]: x, y = np.random.random(100), np.random.random(100)

In [81]: c = np.random.random(100)

In [82]: f, ax = plt.subplots()

In [83]: c
Out[83]:
array([8.24597276e-01, 4.34971428e-01, 3.26187926e-01, 6.76994068e-01,
       3.04489162e-01, 4.50534035e-01, 8.29533643e-01, 5.60844636e-01,
       5.94862714e-02, 4.63659676e-01, 3.56616079e-01, 9.77061489e-01,
       8.85780277e-01, 3.50952539e-02, 9.63608125e-01, 8.19824729e-01,
       5.74985244e-01, 5.29188333e-02, 2.89679138e-01, 6.59238103e-01,
       9.77636222e-01, 6.31559433e-01, 2.21441588e-01, 3.95785416e-01,
       6.27240334e-01, 8.27222442e-01, 1.36702388e-01, 2.60367819e-01,
       1.29003913e-01, 8.63326408e-02, 6.05533535e-01, 2.23961100e-01,
       5.77281418e-01, 8.19401173e-01, 3.74593872e-01, 5.07163302e-01,
       5.52223480e-01, 8.75983514e-01, 3.24168577e-02, 5.04279297e-01,
       6.27312446e-01, 6.69497770e-01, 7.98108982e-01, 9.72353786e-01,
       4.31100841e-02, 6.25673018e-04, 1.88594171e-01, 9.84688096e-01,
       5.07103023e-01, 9.11836510e-01, 4.55466596e-01, 6.23885814e-01,
       9.50024659e-01, 5.35508152e-01, 7.50095164e-01, 3.06252028e-01,
       7.07141793e-01, 6.99353203e-01, 6.31955525e-01, 5.21327146e-01,
       1.31261960e-03, 6.27356259e-01, 3.12528456e-01, 8.23278668e-01,
       4.08723001e-01, 3.52058718e-01, 9.35366752e-02, 7.47477082e-01,
       9.08429392e-01, 6.55336420e-01, 3.28996150e-01, 8.82928923e-01,
       2.04145134e-02, 3.32772702e-01, 8.99825164e-02, 4.98800269e-02,
       5.08051392e-01, 2.35078150e-01, 2.22464789e-01, 4.20453990e-01,
       2.83524523e-01, 5.82435476e-02, 1.96857745e-01, 4.46200517e-02,
       9.09131705e-02, 8.68308959e-01, 2.52337633e-01, 9.81336744e-01,
       9.01825995e-01, 9.80958375e-01, 6.62239971e-01, 7.89949549e-01,
       1.15196005e-01, 4.03884299e-02, 3.10218839e-01, 8.91231548e-01,
       7.65827697e-01, 2.46178513e-01, 3.35084741e-01, 5.19896763e-01])

In [84]: x
Out[84]:
array([8.55100396e-01, 1.58594009e-01, 3.27503153e-01, 8.64699095e-01,
       1.78771955e-01, 4.95847167e-01, 5.13637504e-01, 6.51826659e-01,
       9.15588938e-01, 6.93370785e-01, 8.10410932e-02, 4.59539421e-01,
       8.24562781e-01, 9.28962715e-01, 8.39013689e-01, 1.58149279e-02,
       2.20807913e-01, 4.12375555e-01, 8.33746383e-01, 1.40679352e-01,
       4.55043251e-04, 9.71769154e-01, 7.40831047e-01, 5.02624789e-01,
       2.27711863e-01, 7.48097842e-01, 8.61224917e-01, 9.74690655e-01,
       6.49603967e-01, 2.67615260e-01, 8.50289288e-01, 2.02149851e-02,
       5.92997453e-01, 2.71911017e-01, 7.12306202e-01, 4.93448255e-02,
       1.53443792e-01, 6.64282666e-02, 3.95988681e-01, 7.17483513e-01,
       3.54687525e-01, 4.23345420e-01, 5.74177077e-01, 6.49740766e-01,
       8.54858580e-01, 7.03581887e-02, 5.33105214e-01, 4.89166748e-01,
       2.74905698e-01, 9.39450023e-01, 7.24967960e-01, 5.31268282e-02,
       6.82660254e-02, 8.93311801e-01, 2.59028597e-01, 8.53531561e-01,
       6.02805638e-01, 7.08498212e-01, 2.13608184e-01, 5.92243826e-01,
       9.27627122e-01, 1.23464505e-01, 5.94582621e-01, 3.91359927e-01,
       3.71928980e-01, 1.63303840e-01, 2.10456704e-01, 8.33196766e-01,
       8.57267656e-02, 6.14217567e-01, 2.78200039e-02, 5.11395864e-01,
       7.22433207e-01, 2.20947578e-01, 2.33324980e-01, 2.28682239e-02,
       7.43351454e-01, 6.95209470e-01, 1.57303211e-01, 8.79688258e-01,
       1.93247129e-01, 6.29005794e-01, 1.23230752e-01, 5.61874731e-01,
       3.67195408e-01, 2.20848915e-01, 9.57444180e-01, 6.36615920e-01,
       3.14811954e-01, 2.50568044e-02, 7.89320591e-01, 6.15073840e-02,
       5.51072244e-01, 7.51956915e-01, 5.08423805e-02, 7.38604878e-01,
       7.80291818e-01, 2.68301939e-01, 1.65072525e-01, 9.27831666e-01])

In [85]: y
Out[85]:
array([0.03884144, 0.1498403 , 0.92527421, 0.0642212 , 0.27211624,
       0.30316282, 0.92910798, 0.58372747, 0.53814323, 0.58721423,
       0.4813679 , 0.87025705, 0.17670274, 0.79192092, 0.19144453,
       0.50338202, 0.10745807, 0.31504723, 0.10826202, 0.81358053,
       0.91004733, 0.53403937, 0.12735727, 0.99421094, 0.96659202,
       0.10892312, 0.43141311, 0.49645467, 0.55411783, 0.63967562,
       0.63282972, 0.57861364, 0.88618736, 0.98042335, 0.0517609 ,
       0.16191003, 0.42401546, 0.03225157, 0.01537982, 0.1234917 ,
       0.00608029, 0.89180549, 0.60227505, 0.84680682, 0.56609263,
       0.21784937, 0.53308869, 0.4648719 , 0.28484426, 0.82824246,
       0.8528927 , 0.12391831, 0.39043488, 0.48629593, 0.57737608,
       0.03212655, 0.80666513, 0.4746646 , 0.45776089, 0.22405894,
       0.91262106, 0.90254537, 0.46402499, 0.9036825 , 0.97035332,
       0.07184108, 0.23772081, 0.21921425, 0.3583178 , 0.9075764 ,
       0.53345419, 0.71424275, 0.38856513, 0.95882783, 0.01698486,
       0.57320009, 0.48834796, 0.43088231, 0.74672294, 0.63715699,
       0.7611432 , 0.50599562, 0.3675821 , 0.86108078, 0.71290046,
       0.93784671, 0.43666686, 0.42906905, 0.43727434, 0.66927479,
       0.05144799, 0.32479681, 0.6805618 , 0.86965837, 0.85144984,
       0.12983977, 0.96337267, 0.59084289, 0.06671812, 0.02822058])

In [86]: ax.scatter(x, y, c=c)
Out[86]: <matplotlib.collections.PathCollection at 0x7f4a34071f98>

In [87]: plt.close('all')

In [88]: f, ax = plt.subplots()

In [89]: ax.errorbar?

In [90]: ax.errorbar(x, y, yerr=0.1, xerr=0.2)
Out[90]: <ErrorbarContainer object of 3 artists>

In [91]: ax.errorbar(x, y, '.', yerr=0.1, xerr=0.2)
------------------------------------------------------------------------
TypeError                              Traceback (most recent call last)
<ipython-input-91-49f07003089c> in <module>
----> 1 ax.errorbar(x, y, '.', yerr=0.1, xerr=0.2)

/usr/local/lib/python3.6/dist-packages/matplotlib/__init__.py in inner(ax, data, *args, **kwargs)
   1808                         "the Matplotlib list!)" % (label_namer, func.__name__),
   1809                         RuntimeWarning, stacklevel=2)
-> 1810             return func(ax, *args, **kwargs)
   1811
   1812         inner.__doc__ = _add_data_doc(inner.__doc__,

TypeError: errorbar() got multiple values for argument 'yerr'
> /usr/local/lib/python3.6/dist-packages/matplotlib/__init__.py(1810)inner()
   1808                         "the Matplotlib list!)" % (label_namer, func.__name__),
   1809                         RuntimeWarning, stacklevel=2)
-> 1810             return func(ax, *args, **kwargs)
   1811
   1812         inner.__doc__ = _add_data_doc(inner.__doc__,

ipdb> c

In [92]: ax.errorbar(x, y, marker='.', yerr=0.1, xerr=0.2)
Out[92]: <ErrorbarContainer object of 3 artists>

In [93]: f, ax = plt.subplots()

In [94]: ax.errorbar(x, y, marker='.', yerr=0.1, xerr=0.2)
Out[94]: <ErrorbarContainer object of 3 artists>

In [95]: ax.errorbar(x, y, linestyle='', yerr=0.1, xerr=0.2)
Out[95]: <ErrorbarContainer object of 3 artists>

In [96]: f, ax = plt.subplots()

In [97]: ax.errorbar(x, y, linestyle='', yerr=0.1, xerr=0.2)
Out[97]: <ErrorbarContainer object of 3 artists>

In [98]: ax.errorbar?

In [99]: x, y = [1,2,3], [4,5,6]

In [100]: f2, ax2 = plt.subplots()

In [101]: ax.bar(x, height=y)
Out[101]: <BarContainer object of 3 artists>

In [102]: ax2.bar(x, height=y)
Out[102]: <BarContainer object of 3 artists>

In [103]: ax2.barh(y, width=x)
Out[103]: <BarContainer object of 3 artists>

In [104]: ax2
Out[104]: <matplotlib.axes._subplots.AxesSubplot at 0x7f4a5c5a0588>

In [105]: f2
Out[105]: <Figure size 700x700 with 1 Axes>

In [106]: f2.show()

In [107]: plt.close('all')

In [108]: plt.close('all')

In [109]: f2.show()

In [110]: del f2

In [111]: f2.show()
------------------------------------------------------------------------
NameError                              Traceback (most recent call last)
<ipython-input-111-a451452802b5> in <module>
----> 1 f2.show()

NameError: name 'f2' is not defined
> <ipython-input-111-a451452802b5>(1)<module>()
----> 1 f2.show()

ipdb> c

In [112]: plt.close('all')

In [113]: a = np.array([1, 2, 3])

In [114]: a.shape
Out[114]: (3,)

In [115]: a.ndim
Out[115]: 1

In [116]: a = np.array([[1, 2, 3], [4, 5, 6]])

In [117]: a
Out[117]:
array([[1, 2, 3],
       [4, 5, 6]])

In [118]: a.shape
Out[118]: (2, 3)

In [119]: (3,)
Out[119]: (3,)

In [120]: a.ndim
Out[120]: 2

In [121]: a = np.array([[1, 2, 3], [4, 5]])

In [122]: a
Out[122]: array([list([1, 2, 3]), list([4, 5])], dtype=object)

In [123]: a.shape
Out[123]: (2,)

In [124]: a.ndim
Out[124]: 1

In [125]: a = np.array([[1, 2, 3], [4, 5, 6]])

In [126]: a
Out[126]:
array([[1, 2, 3],
       [4, 5, 6]])

In [127]: a = np.arange(16)

In [128]: a
Out[128]: array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15])

In [129]: a.reshape?
Docstring:
a.reshape(shape, order='C')

Returns an array containing the same data with a new shape.

Refer to `numpy.reshape` for full documentation.

See Also
--------
numpy.reshape : equivalent function

Notes
-----
Unlike the free function `numpy.reshape`, this method on `ndarray` allows
the elements of the shape parameter to be passed in as separate arguments.
For example, ``a.reshape(10, 11)`` is equivalent to
``a.reshape((10, 11))``.
Type:      builtin_function_or_method

In [130]: a.reshape((8, 2))
Out[130]:
array([[ 0,  1],
       [ 2,  3],
       [ 4,  5],
       [ 6,  7],
       [ 8,  9],
       [10, 11],
       [12, 13],
       [14, 15]])

In [131]: a
Out[131]: array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15])

In [132]: a = np.arange(16).reshape((8, 2))

In [133]: a
Out[133]:
array([[ 0,  1],
       [ 2,  3],
       [ 4,  5],
       [ 6,  7],
       [ 8,  9],
       [10, 11],
       [12, 13],
       [14, 15]])

In [134]: a.shape
Out[134]: (8, 2)

In [135]: a.ndim
Out[135]: 2

In [136]: a = np.arange(16)

In [137]: a.reshape((8, 3))
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
<ipython-input-137-5470a68528da> in <module>
----> 1 a.reshape((8, 3))

ValueError: cannot reshape array of size 16 into shape (8,3)
> <ipython-input-137-5470a68528da>(1)<module>()
----> 1 a.reshape((8, 3))

ipdb> c

In [138]: a
Out[138]: array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15])

In [139]: a.reshape((4, 4))
Out[139]:
array([[ 0,  1,  2,  3],
       [ 4,  5,  6,  7],
       [ 8,  9, 10, 11],
       [12, 13, 14, 15]])

In [140]: a.reshape((8, 2))
Out[140]:
array([[ 0,  1],
       [ 2,  3],
       [ 4,  5],
       [ 6,  7],
       [ 8,  9],
       [10, 11],
       [12, 13],
       [14, 15]])

In [141]: a.reshape(8, 2)
Out[141]:
array([[ 0,  1],
       [ 2,  3],
       [ 4,  5],
       [ 6,  7],
       [ 8,  9],
       [10, 11],
       [12, 13],
       [14, 15]])

In [142]: a.reshape?
Docstring:
a.reshape(shape, order='C')

Returns an array containing the same data with a new shape.

Refer to `numpy.reshape` for full documentation.

See Also
--------
numpy.reshape : equivalent function

Notes
-----
Unlike the free function `numpy.reshape`, this method on `ndarray` allows
the elements of the shape parameter to be passed in as separate arguments.
For example, ``a.reshape(10, 11)`` is equivalent to
``a.reshape((10, 11))``.
Type:      builtin_function_or_method

In [143]: a.reshape(8, 2)
Out[143]:
array([[ 0,  1],
       [ 2,  3],
       [ 4,  5],
       [ 6,  7],
       [ 8,  9],
       [10, 11],
       [12, 13],
       [14, 15]])

In [144]: np.zeros(10)
Out[144]: array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])

In [145]: np.zeros?

In [146]: np.zeros((8, 2))
Out[146]:
array([[0., 0.],
       [0., 0.],
       [0., 0.],
       [0., 0.],
       [0., 0.],
       [0., 0.],
       [0., 0.],
       [0., 0.]])

In [147]: np.ones((8, 2))
Out[147]:
array([[1., 1.],
       [1., 1.],
       [1., 1.],
       [1., 1.],
       [1., 1.],
       [1., 1.],
       [1., 1.],
       [1., 1.]])

In [148]: np.random.random?

In [149]: np.random.random((8, 2))
Out[149]:
array([[0.01779557, 0.2250573 ],
       [0.53476204, 0.94188342],
       [0.32341655, 0.71120611],
       [0.68443328, 0.85059966],
       [0.52202917, 0.89846107],
       [0.42319694, 0.37729608],
       [0.47600129, 0.12750133],
       [0.93489426, 0.44106206]])

In [150]: np.random.random((8, 2)).shape
Out[150]: (8, 2)

In [151]: np.tile?

In [152]: np.tile([1, 2], (8, 2))
Out[152]:
array([[1, 2, 1, 2],
       [1, 2, 1, 2],
       [1, 2, 1, 2],
       [1, 2, 1, 2],
       [1, 2, 1, 2],
       [1, 2, 1, 2],
       [1, 2, 1, 2],
       [1, 2, 1, 2]])

In [153]: np.tile([1, 2], (8, 1))
Out[153]:
array([[1, 2],
       [1, 2],
       [1, 2],
       [1, 2],
       [1, 2],
       [1, 2],
       [1, 2],
       [1, 2]])

In [154]: a = np.tile([1, 2], (8, 1))

In [155]: a.fill?
Docstring:
a.fill(value)

Fill the array with a scalar value.

Parameters
----------
value : scalar
    All elements of `a` will be assigned this value.

Examples
--------
>>> a = np.array([1, 2])
>>> a.fill(0)
>>> a
array([0, 0])
>>> a = np.empty(2)
>>> a.fill(1)
>>> a
array([ 1.,  1.])
Type:      builtin_function_or_method

In [156]: a.fill(7)

In [157]: a
Out[157]:
array([[7, 7],
       [7, 7],
       [7, 7],
       [7, 7],
       [7, 7],
       [7, 7],
       [7, 7],
       [7, 7]])

In [158]: a[:] = 10

In [159]: a
Out[159]:
array([[10, 10],
       [10, 10],
       [10, 10],
       [10, 10],
       [10, 10],
       [10, 10],
       [10, 10],
       [10, 10]])

In [160]: np.eye(5)
Out[160]:
array([[1., 0., 0., 0., 0.],
       [0., 1., 0., 0., 0.],
       [0., 0., 1., 0., 0.],
       [0., 0., 0., 1., 0.],
       [0., 0., 0., 0., 1.]])

In [161]: a.shape
Out[161]: (8, 2)

In [162]: a.shape[0]
Out[162]: 8

In [163]: a.shape[1]
Out[163]: 2

In [164]: len(a)
Out[164]: 8

In [165]: a.shape[0]
Out[165]: 8

In [166]: a
Out[166]:
array([[10, 10],
       [10, 10],
       [10, 10],
       [10, 10],
       [10, 10],
       [10, 10],
       [10, 10],
       [10, 10]])

In [167]: a.ravel()
Out[167]: array([10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10])

In [168]: a = np.arange(16)

In [169]: a.reshape((8, 2))
Out[169]:
array([[ 0,  1],
       [ 2,  3],
       [ 4,  5],
       [ 6,  7],
       [ 8,  9],
       [10, 11],
       [12, 13],
       [14, 15]])

In [170]: a = a.reshape((8, 2))

In [171]: a
Out[171]:
array([[ 0,  1],
       [ 2,  3],
       [ 4,  5],
       [ 6,  7],
       [ 8,  9],
       [10, 11],
       [12, 13],
       [14, 15]])

In [172]: a.ravel()
Out[172]: array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15])

In [173]: a.shape
Out[173]: (8, 2)

In [174]: a.size
Out[174]: 16

In [175]: a = np.arange(16)

In [176]: a
Out[176]: array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15])

In [177]: a.size
Out[177]: 16

In [178]: a
Out[178]: array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15])

In [179]: a = a.reshape((8, 2))

In [180]: a
Out[180]:
array([[ 0,  1],
       [ 2,  3],
       [ 4,  5],
       [ 6,  7],
       [ 8,  9],
       [10, 11],
       [12, 13],
       [14, 15]])

In [181]: f, ax = plt.subplots()

In [182]: a
Out[182]:
array([[ 0,  1],
       [ 2,  3],
       [ 4,  5],
       [ 6,  7],
       [ 8,  9],
       [10, 11],
       [12, 13],
       [14, 15]])

In [183]: im = ax.imshow(a)

In [184]: a
Out[184]:
array([[ 0,  1],
       [ 2,  3],
       [ 4,  5],
       [ 6,  7],
       [ 8,  9],
       [10, 11],
       [12, 13],
       [14, 15]])

In [185]: f.colorbar(im)
Out[185]: <matplotlib.colorbar.Colorbar at 0x7f4a5c505e80>

In [186]: ax.set_xticks([])
Out[186]: []

In [187]: ax.set_yticks([])
Out[187]: []

In [188]: f, ax = plt.subplots()

In [189]: im = ax.imshow(a, cmap='jet')

In [190]: f.colorbar(im)
Out[190]: <matplotlib.colorbar.Colorbar at 0x7f4a7ff6a780>

In [191]: im.set_cmap('viridis')

In [192]:  a = np.arange(16)

In [193]: a
Out[193]: array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15])

In [194]: a
Out[194]: array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15])

In [195]: a.reshape((8, 2))
Out[195]:
array([[ 0,  1],
       [ 2,  3],
       [ 4,  5],
       [ 6,  7],
       [ 8,  9],
       [10, 11],
       [12, 13],
       [14, 15]])

In [196]: a.shape = 8, 2

In [197]: a
Out[197]:
array([[ 0,  1],
       [ 2,  3],
       [ 4,  5],
       [ 6,  7],
       [ 8,  9],
       [10, 11],
       [12, 13],
       [14, 15]])

In [198]: a[0, 0]
Out[198]: 0

In [199]: a[2, 1]
Out[199]: 5

In [200]: a[-1, -1]
Out[200]: 15

In [201]: a[2, 2]
---------------------------------------------------------------------------
IndexError                                Traceback (most recent call last)
<ipython-input-201-02ce8881f7de> in <module>
----> 1 a[2, 2]

IndexError: index 2 is out of bounds for axis 1 with size 2
> <ipython-input-201-02ce8881f7de>(1)<module>()
----> 1 a[2, 2]

ipdb> c

In [202]: a[0, :]
Out[202]: array([0, 1])

In [203]: a
Out[203]:
array([[ 0,  1],
       [ 2,  3],
       [ 4,  5],
       [ 6,  7],
       [ 8,  9],
       [10, 11],
       [12, 13],
       [14, 15]])

In [204]: a[0, :]
Out[204]: array([0, 1])

In [205]: a[0]
Out[205]: array([0, 1])

In [206]: a[0,]
Out[206]: array([0, 1])

In [207]: a[0]
Out[207]: array([0, 1])

In [208]: a[:, 1]
Out[208]: array([ 1,  3,  5,  7,  9, 11, 13, 15])

In [209]: a[:, 1].shape
Out[209]: (8,)

In [210]: a
Out[210]:
array([[ 0,  1],
       [ 2,  3],
       [ 4,  5],
       [ 6,  7],
       [ 8,  9],
       [10, 11],
       [12, 13],
       [14, 15]])

In [211]: a[0:2]
Out[211]:
array([[0, 1],
       [2, 3]])

In [212]: a[0:3]
Out[212]:
array([[0, 1],
       [2, 3],
       [4, 5]])

In [213]: a[0:3, :]
Out[213]:
array([[0, 1],
       [2, 3],
       [4, 5]])

In [214]: a[0:3,]
Out[214]:
array([[0, 1],
       [2, 3],
       [4, 5]])

In [215]: a[:3]
Out[215]:
array([[0, 1],
       [2, 3],
       [4, 5]])

In [216]: a[::2]
Out[216]:
array([[ 0,  1],
       [ 4,  5],
       [ 8,  9],
       [12, 13]])

In [217]: a
Out[217]:
array([[ 0,  1],
       [ 2,  3],
       [ 4,  5],
       [ 6,  7],
       [ 8,  9],
       [10, 11],
       [12, 13],
       [14, 15]])

In [218]: a[::2]
Out[218]:
array([[ 0,  1],
       [ 4,  5],
       [ 8,  9],
       [12, 13]])

In [219]: a[::2, 0]
Out[219]: array([ 0,  4,  8, 12])

In [220]: a
Out[220]:
array([[ 0,  1],
       [ 2,  3],
       [ 4,  5],
       [ 6,  7],
       [ 8,  9],
       [10, 11],
       [12, 13],
       [14, 15]])

In [221]: b = np.arange(10)

In [222]: b
Out[222]: array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])

In [223]: b[::2]
Out[223]: array([0, 2, 4, 6, 8])

In [224]: b[::-1]
Out[224]: array([9, 8, 7, 6, 5, 4, 3, 2, 1, 0])

In [225]: a
Out[225]:
array([[ 0,  1],
       [ 2,  3],
       [ 4,  5],
       [ 6,  7],
       [ 8,  9],
       [10, 11],
       [12, 13],
       [14, 15]])

In [226]: a[::-1]
Out[226]:
array([[14, 15],
       [12, 13],
       [10, 11],
       [ 8,  9],
       [ 6,  7],
       [ 4,  5],
       [ 2,  3],
       [ 0,  1]])

In [227]: a[:, ::-1]
Out[227]:
array([[ 1,  0],
       [ 3,  2],
       [ 5,  4],
       [ 7,  6],
       [ 9,  8],
       [11, 10],
       [13, 12],
       [15, 14]])

In [228]: a[::-1, ::-1]
Out[228]:
array([[15, 14],
       [13, 12],
       [11, 10],
       [ 9,  8],
       [ 7,  6],
       [ 5,  4],
       [ 3,  2],
       [ 1,  0]])

In [229]: a
Out[229]:
array([[ 0,  1],
       [ 2,  3],
       [ 4,  5],
       [ 6,  7],
       [ 8,  9],
       [10, 11],
       [12, 13],
       [14, 15]])

In [230]: a
Out[230]:
array([[ 0,  1],
       [ 2,  3],
       [ 4,  5],
       [ 6,  7],
       [ 8,  9],
       [10, 11],
       [12, 13],
       [14, 15]])

In [231]: np.rot90(a)
Out[231]:
array([[ 1,  3,  5,  7,  9, 11, 13, 15],
       [ 0,  2,  4,  6,  8, 10, 12, 14]])

In [232]: np.rot90(a, -1)
Out[232]:
array([[14, 12, 10,  8,  6,  4,  2,  0],
       [15, 13, 11,  9,  7,  5,  3,  1]])

In [233]: np.rot90(a, 2)
Out[233]:
array([[15, 14],
       [13, 12],
       [11, 10],
       [ 9,  8],
       [ 7,  6],
       [ 5,  4],
       [ 3,  2],
       [ 1,  0]])

In [234]: a.T
Out[234]:
array([[ 0,  2,  4,  6,  8, 10, 12, 14],
       [ 1,  3,  5,  7,  9, 11, 13, 15]])

In [235]: a
Out[235]:
array([[ 0,  1],
       [ 2,  3],
       [ 4,  5],
       [ 6,  7],
       [ 8,  9],
       [10, 11],
       [12, 13],
       [14, 15]])

In [236]: a + 2
Out[236]:
array([[ 2,  3],
       [ 4,  5],
       [ 6,  7],
       [ 8,  9],
       [10, 11],
       [12, 13],
       [14, 15],
       [16, 17]])

In [237]: a - 2
Out[237]:
array([[-2, -1],
       [ 0,  1],
       [ 2,  3],
       [ 4,  5],
       [ 6,  7],
       [ 8,  9],
       [10, 11],
       [12, 13]])

In [238]: a * 2
Out[238]:
array([[ 0,  2],
       [ 4,  6],
       [ 8, 10],
       [12, 14],
       [16, 18],
       [20, 22],
       [24, 26],
       [28, 30]])

In [239]: b = np.random.random(16)

In [240]: b
Out[240]:
array([0.64704134, 0.36925703, 0.0477261 , 0.56931154, 0.12334487,
       0.22585797, 0.77784112, 0.89710431, 0.0244035 , 0.9398572 ,
       0.26998455, 0.93824946, 0.15639548, 0.4997539 , 0.61427731,
       0.22065231])

In [241]: b.shape = 8, 2

In [242]: a
Out[242]:
array([[ 0,  1],
       [ 2,  3],
       [ 4,  5],
       [ 6,  7],
       [ 8,  9],
       [10, 11],
       [12, 13],
       [14, 15]])

In [243]: b
Out[243]:
array([[0.64704134, 0.36925703],
       [0.0477261 , 0.56931154],
       [0.12334487, 0.22585797],
       [0.77784112, 0.89710431],
       [0.0244035 , 0.9398572 ],
       [0.26998455, 0.93824946],
       [0.15639548, 0.4997539 ],
       [0.61427731, 0.22065231]])

In [244]: a.shape
Out[244]: (8, 2)

In [245]: b.shape
Out[245]: (8, 2)

In [246]: a + b
Out[246]:
array([[ 0.64704134,  1.36925703],
       [ 2.0477261 ,  3.56931154],
       [ 4.12334487,  5.22585797],
       [ 6.77784112,  7.89710431],
       [ 8.0244035 ,  9.9398572 ],
       [10.26998455, 11.93824946],
       [12.15639548, 13.4997539 ],
       [14.61427731, 15.22065231]])

In [247]: a - b
Out[247]:
array([[-0.64704134,  0.63074297],
       [ 1.9522739 ,  2.43068846],
       [ 3.87665513,  4.77414203],
       [ 5.22215888,  6.10289569],
       [ 7.9755965 ,  8.0601428 ],
       [ 9.73001545, 10.06175054],
       [11.84360452, 12.5002461 ],
       [13.38572269, 14.77934769]])

In [248]: a * b
Out[248]:
array([[ 0.        ,  0.36925703],
       [ 0.0954522 ,  1.70793461],
       [ 0.49337947,  1.12928987],
       [ 4.66704672,  6.27973017],
       [ 0.19522803,  8.45871479],
       [ 2.69984547, 10.32074406],
       [ 1.87674575,  6.4968007 ],
       [ 8.5998823 ,  3.3097847 ]])

In [249]: a / b
Out[249]:
array([[  0.        ,   2.70814069],
       [ 41.90578965,   5.26952259],
       [ 32.42939986,  22.13780601],
       [  7.71365751,   7.80288303],
       [327.82178441,   9.57592283],
       [ 37.03915686,  11.72396092],
       [ 76.72856049,  26.01280349],
       [ 22.7910096 ,  67.98025265]])

In [250]: a
Out[250]:
array([[ 0,  1],
       [ 2,  3],
       [ 4,  5],
       [ 6,  7],
       [ 8,  9],
       [10, 11],
       [12, 13],
       [14, 15]])

In [251]: b / a
/usr/local/bin/ipython:1: RuntimeWarning: divide by zero encountered in true_divide
  #!/usr/bin/python3
Out[251]:
array([[       inf, 0.36925703],
       [0.02386305, 0.18977051],
       [0.03083622, 0.04517159],
       [0.12964019, 0.12815776],
       [0.00305044, 0.10442858],
       [0.02699845, 0.08529541],
       [0.01303296, 0.03844261],
       [0.04387695, 0.01471015]])

In [252]: np.seterr?

In [253]: np.geterr()
Out[253]: {'divide': 'warn', 'over': 'warn', 'under': 'ignore', 'invalid': 'warn'}

In [254]: np.seterr?

In [255]: x = np.arange(8)

In [256]: x
Out[256]: array([0, 1, 2, 3, 4, 5, 6, 7])

In [257]: a
Out[257]:
array([[ 0,  1],
       [ 2,  3],
       [ 4,  5],
       [ 6,  7],
       [ 8,  9],
       [10, 11],
       [12, 13],
       [14, 15]])

In [258]: a * x
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
<ipython-input-258-6ac118169318> in <module>
----> 1 a * x

ValueError: operands could not be broadcast together with shapes (8,2) (8,)
> <ipython-input-258-6ac118169318>(1)<module>()
----> 1 a * x

ipdb> c

In [259]: a + x
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
<ipython-input-259-3af3ecf0e335> in <module>
----> 1 a + x

ValueError: operands could not be broadcast together with shapes (8,2) (8,)
> <ipython-input-259-3af3ecf0e335>(1)<module>()
----> 1 a + x

ipdb> c

In [260]: a
Out[260]:
array([[ 0,  1],
       [ 2,  3],
       [ 4,  5],
       [ 6,  7],
       [ 8,  9],
       [10, 11],
       [12, 13],
       [14, 15]])

In [261]: a.T
Out[261]:
array([[ 0,  2,  4,  6,  8, 10, 12, 14],
       [ 1,  3,  5,  7,  9, 11, 13, 15]])

In [262]: a.T.shape
Out[262]: (2, 8)

In [263]: a.T + x
Out[263]:
array([[ 0,  3,  6,  9, 12, 15, 18, 21],
       [ 1,  4,  7, 10, 13, 16, 19, 22]])

In [264]: a.T.shape
Out[264]: (2, 8)

In [265]: len(x)
Out[265]: 8

In [266]: a.max()
Out[266]: 15

In [267]: a.min()
Out[267]: 0

In [268]: a.mean()
Out[268]: 7.5

In [269]: a
Out[269]:
array([[ 0,  1],
       [ 2,  3],
       [ 4,  5],
       [ 6,  7],
       [ 8,  9],
       [10, 11],
       [12, 13],
       [14, 15]])

In [270]: a.min?
Docstring:
a.min(axis=None, out=None, keepdims=False)

Return the minimum along a given axis.

Refer to `numpy.amin` for full documentation.

See Also
--------
numpy.amin : equivalent function
Type:      builtin_function_or_method

In [271]: a.min(axis=0)
Out[271]: array([0, 1])

In [272]: a.max(axis=0)
Out[272]: array([14, 15])

In [273]: a.max(axis=1)
Out[273]: array([ 1,  3,  5,  7,  9, 11, 13, 15])

In [274]: a.min(axis=1)
Out[274]: array([ 0,  2,  4,  6,  8, 10, 12, 14])

In [275]: a.min(axis=2)
---------------------------------------------------------------------------
AxisError                                 Traceback (most recent call last)
<ipython-input-275-0554b8b9a5eb> in <module>
----> 1 a.min(axis=2)

/usr/local/lib/python3.6/dist-packages/numpy/core/_methods.py in _amin(a, axis, out, keepdims, initial)
     30 def _amin(a, axis=None, out=None, keepdims=False,
     31           initial=_NoValue):
---> 32     return umr_minimum(a, axis, None, out, keepdims, initial)
     33
     34 def _sum(a, axis=None, dtype=None, out=None, keepdims=False,

AxisError: axis 2 is out of bounds for array of dimension 2
> /usr/local/lib/python3.6/dist-packages/numpy/core/_methods.py(32)_amin()
     30 def _amin(a, axis=None, out=None, keepdims=False,
     31           initial=_NoValue):
---> 32     return umr_minimum(a, axis, None, out, keepdims, initial)
     33
     34 def _sum(a, axis=None, dtype=None, out=None, keepdims=False,

ipdb> c

In [276]: a.T
Out[276]:
array([[ 0,  2,  4,  6,  8, 10, 12, 14],
       [ 1,  3,  5,  7,  9, 11, 13, 15]])

In [277]: a.transpose()
Out[277]:
array([[ 0,  2,  4,  6,  8, 10, 12, 14],
       [ 1,  3,  5,  7,  9, 11, 13, 15]])

In [278]: a.diagonal()
Out[278]: array([0, 3])

In [279]: a.shape = 4, 4

In [280]: a
Out[280]:
array([[ 0,  1,  2,  3],
       [ 4,  5,  6,  7],
       [ 8,  9, 10, 11],
       [12, 13, 14, 15]])

In [281]: a.diagonal()
Out[281]: array([ 0,  5, 10, 15])

In [282]: a.trace()
Out[282]: 30

In [283]: np.dot?

In [284]: b = np.random.random(16)

In [285]: b.shape = 8, 2

In [286]: a = np.arange(16)

In [287]: a.shape = 8, 2

In [288]: a
Out[288]:
array([[ 0,  1],
       [ 2,  3],
       [ 4,  5],
       [ 6,  7],
       [ 8,  9],
       [10, 11],
       [12, 13],
       [14, 15]])

In [289]: b
Out[289]:
array([[0.20432472, 0.35589379],
       [0.25451074, 0.11333256],
       [0.98981202, 0.14512151],
       [0.04001261, 0.12946404],
       [0.1976172 , 0.03576818],
       [0.47786794, 0.889975  ],
       [0.00949944, 0.52118179],
       [0.61876265, 0.92997187]])

In [290]: np.dot(a, b)
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
<ipython-input-290-c9cc415545b4> in <module>
----> 1 np.dot(a, b)

ValueError: shapes (8,2) and (8,2) not aligned: 2 (dim 1) != 8 (dim 0)
> <ipython-input-290-c9cc415545b4>(1)<module>()
----> 1 np.dot(a, b)

ipdb> c

In [291]: np.dot(a, b.T)
Out[291]:
array([[ 0.35589379,  0.11333256,  0.14512151,  0.12946404,  0.03576818,
         0.889975  ,  0.52118179,  0.92997187],
       [ 1.4763308 ,  0.84901916,  2.41498856,  0.46841732,  0.50253893,
         3.62566087,  1.58254424,  4.02744091],
       [ 2.59676782,  1.58470576,  4.68485561,  0.80737061,  0.96930967,
         6.36134675,  2.6439067 ,  7.12490996],
       [ 3.71720483,  2.32039236,  6.95472266,  1.1463239 ,  1.43608042,
         9.09703262,  3.70526916, 10.22237901],
       [ 4.83764184,  3.05607896,  9.22458971,  1.48527719,  1.90285117,
        11.8327185 ,  4.76663162, 13.31984805],
       [ 5.95807885,  3.79176556, 11.49445676,  1.82423048,  2.36962192,
        14.56840437,  5.82799407, 16.4173171 ],
       [ 7.07851587,  4.52745216, 13.76432381,  2.16318376,  2.83639266,
        17.30409025,  6.88935653, 19.51478615],
       [ 8.19895288,  5.26313876, 16.03419086,  2.50213705,  3.30316341,
        20.03977612,  7.95071899, 22.61225519]])

In [292]: np.dot(a, b.T).shape
Out[292]: (8, 8)

In [293]: np.dot(a.T, b)
Out[293]:
array([[19.84463268, 30.04361833],
       [22.63703999, 33.16432705]])

In [294]: a.T @ b
Out[294]:
array([[19.84463268, 30.04361833],
       [22.63703999, 33.16432705]])

In [295]: x = np.arange(10)

In [296]: y = x.copy()

In [297]: x
Out[297]: array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])

In [298]: y
Out[298]: array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])

In [299]: np.outer(x, y)
Out[299]:
array([[ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
       [ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9],
       [ 0,  2,  4,  6,  8, 10, 12, 14, 16, 18],
       [ 0,  3,  6,  9, 12, 15, 18, 21, 24, 27],
       [ 0,  4,  8, 12, 16, 20, 24, 28, 32, 36],
       [ 0,  5, 10, 15, 20, 25, 30, 35, 40, 45],
       [ 0,  6, 12, 18, 24, 30, 36, 42, 48, 54],
       [ 0,  7, 14, 21, 28, 35, 42, 49, 56, 63],
       [ 0,  8, 16, 24, 32, 40, 48, 56, 64, 72],
       [ 0,  9, 18, 27, 36, 45, 54, 63, 72, 81]])

In [300]: np.concatenate?

In [301]: a
Out[301]:
array([[ 0,  1],
       [ 2,  3],
       [ 4,  5],
       [ 6,  7],
       [ 8,  9],
       [10, 11],
       [12, 13],
       [14, 15]])

In [302]: b
Out[302]:
array([[0.20432472, 0.35589379],
       [0.25451074, 0.11333256],
       [0.98981202, 0.14512151],
       [0.04001261, 0.12946404],
       [0.1976172 , 0.03576818],
       [0.47786794, 0.889975  ],
       [0.00949944, 0.52118179],
       [0.61876265, 0.92997187]])

In [303]: np.concatenate([a, b], axis=0)
Out[303]:
array([[0.00000000e+00, 1.00000000e+00],
       [2.00000000e+00, 3.00000000e+00],
       [4.00000000e+00, 5.00000000e+00],
       [6.00000000e+00, 7.00000000e+00],
       [8.00000000e+00, 9.00000000e+00],
       [1.00000000e+01, 1.10000000e+01],
       [1.20000000e+01, 1.30000000e+01],
       [1.40000000e+01, 1.50000000e+01],
       [2.04324715e-01, 3.55893791e-01],
       [2.54510737e-01, 1.13332563e-01],
       [9.89812019e-01, 1.45121506e-01],
       [4.00126086e-02, 1.29464035e-01],
       [1.97617197e-01, 3.57681773e-02],
       [4.77867941e-01, 8.89974997e-01],
       [9.49944331e-03, 5.21181785e-01],
       [6.18762655e-01, 9.29971868e-01]])

In [304]: np.concatenate([a, b], axis=1)
Out[304]:
array([[0.00000000e+00, 1.00000000e+00, 2.04324715e-01, 3.55893791e-01],
       [2.00000000e+00, 3.00000000e+00, 2.54510737e-01, 1.13332563e-01],
       [4.00000000e+00, 5.00000000e+00, 9.89812019e-01, 1.45121506e-01],
       [6.00000000e+00, 7.00000000e+00, 4.00126086e-02, 1.29464035e-01],
       [8.00000000e+00, 9.00000000e+00, 1.97617197e-01, 3.57681773e-02],
       [1.00000000e+01, 1.10000000e+01, 4.77867941e-01, 8.89974997e-01],
       [1.20000000e+01, 1.30000000e+01, 9.49944331e-03, 5.21181785e-01],
       [1.40000000e+01, 1.50000000e+01, 6.18762655e-01, 9.29971868e-01]])

In [305]: np.vstack([a, b])
Out[305]:
array([[0.00000000e+00, 1.00000000e+00],
       [2.00000000e+00, 3.00000000e+00],
       [4.00000000e+00, 5.00000000e+00],
       [6.00000000e+00, 7.00000000e+00],
       [8.00000000e+00, 9.00000000e+00],
       [1.00000000e+01, 1.10000000e+01],
       [1.20000000e+01, 1.30000000e+01],
       [1.40000000e+01, 1.50000000e+01],
       [2.04324715e-01, 3.55893791e-01],
       [2.54510737e-01, 1.13332563e-01],
       [9.89812019e-01, 1.45121506e-01],
       [4.00126086e-02, 1.29464035e-01],
       [1.97617197e-01, 3.57681773e-02],
       [4.77867941e-01, 8.89974997e-01],
       [9.49944331e-03, 5.21181785e-01],
       [6.18762655e-01, 9.29971868e-01]])

In [306]: np.hstack([a, b])
Out[306]:
array([[0.00000000e+00, 1.00000000e+00, 2.04324715e-01, 3.55893791e-01],
       [2.00000000e+00, 3.00000000e+00, 2.54510737e-01, 1.13332563e-01],
       [4.00000000e+00, 5.00000000e+00, 9.89812019e-01, 1.45121506e-01],
       [6.00000000e+00, 7.00000000e+00, 4.00126086e-02, 1.29464035e-01],
       [8.00000000e+00, 9.00000000e+00, 1.97617197e-01, 3.57681773e-02],
       [1.00000000e+01, 1.10000000e+01, 4.77867941e-01, 8.89974997e-01],
       [1.20000000e+01, 1.30000000e+01, 9.49944331e-03, 5.21181785e-01],
       [1.40000000e+01, 1.50000000e+01, 6.18762655e-01, 9.29971868e-01]])

In [307]: np.stack?

In [308]: c = np.stack([a, b])

In [309]: c
Out[309]:
array([[[0.00000000e+00, 1.00000000e+00],
        [2.00000000e+00, 3.00000000e+00],
        [4.00000000e+00, 5.00000000e+00],
        [6.00000000e+00, 7.00000000e+00],
        [8.00000000e+00, 9.00000000e+00],
        [1.00000000e+01, 1.10000000e+01],
        [1.20000000e+01, 1.30000000e+01],
        [1.40000000e+01, 1.50000000e+01]],

       [[2.04324715e-01, 3.55893791e-01],
        [2.54510737e-01, 1.13332563e-01],
        [9.89812019e-01, 1.45121506e-01],
        [4.00126086e-02, 1.29464035e-01],
        [1.97617197e-01, 3.57681773e-02],
        [4.77867941e-01, 8.89974997e-01],
        [9.49944331e-03, 5.21181785e-01],
        [6.18762655e-01, 9.29971868e-01]]])

In [310]: c.ndim
Out[310]: 3

In [311]: c.shape
Out[311]: (2, 8, 2)

In [312]: c.size
Out[312]: 32

In [313]: c[1, 0, 0]
Out[313]: 0.204324715269117

In [314]: pwd
Out[314]: '/home/mspacek/SciPyCourse2019/notes/homework3'

In [315]: cd ../07_mpl_matrices/
/home/mspacek/SciPyCourse2019/notes/07_mpl_matrices

In [316]: ls
07_mpl_matrices.md  07_mpl_matrices.pdf  matplotlibrc.txt  surprise.npy  surprise.png

In [317]: d = np.load('surprise.npy')

In [318]: d
Out[318]:
array([[0, 0, 0, ..., 0, 0, 0],
       [0, 0, 0, ..., 0, 0, 0],
       [0, 0, 0, ..., 0, 0, 0],
       ...,
       [0, 0, 0, ..., 0, 0, 0],
       [0, 0, 0, ..., 0, 0, 0],
       [0, 0, 0, ..., 0, 0, 0]], dtype=uint8)

In [319]: d.shape
Out[319]: (1024, 1024)

In [320]: d.ndim
Out[320]: 2

In [321]: d
Out[321]:
array([[0, 0, 0, ..., 0, 0, 0],
       [0, 0, 0, ..., 0, 0, 0],
       [0, 0, 0, ..., 0, 0, 0],
       ...,
       [0, 0, 0, ..., 0, 0, 0],
       [0, 0, 0, ..., 0, 0, 0],
       [0, 0, 0, ..., 0, 0, 0]], dtype=uint8)

In [322]: d[:80, :80]
Out[322]:
array([[0, 0, 0, ..., 0, 0, 0],
       [0, 0, 0, ..., 0, 0, 0],
       [0, 0, 0, ..., 0, 0, 0],
       ...,
       [0, 0, 0, ..., 0, 0, 0],
       [0, 0, 0, ..., 0, 0, 0],
       [0, 0, 0, ..., 0, 0, 0]], dtype=uint8)

In [323]: d[::80, ::80]
Out[323]:
array([[  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],
       [  0,   0,   0,   0,   0,   0, 182, 182,   0,   0,   0,   0,   0],
       [  0,   0,   0, 182, 182, 182, 182, 182, 182, 182,   0,   0,   0],
       [  0,   0, 182, 182, 182, 182, 182, 182, 182, 182, 182,   0,   0],
       [  0,   0, 182, 182,  99, 160, 182, 182, 182, 182, 182, 182,   0],
       [  0, 182, 182, 182,  99,  99, 182, 182,  99,  99, 182, 182, 182],
       [  0, 182, 182, 182,  99, 182, 182, 182, 182, 182, 182, 182, 182],
       [  0, 182, 182, 182, 182, 182, 182, 162, 162, 162, 182, 182, 182],
       [  0, 182, 182, 162, 162, 162, 162, 162, 162, 162, 162, 182, 182],
       [  0, 182, 182, 162, 162, 162, 162, 162, 162, 162, 162, 182, 182],
       [  0, 182, 182, 182, 182, 182, 182, 182, 162, 162, 182, 182, 182],
       [  0,   0, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182,   0],
       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0]],
      dtype=uint8)

In [324]: f, ax = plt.subplots()

In [325]: im = ax.imshow(d)

In [326]: im.set_cmap('jet')

In [327]: im.set_cmap('gray')

In [328]: f.colobar(im)
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-328-9fc520942480> in <module>
----> 1 f.colobar(im)

AttributeError: 'Figure' object has no attribute 'colobar'
> <ipython-input-328-9fc520942480>(1)<module>()
----> 1 f.colobar(im)

ipdb> c

In [329]: f.colorbar(im)
Out[329]: <matplotlib.colorbar.Colorbar at 0x7f4a5d34c048>

In [330]: f2, axs = plt.subplot(nrows=2, ncols=2)
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-330-0b68382b9016> in <module>
----> 1 f2, axs = plt.subplot(nrows=2, ncols=2)

/usr/local/lib/python3.6/dist-packages/matplotlib/pyplot.py in subplot(*args, **kwargs)
   1082
   1083     fig = gcf()
-> 1084     a = fig.add_subplot(*args, **kwargs)
   1085     bbox = a.bbox
   1086     byebye = []

/usr/local/lib/python3.6/dist-packages/matplotlib/figure.py in add_subplot(self, *args, **kwargs)
   1365                     self._axstack.remove(ax)
   1366
-> 1367             a = subplot_class_factory(projection_class)(self, *args, **kwargs)
   1368         self._axstack.add(key, a)
   1369         self.sca(a)

/usr/local/lib/python3.6/dist-packages/matplotlib/axes/_subplots.py in __init__(self, fig, *args, **kwargs)
     68
     69         # _axes_class is set in the subplot_class_factory
---> 70         self._axes_class.__init__(self, fig, self.figbox, **kwargs)
     71         # add a layout box to this, for both the full axis, and the poss
     72         # of the axis.  We need both because the axes may become smaller

/usr/local/lib/python3.6/dist-packages/matplotlib/axes/_base.py in __init__(self, fig, rect, facecolor, frameon, sharex, sharey, label, xscale, yscale, **kwargs)
    504             self.set_yscale(yscale)
    505
--> 506         self.update(kwargs)
    507
    508         if self.xaxis is not None:

/usr/local/lib/python3.6/dist-packages/matplotlib/artist.py in update(self, props)
    914
    915         with cbook._setattr_cm(self, eventson=False):
--> 916             ret = [_update_property(self, k, v) for k, v in props.items()]
    917
    918         if len(ret):

/usr/local/lib/python3.6/dist-packages/matplotlib/artist.py in <listcomp>(.0)
    914
    915         with cbook._setattr_cm(self, eventson=False):
--> 916             ret = [_update_property(self, k, v) for k, v in props.items()]
    917
    918         if len(ret):

/usr/local/lib/python3.6/dist-packages/matplotlib/artist.py in _update_property(self, k, v)
    910                 func = getattr(self, 'set_' + k, None)
    911                 if not callable(func):
--> 912                     raise AttributeError('Unknown property %s' % k)
    913                 return func(v)
    914

AttributeError: Unknown property nrows
> /usr/local/lib/python3.6/dist-packages/matplotlib/artist.py(912)_update_property()
    910                 func = getattr(self, 'set_' + k, None)
    911                 if not callable(func):
--> 912                     raise AttributeError('Unknown property %s' % k)
    913                 return func(v)
    914

ipdb> c

In [331]: f2, axs = plt.subplots(nrows=2, ncols=2)

In [332]: for rowi in range(2):
     ...:     for coli in range(2):
     ...:         d = np.rot90(d)
     ...:         axs[rowi, coli].imshow(d)
     ...:

In [333]: for (i, j), val in enumerate(axs):
     ...:     print(i, j, val)
     ...:
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-333-127c7bdc6b29> in <module>
----> 1 for (i, j), val in enumerate(axs):
      2     print(i, j, val)
      3

TypeError: 'int' object is not iterable
> <ipython-input-333-127c7bdc6b29>(1)<module>()
----> 1 for (i, j), val in enumerate(axs):
      2     print(i, j, val)
      3

ipdb> c

In [334]: enumerate?
Init signature: enumerate(self, /, *args, **kwargs)
Docstring:
enumerate(iterable[, start]) -> iterator for index, value of iterable

Return an enumerate object.  iterable must be another object that supports
iteration.  The enumerate object yields pairs containing a count (from
start, which defaults to zero) and a value yielded by the iterable argument.
enumerate is useful for obtaining an indexed list:
    (0, seq[0]), (1, seq[1]), (2, seq[2]), ...
Type:           type
Subclasses:

In [335]: f, ax = plt.subplots()

In [336]: ax.imshow(d.T)
Out[336]: <matplotlib.image.AxesImage at 0x7f4a5cf09e80>

In [337]: q = np.tile(d, (2, 2))

In [338]: q.shape
Out[338]: (2048, 2048)

In [339]: f, ax = plt.subplots()

In [340]: ax.imshow(q)
Out[340]: <matplotlib.image.AxesImage at 0x7f4a802200b8>

In [341]:
